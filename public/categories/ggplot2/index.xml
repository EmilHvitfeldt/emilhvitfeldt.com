<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggplot2 | Academic</title>
    <link>/categories/ggplot2/</link>
      <atom:link href="/categories/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    <description>ggplot2</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 17 Mar 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>ggplot2</title>
      <link>/categories/ggplot2/</link>
    </image>
    
    <item>
      <title>Word Rank Slope Charts</title>
      <link>/2020/03/17/word-rank-slope-charts/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/2020/03/17/word-rank-slope-charts/</guid>
      <description>


&lt;p&gt;I have been working on visualizing how different kinds of words are used in texts and I finally found a good visualization style with the &lt;a href=&#34;https://datavizproject.com/data-type/slope-chart/&#34;&gt;slope chart&lt;/a&gt;.
More specifically I‚Äôm thinking of two groups of paired words.&lt;/p&gt;
&lt;div id=&#34;packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages üì¶&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(hcandersenr)
library(tidytext)
library(paletteer)
library(ggrepel)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;minimal-example-1Ô∏è‚É£&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Minimal Example 1Ô∏è‚É£&lt;/h2&gt;
&lt;p&gt;First I‚Äôll walk you through a minimal example of how the chart is created.
Afterward, I have created a function to automate the whole procedure so we can quickly iterate.
We start by an example of gendered words in fairly tales by H.C. Andersen using the &lt;a href=&#34;https://github.com/EmilHvitfeldt/hcandersenr&#34;&gt;hcandersenr&lt;/a&gt; package.
We start by generating a data.frame of paired words.
This is easily done using the &lt;code&gt;tribble()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender_words &amp;lt;- tribble(
  ~men, ~women,
  &amp;quot;he&amp;quot;, &amp;quot;she&amp;quot;,
  &amp;quot;his&amp;quot;, &amp;quot;her&amp;quot;,
  &amp;quot;man&amp;quot;, &amp;quot;woman&amp;quot;,
  &amp;quot;men&amp;quot;, &amp;quot;women&amp;quot;,
  &amp;quot;boy&amp;quot;, &amp;quot;girl&amp;quot;,
  &amp;quot;he&amp;#39;s&amp;quot;, &amp;quot;she&amp;#39;s&amp;quot;,
  &amp;quot;he&amp;#39;d&amp;quot;, &amp;quot;she&amp;#39;d&amp;quot;,
  &amp;quot;he&amp;#39;ll&amp;quot;, &amp;quot;she&amp;#39;ll&amp;quot;,
  &amp;quot;himself&amp;quot;, &amp;quot;herself&amp;quot;
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we are going to tokenize and count the tokens in the corpus,&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ordered_words &amp;lt;- hcandersen_en %&amp;gt;% 
  unnest_tokens(word, text) %&amp;gt;% 
  count(word, sort = TRUE) %&amp;gt;% 
  pull(word)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we are going to get the index for each word, which we will put on a log scale since it will be &lt;a href=&#34;https://en.wikipedia.org/wiki/Zipf%27s_law&#34;&gt;easier to visualize&lt;/a&gt;.
Next, we will calculate a slope between the points and add the correct labels.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender_words_plot &amp;lt;- gender_words %&amp;gt;%
  mutate(male_index = match(men, ordered_words),
         female_index = match(women, ordered_words)) %&amp;gt;%
  mutate(slope = log10(male_index) - log10(female_index)) %&amp;gt;%
  pivot_longer(male_index:female_index) %&amp;gt;%
  mutate(value = log10(value),
         label = ifelse(name == &amp;quot;male_index&amp;quot;, men, women)) %&amp;gt;%
  mutate(name = factor(name, c(&amp;quot;male_index&amp;quot;, &amp;quot;female_index&amp;quot;), c(&amp;quot;men&amp;quot;, &amp;quot;women&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we are going to manually calculate the limits to make sure a diverging color scale will have the colors &lt;a href=&#34;https://www.hvitfeldt.me/blog/center-continuous-palettes-in-ggplot2/&#34;&gt;done directly&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;limit &amp;lt;- max(abs(gender_words_plot$slope)) * c(-1, 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lastly, we just put everything into ggplot2 and voila!!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;gender_words_plot %&amp;gt;%
  ggplot(aes(name, value, group = women, label = label)) +
  geom_line(aes(color = slope)) +
  scale_y_reverse(labels = function(x) 10 ^ x) +
  geom_text() +
  guides(color = &amp;quot;none&amp;quot;) +
  scale_color_distiller(type = &amp;quot;div&amp;quot;, limit = limit) +
  theme_minimal() +
  theme(panel.border = element_blank(), panel.grid.major.x = element_blank()) +
  labs(x = NULL, y = &amp;quot;Word Rank&amp;quot;) +
  labs(title = &amp;quot;Masculine gendered words appeared more often in H.C. Andersen&amp;#39;s fairy tales&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-word-rank-slope-charts/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;make-it-into-a-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Make it into a function ‚ú®&lt;/h2&gt;
&lt;p&gt;This function is mostly the same as the code you saw earlier.
Main difference is using &lt;code&gt;.data&lt;/code&gt; from &lt;a href=&#34;https://rlang.r-lib.org/reference/tidyeval-data.html&#34;&gt;rlang&lt;/a&gt; to generalize.
The function also includes other beautifications such as improved themes and theme support with &lt;a href=&#34;https://github.com/EmilHvitfeldt/paletteer&#34;&gt;paletteer&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_fun &amp;lt;- function(words, ref, palette = &amp;quot;scico::roma&amp;quot;, ...) {
  
  names &amp;lt;- colnames(ref)
  
  ordered_words &amp;lt;- names(sort(table(words), decreasing = TRUE))

  plot_data &amp;lt;- ref %&amp;gt;%
    mutate(index1 = match(.data[[names[1]]], ordered_words),
           index2 = match(.data[[names[2]]], ordered_words)) %&amp;gt;%
    mutate(slope = log10(index1) - log10(index2)) %&amp;gt;%
    pivot_longer(index1:index2) %&amp;gt;%
    mutate(value = log10(value),
           label = ifelse(name == &amp;quot;index1&amp;quot;, 
                          .data[[names[1]]], 
                          .data[[names[2]]]),
           name = factor(name, c(&amp;quot;index1&amp;quot;, &amp;quot;index2&amp;quot;), names))
  
  limit &amp;lt;- max(abs(plot_data$slope)) * c(-1, 1)

  plot_data %&amp;gt;%
    ggplot(aes(name, value, group = .data[[names[2]]], label = label)) +
    geom_line(aes(color = slope), size = 1) +
    scale_y_reverse(labels = function(x) round(10 ^ x)) +
    geom_text_repel(data = subset(plot_data, name == names[1]),
                    aes(segment.color = slope),
                    nudge_x       = -0.1,
                    segment.size  = 1,
                    direction     = &amp;quot;y&amp;quot;,
                    hjust         = 1) + 
    geom_text_repel(data = subset(plot_data, name == names[2]),
                    aes(segment.color = slope),
                    nudge_x       = 0.1,
                    segment.size  = 1,
                    direction     = &amp;quot;y&amp;quot;,
                    hjust         = 0) + 
    scale_color_paletteer_c(palette, 
                            limit = limit,
                            aesthetics = c(&amp;quot;color&amp;quot;, &amp;quot;segment.color&amp;quot;), 
                            ...) +
    guides(color = &amp;quot;none&amp;quot;, segment.color = &amp;quot;none&amp;quot;) +
    theme_minimal() +
    theme(panel.border = element_blank(), 
          panel.grid.major.x = element_blank(), axis.text.x = element_text(size = 15)) +
    labs(x = NULL, y = &amp;quot;Word Rank&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can recreate the previous chart with ease&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ref &amp;lt;- tribble(
  ~Men, ~Women,
  &amp;quot;he&amp;quot;, &amp;quot;she&amp;quot;,
  &amp;quot;his&amp;quot;, &amp;quot;her&amp;quot;,
  &amp;quot;man&amp;quot;, &amp;quot;woman&amp;quot;,
  &amp;quot;men&amp;quot;, &amp;quot;women&amp;quot;,
  &amp;quot;boy&amp;quot;, &amp;quot;girl&amp;quot;,
  &amp;quot;he&amp;#39;s&amp;quot;, &amp;quot;she&amp;#39;s&amp;quot;,
  &amp;quot;he&amp;#39;d&amp;quot;, &amp;quot;she&amp;#39;d&amp;quot;,
  &amp;quot;he&amp;#39;ll&amp;quot;, &amp;quot;she&amp;#39;ll&amp;quot;,
  &amp;quot;himself&amp;quot;, &amp;quot;herself&amp;quot;
)

words &amp;lt;- hcandersen_en %&amp;gt;% 
  unnest_tokens(word, text) %&amp;gt;%
  pull(word)

plot_fun(words, ref, direction = -1) +
  labs(title = &amp;quot;Masculine gendered words appeared more often in H.C. Andersen&amp;#39;s fairy tales&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: segment.colour

## Warning: Ignoring unknown aesthetics: segment.colour&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-word-rank-slope-charts/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gallery&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Gallery üñº&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ref &amp;lt;- tribble(
  ~Men, ~Women,
  &amp;quot;he&amp;quot;, &amp;quot;she&amp;quot;,
  &amp;quot;his&amp;quot;, &amp;quot;her&amp;quot;,
  &amp;quot;man&amp;quot;, &amp;quot;woman&amp;quot;,
  &amp;quot;men&amp;quot;, &amp;quot;women&amp;quot;,
  &amp;quot;boy&amp;quot;, &amp;quot;girl&amp;quot;,
  &amp;quot;himself&amp;quot;, &amp;quot;herself&amp;quot;
)

words &amp;lt;- janeaustenr::austen_books() %&amp;gt;% 
  unnest_tokens(word, text) %&amp;gt;%
  pull(word)

plot_fun(words, ref, direction = -1) +
  labs(title = &amp;quot;Masculine gendered words appeared less often in Jane Austen Novels&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: segment.colour

## Warning: Ignoring unknown aesthetics: segment.colour&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-word-rank-slope-charts/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;More examples using the &lt;a href=&#34;https://github.com/EmilHvitfeldt/tidygutenbergr&#34;&gt;tidygutenbergr&lt;/a&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ref &amp;lt;- tribble(
  ~Men, ~Women,
  &amp;quot;he&amp;quot;, &amp;quot;she&amp;quot;,
  &amp;quot;his&amp;quot;, &amp;quot;her&amp;quot;,
  &amp;quot;man&amp;quot;, &amp;quot;woman&amp;quot;,
  &amp;quot;men&amp;quot;, &amp;quot;women&amp;quot;,
  &amp;quot;boy&amp;quot;, &amp;quot;girl&amp;quot;,
  &amp;quot;he&amp;#39;s&amp;quot;, &amp;quot;she&amp;#39;s&amp;quot;,
  &amp;quot;himself&amp;quot;, &amp;quot;herself&amp;quot;
)

words &amp;lt;- tidygutenbergr::phantom_of_the_opera() %&amp;gt;% 
  unnest_tokens(word, text) %&amp;gt;%
  pull(word)

plot_fun(words, ref, &amp;quot;scico::berlin&amp;quot;) +
  labs(title = &amp;quot;Masculine gendered words appeared more often in Phantom of the Opera&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: segment.colour

## Warning: Ignoring unknown aesthetics: segment.colour&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-word-rank-slope-charts/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ref &amp;lt;- tribble(
  ~Positive, ~Negative,
  &amp;quot;good&amp;quot;, &amp;quot;bad&amp;quot;,
  &amp;quot;pretty&amp;quot;, &amp;quot;ugly&amp;quot;,
  &amp;quot;friendly&amp;quot;, &amp;quot;hostile&amp;quot;
)

words &amp;lt;- tidygutenbergr::dracula() %&amp;gt;% 
  unnest_tokens(word, text) %&amp;gt;%
  pull(word)

plot_fun(words, ref, palette = &amp;quot;scico::tokyo&amp;quot;) +
  labs(title = &amp;quot;Positive adjectives appeared more often in Dracula&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Ignoring unknown aesthetics: segment.colour

## Warning: Ignoring unknown aesthetics: segment.colour&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-17-word-rank-slope-charts/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Use prismatic with after_scale() for finer control of colors in ggplot2</title>
      <link>/2020/02/25/use-prismatic-with-after_scale-for-finer-control-of-colors-in-ggplot2/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      <guid>/2020/02/25/use-prismatic-with-after_scale-for-finer-control-of-colors-in-ggplot2/</guid>
      <description>


&lt;p&gt;With the release of version 3.3.0 of ggplot2 came the ability to have more control over the aesthetic evaluation.
This allows us to modify the colors of the mapped palettes with &lt;a href=&#34;https://github.com/EmilHvitfeldt/prismatic&#34;&gt;prismatic&lt;/a&gt; now easier than ever.&lt;/p&gt;
&lt;div id=&#34;packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages üì¶&lt;/h2&gt;
&lt;p&gt;We load the essential packages to wrangle, collect data (we will use tweets), scrape websites and handle emojis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(prismatic)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;examples&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Examples&lt;/h2&gt;
&lt;p&gt;Suppose you have a simple bar chart and you have added colors to each bar.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(cut)) +
  geom_bar(aes(fill = cut))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-06-use-prismatic-with-after_scale-for-finer-control-of-colors-in-ggplot2/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next, suppose you would like to add a border around each bar.
Traditionally you could add a single color like black but it isn‚Äôt that satisfying as it doesn‚Äôt have any relation to the mapped colors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(cut)) +
  geom_bar(aes(fill = cut), color = &amp;quot;black&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-06-use-prismatic-with-after_scale-for-finer-control-of-colors-in-ggplot2/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;now that &lt;code&gt;after_scale()&lt;/code&gt; is available for us we can base the color based on the mapped fill colors.
Below I have used &lt;code&gt;clr_darken()&lt;/code&gt; to create a border that is just slightly darker than the fill color.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(cut)) +
  geom_bar(aes(fill = cut, color = after_scale(clr_darken(fill, 0.3))))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-06-use-prismatic-with-after_scale-for-finer-control-of-colors-in-ggplot2/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;this could also have been done in reverse by supplying the color and modifying the fill after.
Notice how we are able to chain multiple color modifications together.
Here we hare taking the color, then desaturating it followed by some lighting.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(cut)) +
  geom_bar(aes(color = cut, 
               fill = after_scale(clr_lighten(clr_desaturate(color), 
                                              space = &amp;quot;combined&amp;quot;))))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-06-use-prismatic-with-after_scale-for-finer-control-of-colors-in-ggplot2/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you only need to specify one color directly you can use the &lt;code&gt;stage()&lt;/code&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(diamonds, aes(cut)) +
  geom_bar(aes(fill = stage(start = cut, 
                            after_scale = clr_lighten(fill, space = &amp;quot;combined&amp;quot;))))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-03-06-use-prismatic-with-after_scale-for-finer-control-of-colors-in-ggplot2/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;details closed&gt;
&lt;p&gt;&lt;summary&gt; &lt;span title=&#34;Click to Expand&#34;&gt; current session info &lt;/span&gt; &lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 setting  value                       
 version  R version 3.6.0 (2019-04-26)
 os       macOS Mojave 10.14.6        
 system   x86_64, darwin15.6.0        
 ui       X11                         
 language (EN)                        
 collate  en_US.UTF-8                 
 ctype    en_US.UTF-8                 
 tz       America/Los_Angeles         
 date     2020-04-20                  

‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 package     * version    date       lib source                     
 assertthat    0.2.1      2019-03-21 [1] CRAN (R 3.6.0)             
 backports     1.1.6      2020-04-05 [1] CRAN (R 3.6.0)             
 blogdown      0.18       2020-03-04 [1] CRAN (R 3.6.0)             
 bookdown      0.18       2020-03-05 [1] CRAN (R 3.6.0)             
 cli           2.0.2      2020-02-28 [1] CRAN (R 3.6.0)             
 clipr         0.7.0      2019-07-23 [1] CRAN (R 3.6.0)             
 codetools     0.2-16     2018-12-24 [1] CRAN (R 3.6.0)             
 colorspace    1.4-1      2019-03-18 [1] CRAN (R 3.6.0)             
 crayon        1.3.4      2017-09-16 [1] CRAN (R 3.6.0)             
 desc          1.2.0      2018-05-01 [1] CRAN (R 3.6.0)             
 details     * 0.2.1      2020-01-12 [1] CRAN (R 3.6.0)             
 digest        0.6.25     2020-02-23 [1] CRAN (R 3.6.0)             
 dplyr         0.8.5      2020-03-07 [1] CRAN (R 3.6.0)             
 ellipsis      0.3.0      2019-09-20 [1] CRAN (R 3.6.0)             
 emo           0.0.0.9000 2019-12-18 [1] Github (hadley/emo@3f03b11)
 evaluate      0.14       2019-05-28 [1] CRAN (R 3.6.0)             
 fansi         0.4.1      2020-01-08 [1] CRAN (R 3.6.0)             
 farver        2.0.3      2020-01-16 [1] CRAN (R 3.6.0)             
 generics      0.0.2      2018-11-29 [1] CRAN (R 3.6.0)             
 ggplot2     * 3.3.0      2020-03-05 [1] CRAN (R 3.6.0)             
 glue          1.4.0      2020-04-03 [1] CRAN (R 3.6.0)             
 gtable        0.3.0      2019-03-25 [1] CRAN (R 3.6.0)             
 htmltools     0.4.0      2019-10-04 [1] CRAN (R 3.6.0)             
 httr          1.4.1      2019-08-05 [1] CRAN (R 3.6.0)             
 knitr       * 1.28       2020-02-06 [1] CRAN (R 3.6.0)             
 labeling      0.3        2014-08-23 [1] CRAN (R 3.6.0)             
 lifecycle     0.2.0      2020-03-06 [1] CRAN (R 3.6.0)             
 lubridate     1.7.8      2020-04-06 [1] CRAN (R 3.6.0)             
 magrittr      1.5        2014-11-22 [1] CRAN (R 3.6.0)             
 munsell       0.5.0      2018-06-12 [1] CRAN (R 3.6.0)             
 pillar        1.4.3      2019-12-20 [1] CRAN (R 3.6.0)             
 pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 3.6.0)             
 png           0.1-7      2013-12-03 [1] CRAN (R 3.6.0)             
 prismatic   * 0.2.0.9000 2020-03-15 [1] local                      
 purrr         0.3.3      2019-10-18 [1] CRAN (R 3.6.0)             
 R6            2.4.1      2019-11-12 [1] CRAN (R 3.6.0)             
 Rcpp          1.0.4.6    2020-04-09 [1] CRAN (R 3.6.0)             
 rlang         0.4.5      2020-03-01 [1] CRAN (R 3.6.0)             
 rmarkdown     2.1        2020-01-20 [1] CRAN (R 3.6.0)             
 rprojroot     1.3-2      2018-01-03 [1] CRAN (R 3.6.0)             
 rstudioapi    0.11       2020-02-07 [1] CRAN (R 3.6.0)             
 scales        1.1.0      2019-11-18 [1] CRAN (R 3.6.0)             
 sessioninfo   1.1.1      2018-11-05 [1] CRAN (R 3.6.0)             
 stringi       1.4.6      2020-02-17 [1] CRAN (R 3.6.0)             
 stringr       1.4.0      2019-02-10 [1] CRAN (R 3.6.0)             
 tibble        3.0.0      2020-03-30 [1] CRAN (R 3.6.2)             
 tidyselect    1.0.0      2020-01-27 [1] CRAN (R 3.6.0)             
 vctrs         0.2.4      2020-03-10 [1] CRAN (R 3.6.0)             
 viridisLite   0.3.0      2018-02-01 [1] CRAN (R 3.6.0)             
 withr         2.1.2      2018-03-15 [1] CRAN (R 3.6.0)             
 xfun          0.13       2020-04-13 [1] CRAN (R 3.6.2)             
 xml2          1.3.0      2020-04-01 [1] CRAN (R 3.6.2)             
 yaml          2.2.1      2020-02-01 [1] CRAN (R 3.6.0)             

[1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Real Emojis in ggplot2</title>
      <link>/2020/01/02/real-emojis-in-ggplot2/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/2020/01/02/real-emojis-in-ggplot2/</guid>
      <description>


&lt;p&gt;I have been trying to use &lt;a href=&#34;https://en.wikipedia.org/wiki/Emoji&#34;&gt;Emojis&lt;/a&gt; for a long time.
It was actually part of my very first &lt;a href=&#34;https://www.hvitfeldt.me/blog/2017-world-press-freedom-index-with-emojis/&#34;&gt;post&lt;/a&gt; on this blog.
Others have made progress such as with &lt;a href=&#34;https://cran.r-project.org/web/packages/emojifont/vignettes/emojifont.html&#34;&gt;emojifont&lt;/a&gt;, but it is not using the classical &lt;a href=&#34;https://en.wikipedia.org/wiki/Apple_Color_Emoji&#34;&gt;Apple Color Emoji&lt;/a&gt; font which is the most commonly recognized.
I made a breakthrough when I was writing the &lt;a href=&#34;https://www.hvitfeldt.me/packagecalendar/2019/&#34;&gt;packagecalander&lt;/a&gt; entry on &lt;a href=&#34;https://github.com/clauswilke/ggtext&#34;&gt;ggtext&lt;/a&gt;.
While the method is the best I have found it does have some cons.&lt;/p&gt;
&lt;p&gt;Pros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Actually works&lt;/li&gt;
&lt;li&gt;Doesn‚Äôt require the use of SVG&lt;/li&gt;
&lt;li&gt;Previews nicely&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Relies on experimental package &lt;strong&gt;ggtext&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Needs web scraping&lt;/li&gt;
&lt;li&gt;Required access to the internet to render&lt;/li&gt;
&lt;li&gt;Size can‚Äôt be adjusted using the size aesthetic&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All in all, it is a fair trade for my needs.&lt;/p&gt;
&lt;div id=&#34;packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages üì¶&lt;/h2&gt;
&lt;p&gt;We load the essential packages to wrangle, collect data (we will use tweets), scrape websites and handle emojis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rtweet)
library(rvest)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;xml2&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# devtools::install_github(&amp;quot;clauswilke/ggtext&amp;quot;)
library(ggtext)
library(emo)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-the-tweets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting the tweets üê¶&lt;/h2&gt;
&lt;p&gt;For a simple dataset where we find emojis I‚Äôm going to get some tweets with the word ‚Äúhappy‚Äù.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;happy &amp;lt;- search_tweets(&amp;quot;happy&amp;quot;, include_rts = FALSE, n = 1000)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we can use the &lt;code&gt;ji_extract_all()&lt;/code&gt; function from the &lt;a href=&#34;https://github.com/hadley/emo&#34;&gt;emo&lt;/a&gt; package.
This will give us a list of emojis so we can use the &lt;code&gt;unnest()&lt;/code&gt; function to get back to a tidy format.
I‚Äôm going to do a simple &lt;code&gt;count()&lt;/code&gt; of the emojis for the following visualizations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;happy_emojis &amp;lt;- happy %&amp;gt;%
  mutate(emoji = emo::ji_extract_all(text)) %&amp;gt;%
  unnest(cols = c(emoji)) %&amp;gt;%
  count(emoji, sort = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next is where the magic happens.
We don‚Äôt have a way to displays emojis in &lt;strong&gt;ggplot2&lt;/strong&gt;, but we can use &lt;strong&gt;ggtext&lt;/strong&gt; to embed images into the text using HTML.
Now we just need to get an image of each emoji.
The following function will accept an emoji as a string and return the URL to a .png of that emoji.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emoji_to_link &amp;lt;- function(x) {
  paste0(&amp;quot;https://emojipedia.org/emoji/&amp;quot;,x) %&amp;gt;%
    read_html() %&amp;gt;%
    html_nodes(&amp;quot;tr td a&amp;quot;) %&amp;gt;%
    .[1] %&amp;gt;%
    html_attr(&amp;quot;href&amp;quot;) %&amp;gt;%
    paste0(&amp;quot;https://emojipedia.org/&amp;quot;, .) %&amp;gt;%
    read_html() %&amp;gt;%
    html_node(&amp;#39;div[class=&amp;quot;vendor-image&amp;quot;] img&amp;#39;) %&amp;gt;%
    html_attr(&amp;quot;src&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then this function will take that URL and construct the necessary HTML code to show the emoji PNGs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;link_to_img &amp;lt;- function(x, size = 25) {
  paste0(&amp;quot;&amp;lt;img src=&amp;#39;&amp;quot;, x, &amp;quot;&amp;#39; width=&amp;#39;&amp;quot;, size, &amp;quot;&amp;#39;/&amp;gt;&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To be courteous we are only going to scrape the emojis we are actually going to use.
So we will &lt;code&gt;slice()&lt;/code&gt; the 10 most frequent emojis.
We will also be adding a 5 second delay using &lt;code&gt;slowly()&lt;/code&gt; and &lt;code&gt;rate_delay()&lt;/code&gt; from &lt;strong&gt;purrr&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top_happy &amp;lt;- happy_emojis %&amp;gt;%
  slice(1:10) %&amp;gt;%
  mutate(url = map_chr(emoji, slowly(~emoji_to_link(.x), rate_delay(1))),
         label = link_to_img(url))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;emoji-scatter-plot&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;emoji-scatter plot üìà&lt;/h2&gt;
&lt;p&gt;Now we can use the &lt;code&gt;geom_richtext()&lt;/code&gt; function from &lt;strong&gt;ggtext&lt;/strong&gt; to create a emoji scatter chart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top_happy %&amp;gt;%
  ggplot(aes(emoji, n, label = label)) +
  geom_richtext(aes(y = n), fill = NA, label.color = NA, # remove background and outline
                label.padding = grid::unit(rep(0, 4), &amp;quot;pt&amp;quot;) # remove padding
  ) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-02-real-emojis-in-ggplot2/index_files/figure-html/plot1-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is a little off, so lets other these by counts and put them over a bar chart.
I‚Äôm also going to the x-axis ticks and text.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;offset &amp;lt;- max(top_happy$n) / 20

top_happy %&amp;gt;%
  ggplot(aes(fct_reorder(emoji, n, .desc = TRUE), n, label = label)) +
  geom_col() +
  geom_richtext(aes(y = n + offset), fill = NA, label.color = NA,
                label.padding = grid::unit(rep(0, 4), &amp;quot;pt&amp;quot;)
  ) +
  theme(axis.ticks.x = element_blank(),
        axis.text.x = element_blank()) +
  labs(x = NULL) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-02-real-emojis-in-ggplot2/index_files/figure-html/plot2-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;emojis-in-labels-and-text&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Emojis in labels and text üìä&lt;/h2&gt;
&lt;p&gt;We are not only limited to using emojis in the geoms.
We can set the text element using emojis to &lt;code&gt;element_markdown()&lt;/code&gt;.
Below we have the same bar chart as above but with the emoji as labels below instead of on top.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top_happy %&amp;gt;%
  ggplot(aes(fct_reorder(label, n, .desc = TRUE), n)) +
  geom_col() +
  theme_minimal() +
  theme(axis.text.x = element_markdown()) +
  labs(x = NULL)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-02-real-emojis-in-ggplot2/index_files/figure-html/plot3-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-a-splash-of-color&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Adding a splash of color üåà&lt;/h2&gt;
&lt;p&gt;We can employ a little more scraping and color calculations to had colors to the bars according to the colors of the emoji.
The following function takes a URL to a .png file and returns the most common color that isn‚Äôt pure black or pure white.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean_emoji_color &amp;lt;- function(x) {
  data &amp;lt;- png::readPNG(RCurl::getURLContent(x))
  color_freq &amp;lt;- names(sort(table(rgb(data[,,1], data[,,2], data[,,3])), 
                           decreasing = TRUE))
  setdiff(color_freq, c(&amp;quot;#FFFFFF&amp;quot;, &amp;quot;#000000&amp;quot;))[1]
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We apply this to all the emoji URLs and color the bars accordingly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_data &amp;lt;- top_happy %&amp;gt;%
  mutate(color = map_chr(url, slowly(~mean_emoji_color(.x), rate_delay(1))))

plot_data %&amp;gt;%
  ggplot(aes(fct_reorder(label, n, .desc = TRUE), 
             color = color, 
             fill = unclass(prismatic::clr_lighten(color, 0.4)), n)) +
  geom_col() +
  scale_fill_identity() +
  scale_color_identity() +
  theme_minimal() +
  theme(axis.text.x = element_markdown()) +
  labs(x = NULL, y = &amp;quot;Count&amp;quot;,
       title = &amp;quot;Emojis used in (small sample) of &amp;#39;happy&amp;#39; tweets&amp;quot;,
       subtitle = &amp;quot;Displayed in ggplot2!!!&amp;quot;,
       caption = &amp;quot;@Emil_Hvitfeldt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-01-02-real-emojis-in-ggplot2/index_files/figure-html/plotdata-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;final-note&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Final note üóí&lt;/h2&gt;
&lt;p&gt;If you want to use emojis in the text you need to call &lt;code&gt;theme_*()&lt;/code&gt; before &lt;code&gt;theme()&lt;/code&gt; such that &lt;code&gt;element_markdown()&lt;/code&gt; isn‚Äôt being overwritten.&lt;/p&gt;
&lt;details closed&gt;
&lt;p&gt;&lt;summary&gt; &lt;span title=&#34;Click to Expand&#34;&gt; current session info &lt;/span&gt; &lt;/summary&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 setting  value                       
 version  R version 3.6.0 (2019-04-26)
 os       macOS Mojave 10.14.6        
 system   x86_64, darwin15.6.0        
 ui       X11                         
 language (EN)                        
 collate  en_US.UTF-8                 
 ctype    en_US.UTF-8                 
 tz       America/Los_Angeles         
 date     2020-04-21                  

‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 package     * version    date       lib source                            
 askpass       1.1        2019-01-13 [1] CRAN (R 3.6.0)                    
 assertthat    0.2.1      2019-03-21 [1] CRAN (R 3.6.0)                    
 backports     1.1.6      2020-04-05 [1] CRAN (R 3.6.0)                    
 bitops        1.0-6      2013-08-17 [1] CRAN (R 3.6.0)                    
 blogdown      0.18       2020-03-04 [1] CRAN (R 3.6.0)                    
 bookdown      0.18       2020-03-05 [1] CRAN (R 3.6.0)                    
 broom         0.5.5      2020-02-29 [1] CRAN (R 3.6.0)                    
 cellranger    1.1.0      2016-07-27 [1] CRAN (R 3.6.0)                    
 cli           2.0.2      2020-02-28 [1] CRAN (R 3.6.0)                    
 clipr         0.7.0      2019-07-23 [1] CRAN (R 3.6.0)                    
 codetools     0.2-16     2018-12-24 [1] CRAN (R 3.6.0)                    
 colorspace    1.4-1      2019-03-18 [1] CRAN (R 3.6.0)                    
 crayon        1.3.4      2017-09-16 [1] CRAN (R 3.6.0)                    
 curl          4.3        2019-12-02 [1] CRAN (R 3.6.0)                    
 DBI           1.1.0      2019-12-15 [1] CRAN (R 3.6.0)                    
 dbplyr        1.4.2      2019-06-17 [1] CRAN (R 3.6.0)                    
 desc          1.2.0      2018-05-01 [1] CRAN (R 3.6.0)                    
 details     * 0.2.1      2020-01-12 [1] CRAN (R 3.6.0)                    
 digest        0.6.25     2020-02-23 [1] CRAN (R 3.6.0)                    
 dplyr       * 0.8.5      2020-03-07 [1] CRAN (R 3.6.0)                    
 ellipsis      0.3.0      2019-09-20 [1] CRAN (R 3.6.0)                    
 emo         * 0.0.0.9000 2019-12-18 [1] Github (hadley/emo@3f03b11)       
 evaluate      0.14       2019-05-28 [1] CRAN (R 3.6.0)                    
 fansi         0.4.1      2020-01-08 [1] CRAN (R 3.6.0)                    
 farver        2.0.3      2020-01-16 [1] CRAN (R 3.6.0)                    
 forcats     * 0.5.0      2020-03-01 [1] CRAN (R 3.6.0)                    
 fs            1.4.1      2020-04-04 [1] CRAN (R 3.6.0)                    
 generics      0.0.2      2018-11-29 [1] CRAN (R 3.6.0)                    
 ggplot2     * 3.3.0      2020-03-05 [1] CRAN (R 3.6.0)                    
 ggtext      * 0.1.0      2019-12-13 [1] Github (clauswilke/ggtext@cc8ea0c)
 glue          1.4.0      2020-04-03 [1] CRAN (R 3.6.0)                    
 gridtext      0.1.1      2020-02-24 [1] CRAN (R 3.6.0)                    
 gtable        0.3.0      2019-03-25 [1] CRAN (R 3.6.0)                    
 haven         2.2.0      2019-11-08 [1] CRAN (R 3.6.0)                    
 hms           0.5.3      2020-01-08 [1] CRAN (R 3.6.0)                    
 htmltools     0.4.0      2019-10-04 [1] CRAN (R 3.6.0)                    
 httr          1.4.1      2019-08-05 [1] CRAN (R 3.6.0)                    
 jsonlite      1.6.1      2020-02-02 [1] CRAN (R 3.6.0)                    
 knitr       * 1.28       2020-02-06 [1] CRAN (R 3.6.0)                    
 labeling      0.3        2014-08-23 [1] CRAN (R 3.6.0)                    
 lattice       0.20-41    2020-04-02 [1] CRAN (R 3.6.0)                    
 lifecycle     0.2.0      2020-03-06 [1] CRAN (R 3.6.0)                    
 lubridate     1.7.8      2020-04-06 [1] CRAN (R 3.6.0)                    
 magrittr      1.5        2014-11-22 [1] CRAN (R 3.6.0)                    
 markdown      1.1        2019-08-07 [1] CRAN (R 3.6.0)                    
 modelr        0.1.6      2020-02-22 [1] CRAN (R 3.6.0)                    
 munsell       0.5.0      2018-06-12 [1] CRAN (R 3.6.0)                    
 nlme          3.1-145    2020-03-04 [1] CRAN (R 3.6.0)                    
 openssl       1.4.1      2019-07-18 [1] CRAN (R 3.6.0)                    
 pillar        1.4.3      2019-12-20 [1] CRAN (R 3.6.0)                    
 pkgconfig     2.0.3      2019-09-22 [1] CRAN (R 3.6.0)                    
 png           0.1-7      2013-12-03 [1] CRAN (R 3.6.0)                    
 prettyunits   1.1.1      2020-01-24 [1] CRAN (R 3.6.0)                    
 prismatic     0.2.0.9000 2020-03-15 [1] local                             
 progress      1.2.2      2019-05-16 [1] CRAN (R 3.6.0)                    
 purrr       * 0.3.3      2019-10-18 [1] CRAN (R 3.6.0)                    
 R6            2.4.1      2019-11-12 [1] CRAN (R 3.6.0)                    
 Rcpp          1.0.4.6    2020-04-09 [1] CRAN (R 3.6.0)                    
 RCurl         1.98-1.1   2020-01-19 [1] CRAN (R 3.6.0)                    
 readr       * 1.3.1      2018-12-21 [1] CRAN (R 3.6.0)                    
 readxl        1.3.1      2019-03-13 [1] CRAN (R 3.6.0)                    
 reprex        0.3.0      2019-05-16 [1] CRAN (R 3.6.0)                    
 rlang         0.4.5      2020-03-01 [1] CRAN (R 3.6.0)                    
 rmarkdown     2.1        2020-01-20 [1] CRAN (R 3.6.0)                    
 rprojroot     1.3-2      2018-01-03 [1] CRAN (R 3.6.0)                    
 rstudioapi    0.11       2020-02-07 [1] CRAN (R 3.6.0)                    
 rtweet      * 0.7.0      2020-01-08 [1] CRAN (R 3.6.0)                    
 rvest       * 0.3.5      2019-11-08 [1] CRAN (R 3.6.0)                    
 scales        1.1.0      2019-11-18 [1] CRAN (R 3.6.0)                    
 selectr       0.4-2      2019-11-20 [1] CRAN (R 3.6.0)                    
 sessioninfo   1.1.1      2018-11-05 [1] CRAN (R 3.6.0)                    
 stringi       1.4.6      2020-02-17 [1] CRAN (R 3.6.0)                    
 stringr     * 1.4.0      2019-02-10 [1] CRAN (R 3.6.0)                    
 tibble      * 3.0.1      2020-04-20 [1] CRAN (R 3.6.2)                    
 tidyr       * 1.0.2      2020-01-24 [1] CRAN (R 3.6.0)                    
 tidyselect    1.0.0      2020-01-27 [1] CRAN (R 3.6.0)                    
 tidyverse   * 1.3.0      2019-11-21 [1] CRAN (R 3.6.0)                    
 vctrs         0.2.4      2020-03-10 [1] CRAN (R 3.6.0)                    
 withr         2.1.2      2018-03-15 [1] CRAN (R 3.6.0)                    
 xfun          0.13       2020-04-13 [1] CRAN (R 3.6.2)                    
 xml2        * 1.3.0      2020-04-01 [1] CRAN (R 3.6.2)                    
 yaml          2.2.1      2020-02-01 [1] CRAN (R 3.6.0)                    

[1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library
&lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Changing Glyph in legend in ggplot2</title>
      <link>/2019/06/17/changing-glyph-in-legend-in-ggplot2/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      <guid>/2019/06/17/changing-glyph-in-legend-in-ggplot2/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The newest version of &lt;a href=&#34;https://www.tidyverse.org/articles/2019/06/ggplot2-3-2-0/&#34;&gt;ggplot2 3.2.0&lt;/a&gt; gave us the ability to change the glyph in the legend like so&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)

ggplot(economics_long, aes(date, value01, colour = variable)) +
  geom_line(key_glyph = &amp;quot;timeseries&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And they can likewise be specified with the &lt;code&gt;draw_key_*&lt;/code&gt; functions as well&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(economics_long, aes(date, value01, colour = variable)) +
  geom_line(key_glyph = draw_key_timeseries)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;showcase&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Showcase&lt;/h1&gt;
&lt;p&gt;The following is all the available &lt;code&gt;draw_key_*&lt;/code&gt; functions in ggplot2. Notice that the dark gray color in dotplot and polygon is a result of a unspecified &lt;code&gt;fill&lt;/code&gt; aesthetic. Code to generate these figures can be found at the end of this post.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;
## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag
## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-3.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-4.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-5.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-6.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-7.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-8.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-9.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-10.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-11.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-12.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-13.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-14.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-15.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-3-16.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;custom-glyph-key&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Custom glyph key&lt;/h1&gt;
&lt;p&gt;Since the &lt;code&gt;draw_key_*&lt;/code&gt; function just return a grob, you can use spend some time and create your own custom glyphs! Taking inspiration from &lt;code&gt;draw_key_boxplot&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;draw_key_boxplot
## function (data, params, size) 
## {
##     grobTree(linesGrob(0.5, c(0.1, 0.25)), linesGrob(0.5, c(0.75, 
##         0.9)), rectGrob(height = 0.5, width = 0.75), linesGrob(c(0.125, 
##         0.875), 0.5), gp = gpar(col = data$colour %||% &amp;quot;grey20&amp;quot;, 
##         fill = alpha(data$fill %||% &amp;quot;white&amp;quot;, data$alpha), lwd = (data$size %||% 
##             0.5) * .pt, lty = data$linetype %||% 1))
## }
## &amp;lt;bytecode: 0x7ff0874a8c08&amp;gt;
## &amp;lt;environment: namespace:ggplot2&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will I try to make a glyph by myself using both points and lines.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(grid)
library(rlang)
draw_key_smile &amp;lt;- function(data, params, size) {
  grobTree(
    pointsGrob(0.25, 0.75, size = unit(.25, &amp;quot;npc&amp;quot;), pch = 16),
    pointsGrob(0.75, 0.75, size = unit(.25, &amp;quot;npc&amp;quot;), pch = 16),
    linesGrob(c(0.9, 0.87, 0.78, 0.65, 0.5, 0.35, 0.22, 0.13, 0.1), 
              c(0.5, 0.35, 0.22, 0.13, 0.1, 0.13, 0.22, 0.35, 0.5)),
    gp = gpar(
      col = data$colour %||% &amp;quot;grey20&amp;quot;,
      fill = alpha(data$fill %||% &amp;quot;white&amp;quot;, data$alpha),
      lwd = (data$size %||% 0.5) * .pt,
      lty = data$linetype %||% 1
    )
  )
}

ggplot(economics_long, aes(date, value01, colour = variable)) +
  geom_line(key_glyph = draw_key_smile)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-06-17-changing-glyph-in-ggplot2/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And it looks so happy!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;appendix&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Appendix&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dplyr)
library(magrittr)
library(ggplot2)
library(grid)

draws &amp;lt;- ls(getNamespace(&amp;quot;ggplot2&amp;quot;), pattern = &amp;quot;^draw_key_&amp;quot;)

legend_fun &amp;lt;- function(x) {
  ggg &amp;lt;- economics_long %&amp;gt;%
    mutate(variable = factor(variable, labels = paste(&amp;quot;Option&amp;quot;, LETTERS[1:5]))) %&amp;gt;%
    ggplot(aes(date, value01, colour = variable)) +
  geom_line(key_glyph = get(x)) +
    labs(color = x) 
  
  legend &amp;lt;- cowplot::get_legend(ggg)
  
  grid.newpage()
  grid.draw(legend)
}

purrr::walk(draws[1:12], legend_fun)
p &amp;lt;- ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars))) + 
  geom_text(aes(colour = factor(ceiling(seq_len(nrow(mtcars)) %% 5), labels = paste(&amp;quot;Option&amp;quot;, LETTERS[1:5])))) +
  labs(color = &amp;quot;draw_key_text&amp;quot;)
legend &amp;lt;- cowplot::get_legend(p)

grid.newpage()
grid.draw(legend)
purrr::walk(draws[14:16], legend_fun)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Center continuous palettes in ggplot2</title>
      <link>/2019/05/21/center-continuous-palettes-in-ggplot2/</link>
      <pubDate>Tue, 21 May 2019 00:00:00 +0000</pubDate>
      <guid>/2019/05/21/center-continuous-palettes-in-ggplot2/</guid>
      <description>


&lt;p&gt;Using a divergent color palette can be beneficial when you want to draw attention to some values compared to a fixed point. Like temperature around freezing, monetary values around zero and so on. However it can be hard to align 0 to the middle of a continuous color scale. This post will explain how to do this correctly for &lt;code&gt;scale_colour_distiller&lt;/code&gt; and &lt;code&gt;scale_fill_distiller&lt;/code&gt;, and this will also work for extension packages such as &lt;a href=&#34;https://github.com/thomasp85/scico&#34;&gt;scico&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;packages-and-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Packages and data&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(scico)

theme_set(theme_minimal())

example_data &amp;lt;- data.frame(name = letters[1:10],
                           value = -2:7 + 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-problem&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The problem&lt;/h1&gt;
&lt;p&gt;First lets construct a simple chart, we have a bar chart where some of the bars go up, and some of the bars go down.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(example_data, aes(name, value)) +
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-05-21-center-continuous-palettes-in-ggplot2/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next lets add some color by assigning the value to the fill aesthetic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(example_data, aes(name, value, fill = value)) +
  geom_col()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-05-21-center-continuous-palettes-in-ggplot2/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Using a sequential palette for a chart like this doesn‚Äôt give us much insight. Lets add a divergent scale with &lt;code&gt;scale_fill_gradient2()&lt;/code&gt;. While it is doing its job, you still have to define the colors yourself.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(example_data, aes(name, value, fill = value)) +
  geom_col() +
  scale_fill_gradient2()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-05-21-center-continuous-palettes-in-ggplot2/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lets instead use the &lt;code&gt;scale_fill_distiller()&lt;/code&gt; function to access the continuous versions of the &lt;a href=&#34;http://colorbrewer2.org&#34;&gt;brewer scales&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(example_data, aes(name, value, fill = value)) +
  geom_col() +
  scale_fill_distiller(type = &amp;quot;div&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-05-21-center-continuous-palettes-in-ggplot2/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;But look! some of the upwards facing bars are colored green instead of orange.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-solution&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The solution&lt;/h1&gt;
&lt;p&gt;The solution is to manually specify the the limits of the color palette such that the center of the palette appears in the middle of the range. This is simply done by finding the absolute maximum of the range of the variable to are mapping to the color. We then set the limits to go from negative max to positive max, thus making zero appear in the middle.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;limit &amp;lt;- max(abs(example_data$value)) * c(-1, 1)

ggplot(example_data, aes(name, value, fill = value)) +
  geom_col() +
  scale_fill_distiller(type = &amp;quot;div&amp;quot;, limit = limit)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-05-21-center-continuous-palettes-in-ggplot2/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This approach also works with the &lt;code&gt;scico&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;limit &amp;lt;- max(abs(example_data$value)) * c(-1, 1)

ggplot(example_data, aes(name, value, fill = value)) +
  geom_col() +
  scale_fill_scico(palette = &amp;quot;cork&amp;quot;, limit = limit) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-05-21-center-continuous-palettes-in-ggplot2/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What are the reviews telling us?</title>
      <link>/2018/08/17/what-are-the-reviews-telling-us/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      <guid>/2018/08/17/what-are-the-reviews-telling-us/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/crosstalk/css/crosstalk.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2018-12-20.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this post we will look at a handful of movies reviews from &lt;a href=&#34;https://www.imdb.com/&#34;&gt;imdb&lt;/a&gt; which I have scraped and placed in this repository &lt;a href=&#34;https://github.com/EmilHvitfeldt/movie-reviews&#34;&gt;movie reviews&lt;/a&gt;. I took a look at the best and worst rated movies with their best and worst reviews respectively. From that we will try to see if we are able to see how positive reviews on good movies are different then positive reviews on bad movies and so on.&lt;/p&gt;
&lt;p&gt;We will use fairly standard packages with the inclusion of &lt;strong&gt;paletteer&lt;/strong&gt; for the sole reason of self promotion. (yay!!!)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2
library(tidytext)
library(plotly)
library(paletteer)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we will read in the data using &lt;strong&gt;readr&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;reviews_raw &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/EmilHvitfeldt/movie-reviews/master/reviews_v1.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets take a look at the data I prepared for us:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(reviews_raw)
## Rows: 9,764
## Columns: 7
## $ text          &amp;lt;chr&amp;gt; &amp;quot;It is a very boring and weird movie. Watch it only if ‚Ä¶
## $ id            &amp;lt;chr&amp;gt; &amp;quot;tt0012349&amp;quot;, &amp;quot;tt0012349&amp;quot;, &amp;quot;tt0012349&amp;quot;, &amp;quot;tt0012349&amp;quot;, &amp;quot;tt‚Ä¶
## $ review_rating &amp;lt;chr&amp;gt; &amp;quot;bad&amp;quot;, &amp;quot;bad&amp;quot;, &amp;quot;bad&amp;quot;, &amp;quot;bad&amp;quot;, &amp;quot;bad&amp;quot;, &amp;quot;bad&amp;quot;, &amp;quot;bad&amp;quot;, &amp;quot;bad&amp;quot;,‚Ä¶
## $ title         &amp;lt;chr&amp;gt; &amp;quot;The Kid&amp;quot;, &amp;quot;The Kid&amp;quot;, &amp;quot;The Kid&amp;quot;, &amp;quot;The Kid&amp;quot;, &amp;quot;The Kid&amp;quot;, ‚Ä¶
## $ rating        &amp;lt;dbl&amp;gt; 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, 8.3, ‚Ä¶
## $ url           &amp;lt;chr&amp;gt; &amp;quot;https://www.imdb.com/title/tt0012349/&amp;quot;, &amp;quot;https://www.i‚Ä¶
## $ movie_rating  &amp;lt;chr&amp;gt; &amp;quot;good&amp;quot;, &amp;quot;good&amp;quot;, &amp;quot;good&amp;quot;, &amp;quot;good&amp;quot;, &amp;quot;good&amp;quot;, &amp;quot;good&amp;quot;, &amp;quot;good&amp;quot;,‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It include 7 different variables. There is some redundancy, the &lt;code&gt;url&lt;/code&gt; variable contains the url of the movie, and &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; are just the extracts from the &lt;code&gt;url&lt;/code&gt; variable. The &lt;code&gt;rating&lt;/code&gt; variable is the average rating of the movie and will not be used in this analysis. Lastly we have the &lt;code&gt;review_rating&lt;/code&gt; and &lt;code&gt;movie_rating&lt;/code&gt; which will denote if the review is positive or negative and if the movie being reviewed is good or bad respectively.&lt;/p&gt;
&lt;p&gt;Lets start by unnesting the words and get the counts. We also don‚Äôt want to look at all the stopwords and words that contains numbers, this it likely not a great number of words but we will exclude them for now anyways.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;counted_words &amp;lt;- unnest_tokens(reviews_raw, word, text) %&amp;gt;%
  count(word, movie_rating, review_rating) %&amp;gt;%
  anti_join(stop_words, by = &amp;quot;word&amp;quot;) %&amp;gt;%
  filter(!str_detect(word, &amp;quot;\\d&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And lets have a quick looks at the result:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;counted_words %&amp;gt;% arrange(desc(n)) %&amp;gt;% head(n = 15)
## # A tibble: 15 x 4
##    word   movie_rating review_rating     n
##    &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;         &amp;lt;int&amp;gt;
##  1 movie  bad          good           7504
##  2 movie  bad          bad            7426
##  3 movie  good         bad            5692
##  4 movie  good         good           5507
##  5 film   good         good           4701
##  6 film   good         bad            3926
##  7 film   bad          bad            3243
##  8 film   bad          good           3023
##  9 bad    bad          bad            2080
## 10 time   good         good           1757
## 11 story  good         good           1496
## 12 people bad          good           1409
## 13 time   good         bad            1387
## 14 people good         bad            1292
## 15 time   bad          bad            1263&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And we notice that the word &lt;em&gt;movie&lt;/em&gt; have been used quite a lot more in reviews of bad movies then in good movies.&lt;/p&gt;
&lt;div id=&#34;log-odds&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Log odds&lt;/h2&gt;
&lt;p&gt;We have a bunch of counts here and we would like to find a worthwhile transformation of them. Since we have the number of reviews for good movies and bad movies we would be able to find the percentage of words appearing in good movies. This would give us a number between 0 and 1, where the interesting words would be when the percentage is close to 0 and 1 as it would show that the word is being used more in one than another.&lt;/p&gt;
&lt;p&gt;By doing this transformation to both the review scores and movie scores will give us the following plot:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;counted_words %&amp;gt;%
  mutate(rating = str_c(movie_rating, &amp;quot;_&amp;quot;, review_rating)) %&amp;gt;%
  select(-movie_rating, -review_rating) %&amp;gt;%
  spread(rating, n) %&amp;gt;%
  drop_na() %&amp;gt;%
  mutate(review_lo = (bad_good + good_good) / (bad_bad + good_bad + bad_good + good_good),
         movie_lo = (good_bad + good_good) / (bad_bad + bad_good + good_bad + good_good)) %&amp;gt;%
  ggplot() +
  aes(movie_lo, review_lo) +
  geom_text(aes(label = word))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-14-what-are-the-reviews-telling-us/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Another way to do this is to take the log of the odds of one event happening over the other event. We will create this little helper function for us.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;log_odds &amp;lt;- function(x, y) {
  total &amp;lt;- x + y
  p &amp;lt;- x / total
  log(p / (1 - p))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;applying this transformation instead expands the the limit from 0 to 1 to the whole number range where the midpoint is 0, this has some nice properties from a visualization perspective, it will also compact the center points a little more allowing outliers to be more prominent.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_data &amp;lt;- counted_words %&amp;gt;%
  mutate(rating = str_c(movie_rating, &amp;quot;_&amp;quot;, review_rating)) %&amp;gt;%
  select(-movie_rating, -review_rating) %&amp;gt;%
  spread(rating, n) %&amp;gt;%
  drop_na() %&amp;gt;%
  mutate(review_lo = log_odds(bad_good + good_good, bad_bad + good_bad),
         movie_lo = log_odds(good_bad + good_good, bad_bad + bad_good))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_data %&amp;gt;%
  ggplot() +
  aes(movie_lo, review_lo, label = word) +
  geom_text()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-14-what-are-the-reviews-telling-us/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We have a good degree of over plotting in this plot, but part of that might be because of the text, a quick look at the scatterplot still reveals a good deal of overplotting. We will try to counter that later on.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_data %&amp;gt;%
  ggplot() +
  aes(movie_lo, review_lo) +
  geom_point(alpha = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-14-what-are-the-reviews-telling-us/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lets stay in the in the scatterplot. Lets tighten up the theme and include guidelines at y = 0 and x = 0. We will also find the range of the data to make sure we include all the points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_data %&amp;gt;% 
  select(movie_lo, review_lo) %&amp;gt;%
  range()
## [1] -4.574711  3.970292&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_data %&amp;gt;%
  ggplot() +
  aes(movie_lo, review_lo) +
  geom_vline(xintercept = 0, color = &amp;quot;grey&amp;quot;) +
  geom_hline(yintercept = 0, color = &amp;quot;grey&amp;quot;) +
  geom_point(alpha = 0.5) +
  theme_minimal() +
  coord_cartesian(ylim = c(-4.6, 4.6),
                  xlim = c(-4.6, 4.6)) +
  labs(x = &amp;quot;‚Üê Bad Movies - Good Movies ‚Üí&amp;quot;, y = &amp;quot;‚Üê Bad Reviews - Good Reviews ‚Üí&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-14-what-are-the-reviews-telling-us/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We still have quite a bit of over plotting, I‚Äôm going to sample the points based on importance. The importance matrix I‚Äôm going to work with is the distance from the middle. In addition we are going to display the number of times a word is used by the size of the points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;set.seed(13)
plot_data_v2 &amp;lt;- plot_data %&amp;gt;%
  mutate(distance = review_lo ^ 2 + movie_lo ^ 2,
         n = bad_bad + bad_good + good_bad + good_good) %&amp;gt;%
  sample_frac(0.1, weight = distance)

plot_data_v2 %&amp;gt;%  
  ggplot() +
  aes(movie_lo, review_lo, size = n) +
  geom_vline(xintercept = 0, color = &amp;quot;grey&amp;quot;) +
  geom_hline(yintercept = 0, color = &amp;quot;grey&amp;quot;) +
  geom_point(alpha = 0.5) +
  theme_minimal() +
  coord_cartesian(ylim = c(-4.6, 4.6),
                  xlim = c(-4.6, 4.6)) +
  labs(x = &amp;quot;‚Üê Bad Movies - Good Movies ‚Üí&amp;quot;, y = &amp;quot;‚Üê Bad Reviews - Good Reviews ‚Üí&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-14-what-are-the-reviews-telling-us/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lastly we will make the whole thing interactive with &lt;strong&gt;plotly&lt;/strong&gt; to allow hover text. We include some color to indicate distance to the center.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- plot_data_v2 %&amp;gt;%  
  ggplot() +
  aes(movie_lo, review_lo, size = n, color = distance, text = word) +
  geom_vline(xintercept = 0, color = &amp;quot;grey&amp;quot;) +
  geom_hline(yintercept = 0, color = &amp;quot;grey&amp;quot;) +
  geom_point(alpha = 0.5) +
  theme_minimal() +
  coord_cartesian(ylim = c(-4.6, 4.6),
                  xlim = c(-4.6, 4.6)) +
  labs(x = &amp;quot;‚Üê Bad Movies - Good Movies ‚Üí&amp;quot;, 
       y = &amp;quot;‚Üê Bad Reviews - Good Reviews ‚Üí&amp;quot;,
       title = &amp;quot;What are people saying about the best and worst movies on IMDB?&amp;quot;) +
  scale_color_paletteer_c(&amp;quot;viridis::viridis&amp;quot;) +
  guides(color = &amp;quot;none&amp;quot;, size = &amp;quot;none&amp;quot;)

ggplotly(p, width = 700, height = 700, displayModeBar = FALSE,
         tooltip = &amp;quot;text&amp;quot;) %&amp;gt;% 
  config(displayModeBar = F)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:700px;height:700px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[{&#34;x&#34;:[0,0],&#34;y&#34;:[-5.06,5.06],&#34;text&#34;:&#34;&#34;,&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;lines&#34;,&#34;line&#34;:{&#34;width&#34;:1.88976377952756,&#34;color&#34;:&#34;rgba(190,190,190,1)&#34;,&#34;dash&#34;:&#34;solid&#34;},&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[-5.06,5.06],&#34;y&#34;:[0,0],&#34;text&#34;:&#34;&#34;,&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;lines&#34;,&#34;line&#34;:{&#34;width&#34;:1.88976377952756,&#34;color&#34;:&#34;rgba(190,190,190,1)&#34;,&#34;dash&#34;:&#34;solid&#34;},&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[0.0540672212702756,2.01490302054226,1.20397280432594,2.42353770341171,0.405465108108164,3.70306408910589,-0.78845736036427,0.857450231851222,0.628608659422374,3.22457384598284,-0.154150679827258,-0.405465108108164,0.336472236621213,0.328504066972036,-1.3054422644908,1.65822807660353,1.70474809223843,1.17865499634165,-0.0606246218164347,0.348306694268216,-2.484906649788,-0.200670695462151,-0.847297860387204,1.25276296849537,2.44234703536921,0.773189888233482,3.17805383034794,-1.09861228866811,-0.680243775724037,-0.500775287912489,1.38629436111989,1.6094379124341,0.0741079721537218,0.916290731874155,-1.04982212449868,-0.474457979595116,1.20397280432594,-3.09104245335832,-1.02450431651439,-2.81839825827108,0.916290731874155,-2.11021320034659,0.510825623765991,-0.916290731874155,-1.24078677744865,-0.0392207131532813,-2.33537491581704,1.57553636075842,1.09861228866811,0.897941593205959,1.3415584672785,-0.693147180559945,-2.90872089656436,-0.182321556793955,2.69848075008606,-0.713214743610755,-2.38122822031316,1.79175946922805,1.76358859226136,1.67397643357167,1.17865499634165,-1.32175583998232,0.916290731874155,0.22314355131421,-1.70474809223843,1.36948724280351,-1.6094379124341,-2.75153531304195,1.32175583998232,-1.6094379124341,1.38629436111989,1.90954250488444,-1.70474809223843,1.50407739677627,0.336472236621213,0.650587566141149,2.01490302054226,0.117783035656383,-2.20727491318972,-1.19392246847243,-1.38629436111989,-1.55814461804655,0.613104472886409,0.657587878523458,1.07535542650384,-1.29928298413026,0.394654192003949,0.993251773010283,1.79175946922805,0.133531392624523,1.20397280432594,-0.63907995928967,1.25276296849537,-0.479573080261886,3.3787245258101,1.38629436111989,1.20397280432594,0.287682072451781,-0.693147180559945,-0.792238083204176,0.470003629245736,-0.916290731874155,-0.957839734787027,-0.22314355131421,-0.0786431273191131,-4.57471097850338,1.36919992776059,2.484906649788,0.693147180559945,-1.09861228866811,-1.68639895357023,-1.17007125265025,-2.07944154167984,1.50737229267313,-0.0689928714869513,2.14006616349627,-0.470003629245736,1.09861228866811,-0.965080896043587,0.693147180559945,-1.87180217690159,1.6094379124341,-1.25276296849537,-0.287682072451781,-1.53623450841081,3.44468249360189,1.99809590222588,-2.91568956588045,0.8754687373539,0.405465108108164,-2.28577797467766,-0.826678573184468,1.87180217690159,2.2512917986065,-0.125163142954006,-0.523248143764548,0.693147180559945,-0.451985123743057,-0.653926467406664,2.10006082888257,1.74296930505862,-2.54553127160444,-1.49065437644413,0.78845736036427,-1.6094379124341,-0.367724780125317,-2.4423470353692,-0.331357135954442,0,0.575364144903562,-2.4423470353692,-1.54044504094715,-0.405465108108164,0.916290731874155,1.67397643357167,1.5114575040739,0.117783035656383,0,0.955511445027436,0.725937003382936,1.46633706879343,0.757685701697516,-1.25276296849537,0.893817876022097,2.56494935746154,0.693147180559945,3.3499040872746,0.78845736036427,0,0.113328685307003,1.50407739677627,-0.916290731874155,1.09861228866811,1.82253112789481,-1.46633706879343,-4.28358656186063,-0.0444517625708338,0.510825623765991,0.8754687373539,-0.451985123743057,-0.510825623765991,-3.25809653802148,-0.268263986594679,0.405465108108164,-2.484906649788,0.916290731874155,2.72457950305342,-1.25276296849537,2.75153531304195,-0.305381649551182,1.6094379124341,1.09861228866811,-1.36524095192206,-3.23867845216438,0.693147180559945,-0.510825623765991,0.798507696217772,0.613104472886409,-0.287682072451781,1.68639895357023,0.60077386042893,0.405465108108164,0.318453731118535,0.916290731874155,-2.9704144655697,0.980829253011726,-1.22377543162212,0,-1.62225860086316,0.0923733201310153,-1.40477917579399,0.798507696217772,-0.710846757659346,3.25809653802148,1.1314021114911,-2.59026716544583,-1.38629436111989,1.33850369728354,0.405465108108164,1.38629436111989,-1.94591014905531,-0.525266307920785,0.517943091534855,-0.693147180559945,2.32727770558442,1.09861228866811,1.94591014905531,-0.606135803570315,0,1.38629436111989,1.07451473708905,1.75785791755237,0.916290731874155,0.217723483844871,-0.693147180559945,-0.352821374622742,1.09861228866811,1.79175946922805,-0.955511445027436,-1.69773051957978,0.712949807856125,1.87180217690159,1.05314991459135,3.10608033072286,1.46633706879343,1.48807705542983,-1.04145387482816,0.318453731118535,2.16905370036952,1.22377543162212,-1.42138568093116,2.69462718077007,1.6094379124341,-0.798507696217772,0.72054615474806,0.857450231851222,-1.7730673362159,3.58351893845611,-2.12823170584927,0.82098055206983,0.916290731874155,1.11861295537478,1.25276296849537,-0.336472236621213,1.16315080980568,2.13162729485041,-0.802346472524937,0.336472236621213,-0.502091943797236,2.96183072187831,-1.09861228866811,1.1239300966524,1.50407739677627,-1.46633706879343,-0.543615446588982,0.903970247486115,0,-0.99212880826566,-2.60268968544438,-0.693147180559945,-1.04982212449868,3.25809653802148,-2.35137525716348,-0.559615787935423,2.34180580614733,1.70474809223843,2.75684036527164,1.75401914124521,1.09861228866811,2.52572864430826,-0.405465108108164,0.980829253011726,-2.89037175789616,1.09861228866811,-1.67397643357167,3.97029191355212,2.80336038090653,0.105360515657826,2.16905370036952,0,3.73766961828337,2.81626378574244,0.405465108108164,0.980829253011726,2.44234703536921,-1.29928298413026,0.412532275331257,2.11021320034659,0.810930216216329,-3.09516617054218,1.87180217690159,1.25276296849537,0.22314355131421,-2.56494935746154,3.66356164612965,1.25276296849537,-1.42222637034595,0.133531392624523,0.362335747211132,-0.693147180559945,1.33500106673234,-0.22314355131421,-0.339867825622351,-0.287682072451781,1.7227665977411,2.65675690671466,0.133531392624523,1.15267950993839,0.8754687373539,1.46633706879343,1.46343009000212,1.04145387482816,0.182321556793954,0.955511445027436,-1.38629436111989,1.19770319131234,-0.916290731874155,1.50407739677627,2.39789527279837,-0.405465108108164,-0.252152651297294,0.510825623765991,1.54044504094715,-1.94591014905531,-0.16799173123913,-1.87180217690159,-0.182321556793955,2.60268968544438,0.287682072451781,1.68639895357023,0,1.29928298413026,-0.510825623765991,0.693147180559945,-2.04769284336526,-0.182321556793955,-0.287682072451781,0.281851152140987,-1.70474809223843,-0.385662480811985,1.50407739677627,2.83321334405622,0.635988766719997,1.50407739677627,3.2188758248682,-2.58399755243223,1.38629436111989,1.20397280432594,0.470003629245736,-0.251314428280906,-1.29928298413026,0,1.27686052007443,3.40119738166216,1.6094379124341,0.271933715483642,2.19722457733622,1.54044504094715,0.287682072451781,0.653926467406664,0.825074723602493,3.1267605359604,1.09861228866811,1.32175583998232,0.980829253011726,0.980829253011726,1.74919985480926,0,1.01160091167848,-1.20397280432594,1.09861228866811,0.133531392624523,0.693147180559945,1.18199389760716,0.22314355131421,-1.70474809223843,1.09861228866811,-0.810930216216329,-0.405465108108164,2.09714111877924,-0.587786664902119,-2.11453286149111,0.955511445027436,0.916290731874155,1.33500106673234,0,0.559615787935423,1.09861228866811,0.693147180559945,-0.631271776841858,1.65292302437384,-1.29532258291416,1.22377543162212,1.84582669049833,0.405465108108164,1.29928298413026,2.39789527279837,3.6603513704994,-2.07944154167984,0,-2.92673940206704,2.35137525716348,1.28519824424852,0.606135803570316,-1.43508452528932,-0.908855753386637,0.980829253011726,2.42774823594805,2.8233610476132,1.22866541691631,-0.510825623765991,0.281639757995818,2.14006616349627,-0.267957567104002,0.520534437892952,-0.38193461069797,1.44691898293633,-0.154150679827258,1.50407739677627,0.63907995928967,-1.8294997972109,2.00148000021012,-0.916290731874155,-1.92896059074154,0.82098055206983,0.955511445027436,0.693147180559945,0,-1.09861228866811,1.29392104098888,-1.04145387482816,-1.07755887947028,1.6094379124341,1.48538526376412,-0.916290731874155,-0.693147180559945,0.559615787935423,1.74919985480926,0,0,-1.38629436111989,1.79175946922805,2.49869997192034,1.58412010444981,1.32175583998232,0.780158557549575,0.693147180559945,0.847297860387203,-2.51230562397611,0.356674943938732,1.46633706879343,0.510825623765991,-1.64865862558738,-0.251314428280906,-2.35137525716348,1.22377543162212,1.6094379124341,0.847297860387203,-0.59783700075562,0.606135803570316,1.25276296849537,0.0800427076735366,0.773189888233482,-0.8754687373539,3.34403896782221,-1.64412347042199,-2.2512917986065,-0.810930216216329,-1.72474875894509,2.67414864942653,1.09861228866811,0.559615787935423,1.67397643357167,1.40534255609058,-1.22377543162212,-0.287682072451781,3.10608033072286,1.50407739677627,1.38629436111989,-2.39789527279837,-0.133531392624523,-1.49165487677772,0.916290731874155,0.405465108108164,1.20397280432594,2.07944154167984,0.133531392624523,-2.30258509299405,-0.22314355131421,-1.44691898293633,0.676886659688165,-0.693147180559945,1.29928298413026,-0.905708622543618,-0.356674943938732,-0.352821374622742,3.00403107636869,2.01490302054226,2.23804657185647,-0.880358722648092,0.296020417368935,0.59783700075562,2.42036812865043,0.693147180559945,3.58351893845611,1.34117392583942,-0.22314355131421,1.29928298413026,0.641853886172395,-0.693147180559945,0.78845736036427,0.798507696217772,0.587786664902119,2.15176220325946,-0.980829253011726,-0.916290731874155,-0.528969875889394,1.6094379124341,0.693147180559945,0.896088024556636,-1.84582669049833,0.44558510189759,2.30258509299405,0.975131231897089,1.29928298413026,1.09861228866811,1.6094379124341,0.980829253011726,-2.79320800944252,1.6094379124341,2.54206506362795,-1.41369333530801,0.430782916092454,1.42996942462255,0.916290731874155,0.356674943938732,-1.99243016469021,0.933288308242726,0.498991166118988,-0.998528830111127,-1.44036158239017,0.916290731874155,0.1633250561033,-0.287682072451781,-0.22314355131421,-0.916290731874155,1.30992138233532,-0.372809145134112,-1.38629436111989,1.46633706879343,-0.287682072451781,2.32060359849672,2.01490302054226,0.336472236621213,0.510825623765991,0.823200308808143,0.980829253011726,-1.019831410815,-0.916290731874155,1.02961941718116,0,1.28093384546206,3.33220451017521,1.43508452528932,0.234281295724666,-1.50407739677627,-1.20397280432594,2.00372971994414,1.23214368129263,-0.510825623765991,2.15948424935337,0.831297519040763,-0.78845736036427,-0.893817876022096,-2.67797274586493,1.09861228866811,2.33537491581704,0.693147180559945,-1.25276296849537,1.06087196068526,2.2512917986065,0.538996500732687,-0.570544858467613,0.693147180559945,-0.575364144903562,0.55206858230004,0.1633250561033,-2.19722457733622,-2.11021320034659,-1.42138568093116,1.17865499634165,-2.484906649788,-0.959775843813894,2.39789527279837,0.176930708159078,-2.30258509299405,-1.73460105538811,1.09861228866811,2.33939906611676,1.67397643357167,0.78845736036427,0.635988766719997,0.635988766719997,-0.916290731874155,1.20397280432594,0.405465108108164,0.693147180559945,1.6094379124341,3.16406758837321,2.41591377830105,-0.405465108108164,-0.405465108108164,1.99243016469021,-1.09861228866811,-1.09861228866811,-3.15700042115011,-0.405465108108164,1.09861228866811,1.16315080980568,2.86931834869833,1.019831410815,0.693147180559945,0.693147180559945,0.700473220652018,-0.926762031741451,1.29037423924115,1.34992671694902,-0.628608659422374,1.84582669049833,-2.96183072187831,-0.693147180559945,1.76358859226136,0.382992252256106,1.38629436111989,1.70474809223843,1.38629436111989,0.54654370636807,1.01160091167848,0.105360515657826,1.32175583998232,0.693147180559945,-1.64865862558738,0.847297860387203,1.17865499634165,-0.428995605518359,-0.117783035656384,0.693147180559945,-0.133531392624523,1.09861228866811,-2.52572864430826,0.182321556793954,1.145132304303,2.86220088092947,0.405465108108164,-0.129211731480006,-1.09861228866811,-0.451985123743057,2.70805020110221,-0.916290731874155,-1.38629436111989,3.29583686600433,-2.14006616349627,1.56861591791385,-1.0055218656021,1.65292302437384,-0.510825623765991,1.98100146886658,2.085998942226,-0.470003629245736,0.510825623765991,1.25276296849537,2.35137525716348,0.587786664902119,0.664976303593249,2.44234703536921,0,0.593774706746742,0.405465108108164,-0.0540672212702757,-3.41224721784874,-0.287682072451781,1.6094379124341,-0.405465108108164,0.356674943938732,1.09861228866811,-1.50407739677627,-0.251314428280906,0.00836824967051658,1.38629436111989,0.916290731874155,2.07944154167984,2.65926003693278,0.133531392624523,-0.336472236621213,0.510825623765991,2.87919845729804,0.587786664902119,-1.6094379124341,-1.17865499634165,0.8754687373539,0.887303195000903,0.693147180559945,0.200670695462151,0.929535958624175,0.451985123743057,0.606135803570316,-0.470003629245736,-1.09861228866811,0.606135803570316,-0.693147180559945,2.83321334405622,0.332133835022615,1.25276296849537,2.91777073208428,-2.00976162104185,-0.980829253011726,0.980829253011726,0.356674943938732,0.887303195000903,0,1.00458333901983,-0.356674943938732,-1.79175946922805,-1.01160091167848,-0.810930216216329,1.21639532432449,-0.405465108108164,-1.36330484289519,0,-0.117783035656384,0.405465108108164,-0.451985123743057,1.25276296849537,-1.38629436111989,0.693147180559945,1.09861228866811,1.70474809223843,-1.09861228866811,1.25276296849537,0.22314355131421,0.139761942375158,0.693147180559945,0.628608659422374,-1.25276296849537,-1.38629436111989,1.50407739677627,1.55973824388183,2.41358186896607,1.21924027645672,-1.09861228866811,1.6094379124341,0.772636331618184,1.09861228866811,3.03495298670727,0.0165293019512105,1.20896034583697,-1.20397280432594,-1.32954154452744,-1.24782468685479,0.916290731874155,-1.04982212449868,0.587786664902119,0.538996500732687,0,-0.847297860387204,-0.614366302706831,1.13497993283898,1.29928298413026,0.8754687373539,-0.510825623765991,0.405465108108164,0.510825623765991,1.84582669049833,-0.22314355131421,-0.693147180559945,0.847297860387203,-1.02165124753198,-0.693147180559945,-1.79175946922805,1.76958561173373,0.510825623765991,0.78845736036427,-0.356674943938732,-0.508322493547872,-0.693147180559945,0.847297860387203,1.38629436111989,-1.85389125033506,1.49009115480153],&#34;y&#34;:[1.13497993283898,0.479573080261886,-1.20397280432594,1.40089316054104,-0.405465108108164,0.49801666547341,1.09861228866811,0.567984037605939,0.534082485930258,0.319633672258383,-1.20397280432594,0.693147180559945,0.693147180559945,-1.32913594727994,0.153509859555409,0.575364144903562,0.470003629245736,-0.606135803570315,0.832909122935104,-1.145132304303,-0.470003629245736,-1.38629436111989,0.847297860387203,-0.693147180559945,1.38629436111989,1.02961941718116,0.944461608840851,1.09861228866811,-1.69459572077441,-1.15820438587036,0.847297860387203,0.405465108108164,0.693147180559945,0.287682072451781,-0.955511445027436,2.61006979274201,0.998528830111127,0.262364264467491,-0.189241999638528,0.169418151958047,-0.916290731874155,-0.0540672212702757,-0.200670695462151,-0.916290731874155,-0.0748012130826984,-0.693147180559945,-0.737598943130779,0.916290731874155,0,-0.773189888233482,0.324049716622656,-1.51982575374441,-0.27763173659828,-0.182321556793955,-2.20727491318972,-1.38629436111989,-0.602175402354219,0,1.1314021114911,2.14006616349627,0.8754687373539,-0.246860077931526,0.287682072451781,-1.25276296849537,0.470003629245736,0.7339691750802,-1.01160091167848,0.241162056816888,1.02961941718116,0,-1.38629436111989,0.0645385211375712,-0.310154928303839,1.84582669049833,1.6094379124341,-0.0571584138399485,1.02165124753198,-1.54044504094715,-0.266691796559945,-0.233614851181505,-0.171850256926659,-0.0870113769896297,-0.0540672212702757,1.4743052384426,0.318453731118535,0,-0.448950220047903,1.28785428830664,0.435318071257845,-0.133531392624523,-1.70474809223843,0.0727593542824283,-2.07944154167984,0.479573080261886,0.516690743218389,1.18958406687384,-0.470003629245736,-0.916290731874155,0,0.394654192003949,1.20397280432594,-0.916290731874155,0.253448900809539,1.25276296849537,-1.74663903394759,-0.329479201130242,1.32720544474988,-0.470003629245736,-1.09861228866811,-0.302280871872934,0,-2.4567357728213,-0.693147180559945,0.176398538490832,-0.965080896043587,0.773189888233482,-0.470003629245736,1.09861228866811,-0.348306694268216,0,1.87180217690159,1.90423745265474,-0.22314355131421,1.29928298413026,0.336472236621213,0.616774201775371,1.07880966137193,-0.102857385439708,-0.117783035656384,0.405465108108164,0.0923733201310153,-0.0870113769896297,0.405465108108164,0.485507815781701,-0.78845736036427,-0.328504066972036,0.405465108108164,-1.25276296849537,-1.48807705542983,0.481838086892738,1.74296930505862,0.255933374137201,-0.117783035656384,-0.78845736036427,0.955511445027436,0.679541528504167,2.19722457733622,-1.15923691048454,-1.38629436111989,1.01160091167848,-0.75377180237638,-0.8754687373539,-0.405465108108164,0.916290731874155,0.538996500732687,0.569094531889966,1.17865499634165,1.09861228866811,-0.693147180559945,-0.262364264467491,0.379489621704904,-0.387765531008763,0.22314355131421,-0.325422400434628,0.143100843640673,-0.693147180559945,0.630233355149376,-0.510825623765991,-0.693147180559945,0.664976303593249,0.182321556793954,-0.916290731874155,-0.510825623765991,0.706219262127298,-1.94591014905531,-0.259957524436926,0.594707107746693,-1.38629436111989,-0.117783035656384,1.6094379124341,1.09861228866811,0,-1.87180217690159,-0.405465108108164,-0.635988766719997,-0.287682072451781,0.0718257345712558,-0.22314355131421,0,-0.0606246218164347,0.22314355131421,1.09861228866811,-2.17853244432407,-0.189241999638528,1.09861228866811,0.510825623765991,1.145132304303,-1.13497993283898,-0.916290731874155,-0.510825623765991,-1.6094379124341,-0.241162056816888,-1.02961941718116,0.916290731874155,-0.245122458032985,-0.559615787935423,-0.559615787935423,-0.916290731874155,-0.170625517030763,-0.341749293722057,-1.1623789070271,-1.56861591791385,-0.260283098263666,1.6094379124341,-0.34484048629173,-0.728238500371215,0.405465108108164,0.43324467221524,0.405465108108164,0.405465108108164,-0.887303195000903,-2.86220088092947,0.268263986594679,0.693147180559945,-0.22314355131421,0.510825623765991,0.78845736036427,1.54044504094715,-1.46633706879343,1.38629436111989,-1.07451473708905,0.356674943938732,0.287682072451781,0.958850346292951,-0.693147180559945,-0.765467842139572,-0.510825623765991,1.16315080980568,-1.25276296849537,0.385662480811985,-0.105360515657827,0.769133087537867,0.492476485097794,-0.714653385780909,0.251314428280906,0.897941593205959,1.04145387482816,-0.693147180559945,1.51982575374441,-0.559615787935423,-0.693147180559945,0.228841572428847,0,0.641853886172395,-1.27629346590556,1.39518330853714,-1.53393035992596,0.162518929497775,0.127833371509885,1.25276296849537,0.287682072451781,0.393042588109607,0.498991166118988,0.693147180559945,-0.287682072451781,-0.121360857004267,-0.485507815781701,1.09861228866811,0.230523658611832,0.870828357797398,-1.09861228866811,0.750305594399894,0.832909122935104,0,-0.818310323513951,0.710846757659346,0.916290731874155,-0.432864082296279,-0.0689928714869513,0,-0.610909082322973,-0.0741079721537221,-0.628608659422374,-0.980829253011726,0.390866308687012,0.154150679827258,1.7404661748405,1.03407376753054,-0.405465108108164,0.610909082322973,-0.405465108108164,0.367724780125318,-0.158224005214894,-1.09861228866811,-0.105360515657827,0.864997437486605,-0.916290731874155,-0.693147180559945,1.06471073699243,-0.693147180559945,0.891998039305111,-0.562785362696702,-0.405465108108164,-0.182321556793955,0.405465108108164,0,-1.58923520511658,0.0540672212702756,1.20397280432594,0.498246841559131,0.847297860387203,0.693147180559945,1.25276296849537,0.287682072451781,0.63740519755171,-0.693147180559945,-0.0157981168765913,-0.693147180559945,0.0932574934865829,-2.2512917986065,0.336472236621213,1.25276296849537,-0.723000143709626,-0.916290731874155,0.0606246218164348,1.40691364832263,1.01160091167848,0.75377180237638,0.606135803570316,0.251314428280906,1.66139765136481,0,1.22377543162212,0.22314355131421,-0.133531392624523,2.18122423598978,0.287682072451781,0.559615787935423,0.78845736036427,0.405465108108164,-0.0924750857648483,0,0.606135803570316,1.46633706879343,-0.839329690738027,-0.405465108108164,-0.182321556793955,0.492476485097794,0.916290731874155,0.125163142954006,0.251314428280906,0.287682072451781,-1.09861228866811,-1.09861228866811,-0.526093095896779,-0.980829253011726,-0.916290731874155,0.447312218043665,-0.470003629245736,-1.25276296849537,0.980829253011726,0.955511445027436,0.810930216216329,2.30258509299405,0.154150679827258,-0.576887374444083,0.693147180559945,0.998528830111127,1.20397280432594,0.78845736036427,-2.12026353620009,-1.46633706879343,0.10648348040245,0.816761136527122,0.111225635110224,-0.271933715483642,0.475423696715075,0.356674943938732,-0.916290731874155,0.897941593205959,-0.219628609206765,0.322083499169114,-0.336472236621213,0.318453731118535,-0.559615787935423,-0.980829253011726,1.48160454092422,-0.619039208406224,0.268263986594679,-1.20397280432594,0.847297860387203,1.38629436111989,0.693147180559945,-0.0408219945202552,0.693147180559945,0.154150679827258,-1.6094379124341,-0.693147180559945,-1.38629436111989,1.46633706879343,-0.587786664902119,-0.739667196194838,0,-0.287682072451781,1.09861228866811,-0.78845736036427,-0.559615787935423,0,0.22314355131421,-0.22314355131421,0.83034830207343,-0.168622712435793,2.30258509299405,-1.22377543162212,-0.405465108108164,0,0.693147180559945,0.479182684004732,-0.0444517625708338,1.38629436111989,-0.307484699747961,-0.628608659422374,0.0666913744986724,0.117783035656383,-1.43508452528932,0.432133355190326,0.559615787935423,0.613104472886409,0.397682967666109,0.189241999638528,-0.510825623765991,-0.84483176789201,0.773189888233482,-0.194744076792512,1.12300374179227,-0.460815203191329,0.287682072451781,-0.810930216216329,2.30258509299405,0.330241686870577,-0.0851578083403066,-0.485507815781701,1.16315080980568,-0.164549387048157,1.42138568093116,-0.451985123743057,-0.693147180559945,-0.955511445027436,-1.29928298413026,0.572069249006709,-0.262364264467491,-0.553385238184787,-0.693147180559945,-0.216223108469636,-0.916290731874155,-0.336472236621213,-0.182321556793955,-0.0741079721537221,1.09861228866811,0.510825623765991,0.0571584138399484,0.0659579677917976,0.952008814476234,-0.0851578083403066,0.773189888233482,-0.526093095896779,-0.693147180559945,1.38629436111989,-1.55059741241117,0.8754687373539,0.510825623765991,-0.887303195000903,-0.59783700075562,0.78845736036427,0.333491608483075,-0.414943852062708,1.25276296849537,-1.73460105538811,-1.64865862558738,-1.17865499634165,-0.22314355131421,0.944461608840851,1.02961941718116,-1.17865499634165,0.710241613919245,0,-0.313657558855041,-0.470003629245736,-0.569533224592769,0.741937344729377,0,-1.22377543162212,0.105360515657826,0,-1.05860695405441,-0.916290731874155,0.405465108108164,1.50407739677627,-0.575364144903562,0,-1.01160091167848,-1.79175946922805,0.693147180559945,-1.09861228866811,-1.20397280432594,0.955511445027436,-1.87180217690159,-0.27443684570176,-1.25276296849537,-0.095310179804325,-0.0434851119397389,-1.6094379124341,0.287682072451781,0.0303053494953288,-0.117783035656384,-0.693147180559945,0.966440515559627,0.606135803570316,-0.466089729924599,-2.25606507735915,-0.966843011036987,1.05605267424931,1.01856958099457,-0.693147180559945,0.126293725324292,0.344840486291729,0.22314355131421,-1.52605630349505,-0.965080896043587,0,1.09861228866811,0.591364486250003,1.79175946922805,1.21302263984585,-0.182321556793955,-0.916290731874155,-0.528969875889394,0.451985123743057,1.42138568093116,0.50310357767208,-0.367724780125317,0.592051063688577,0.559615787935423,0.643754425230369,0,0.693147180559945,0.451985123743057,0.182321556793954,-0.310154928303839,0.268263986594679,-0.163453072489572,-0.262364264467491,-0.559615787935423,1.26165191591261,0.287682072451781,-1.17865499634165,-0.405465108108164,0.129211731480006,-0.405465108108164,-0.998528830111127,-0.961411167154625,0.287682072451781,0.328857986635967,-0.916290731874155,0.955511445027436,-0.287682072451781,0.619039208406224,-0.931821673905032,-1.01160091167848,1.09861228866811,1.29928298413026,0.962275845115979,-1.54044504094715,1.42138568093116,-0.510825623765991,-0.238411023444998,-0.559615787935423,-1.5114575040739,-0.916290731874155,1.02961941718116,-1.29928298413026,0.896088024556636,0.27763173659828,0.154150679827258,0.0636256958802116,-0.980829253011726,-0.154150679827258,1.67006253425054,-0.325422400434628,0.510825623765991,-0.965080896043587,-1.59601489210196,-1.46633706879343,-0.45953232937844,-0.143100843640673,0.75377180237638,-0.117783035656384,-0.693147180559945,0.693147180559945,0.405465108108164,0.693147180559945,-0.105360515657827,-2.07944154167984,1.46040233327361,-1.15267950993839,0.998528830111127,-1.16899308542991,0.847297860387203,-0.0180185055026783,0,0.356674943938732,0.470003629245736,-0.602175402354219,0.887303195000903,-0.606135803570315,-0.559615787935423,-1.38629436111989,-1.09861228866811,0.611801541105993,1.02961941718116,0,0.154150679827258,-0.470003629245736,-0.287682072451781,-0.810930216216329,0.405465108108164,-0.336472236621213,1.09861228866811,0.4678082386823,0.644357016390513,0.405465108108164,-0.650587566141149,0.75377180237638,-1.09861228866811,0,-0.287682072451781,-1.09861228866811,1.09861228866811,0.485507815781701,-0.564892845036267,0.569094531889966,1.25276296849537,-0.693147180559945,0.44628710262842,-1.7404661748405,1.71410853499799,-0.23638877806423,0.826678573184468,0.274436845701761,0.342095494175575,1.25276296849537,-2.53897387105828,-0.860201265223111,-1.38629436111989,-0.998528830111127,1.18958406687384,0.405465108108164,0.693147180559945,1.02961941718116,0.773189888233482,0,-0.194156014440957,0,-1.17865499634165,-0.800777844752311,1.17865499634165,0.693147180559945,-1.38629436111989,-0.167054084663166,0.374693449441411,0.559615787935423,-0.641853886172395,1.13497993283898,0.405465108108164,0.893817876022097,-1.09861228866811,-0.451985123743057,0.444685821261446,0.916290731874155,0,0.324239668185579,0.595983432106298,0.492476485097794,-0.287682072451781,1.19625075823203,-0.887303195000903,0.0606246218164348,0.624154309072994,0.470003629245736,-0.336472236621213,-0.22314355131421,-0.351397886837888,0.916290731874155,0.581921545449721,0.405465108108164,0.693147180559945,0.0384662808277959,-0.847297860387204,-1.28785428830664,-0.227932068046007,-0.287682072451781,1.01160091167848,-0.405465108108164,-1.17865499634165,0.693147180559945,-0.559615787935423,-1.46633706879343,0.451007128555081,0.405465108108164,-0.916290731874155,0.53062825106217,0.637577329405134,0,-1.09861228866811,-0.510825623765991,0.432133355190326,-0.587786664902119,0.42744401482694,-0.356674943938732,0.117783035656383,0.887303195000903,-0.693147180559945,-1.09861228866811,0.0377403279828471,0,-2.01490302054226,-0.470003629245736,-0.78845736036427,1.17865499634165,-0.336472236621213,0,0.02531780798429,0.22314355131421,0.2578291093021,0.145711811181394,-0.182321556793955,-0.559615787935423,1.17865499634165,-0.336472236621213,-0.847297860387204,0.527354925717201,-0.8754687373539,-0.485507815781701,0.133531392624523,-1.20397280432594,0.916290731874155,-0.405465108108164,-1.14862270924277,0.619039208406224,0.8754687373539,-0.650587566141149,-0.693147180559945,0.22314355131421,-1.87180217690159,-0.693147180559945,1.66500776358891,-0.154150679827258,-0.693147180559945,-0.22314355131421,0.864997437486605,-0.836248024200619,0.693147180559945,1.04145387482816,0.22314355131421,-0.268263986594679,1.50407739677627,0.677398823591806,0.287682072451781,0.615185639090233,1.09861228866811,1.6094379124341,-1.49645699273658,-0.336472236621213,0.62509371731493,0.559615787935423,0.641853886172395,-0.810930216216329,-0.0125061755052297,0.123232640423948,0.693147180559945,-2.52572864430826,0,-1.02961941718116,-0.916290731874155,0,0,-0.993251773010283,-0.916290731874155,0.782759339249632,-1.09861228866811,0.405465108108164,-0.510825623765991,0.367724780125318,1.25276296849537,-0.22314355131421,-0.619039208406224,0.8754687373539,-0.336472236621213,-0.287682072451781,0.316799471022508,-1.09861228866811,-0.510825623765991,-1.17865499634165,-1.28935241592766,0.693147180559945,0,1.38629436111989,-0.251314428280906,0.852777326151829],&#34;text&#34;:[&#34;patrick&#34;,&#34;debbie&#34;,&#34;ploy&#34;,&#34;travis&#34;,&#34;elevating&#34;,&#34;hitchcock&#34;,&#34;pumping&#34;,&#34;strength&#34;,&#34;lessons&#34;,&#34;luke&#34;,&#34;associate&#34;,&#34;uncut&#34;,&#34;sheets&#34;,&#34;flashback&#34;,&#34;low&#34;,&#34;remarkably&#34;,&#34;gimli&#34;,&#34;committing&#34;,&#34;recognition&#34;,&#34;challenged&#34;,&#34;underwater&#34;,&#34;monotone&#34;,&#34;colourful&#34;,&#34;overdose&#34;,&#34;pursuit&#34;,&#34;adored&#34;,&#34;marion&#34;,&#34;tasty&#34;,&#34;avoid&#34;,&#34;propaganda&#34;,&#34;seedy&#34;,&#34;historically&#34;,&#34;agrees&#34;,&#34;restrictions&#34;,&#34;spending&#34;,&#34;fabulous&#34;,&#34;prequels&#34;,&#34;mortal&#34;,&#34;bus&#34;,&#34;daniel&#34;,&#34;jokers&#34;,&#34;beer&#34;,&#34;spends&#34;,&#34;taped&#34;,&#34;cartoon&#34;,&#34;pass&#34;,&#34;jon&#34;,&#34;polish&#34;,&#34;endings&#34;,&#34;justify&#34;,&#34;modern&#34;,&#34;ugh&#34;,&#34;cuba&#34;,&#34;geeks&#34;,&#34;overrated&#34;,&#34;poorly&#34;,&#34;turkey&#34;,&#34;wits&#34;,&#34;astonishing&#34;,&#34;annette&#34;,&#34;stirring&#34;,&#34;rental&#34;,&#34;it.if&#34;,&#34;nah&#34;,&#34;ethan&#34;,&#34;touching&#34;,&#34;stale&#34;,&#34;julia&#34;,&#34;dean&#34;,&#34;carey&#39;s&#34;,&#34;offset&#34;,&#34;platoon&#34;,&#34;hilarity&#34;,&#34;gandalf&#34;,&#34;collected&#34;,&#34;bone&#34;,&#34;overlook&#34;,&#34;unlikable&#34;,&#34;jokes&#34;,&#34;steel&#34;,&#34;balls&#34;,&#34;imitation&#34;,&#34;humans&#34;,&#34;excellent&#34;,&#34;terminator&#34;,&#34;lil&#34;,&#34;display&#34;,&#34;edition&#34;,&#34;perkins&#34;,&#34;tool&#34;,&#34;alleged&#34;,&#34;entertained&#34;,&#34;illogical&#34;,&#34;absurdity&#34;,&#34;pitt&#34;,&#34;doubts&#34;,&#34;filling&#34;,&#34;clarify&#34;,&#34;knights&#34;,&#34;humorous&#34;,&#34;flowing&#34;,&#34;ann&#34;,&#34;dance&#34;,&#34;biblical&#34;,&#34;pointless&#34;,&#34;shark&#34;,&#34;powerful&#34;,&#34;murdering&#34;,&#34;ai&#34;,&#34;cable&#34;,&#34;dolls&#34;,&#34;stinker&#34;,&#34;chuckle&#34;,&#34;war&#34;,&#34;insults&#34;,&#34;samuel&#34;,&#34;swinging&#34;,&#34;catalyst&#34;,&#34;omg&#34;,&#34;observer&#34;,&#34;funky&#34;,&#34;flawless&#34;,&#34;roars&#34;,&#34;recreate&#34;,&#34;jamie&#34;,&#34;coppola&#34;,&#34;machines&#34;,&#34;jaws&#34;,&#34;invented&#34;,&#34;relish&#34;,&#34;wire&#34;,&#34;trap&#34;,&#34;assembly&#34;,&#34;jackson&#39;s&#34;,&#34;passes&#34;,&#34;hint&#34;,&#34;symbols&#34;,&#34;fools&#34;,&#34;unbearable&#34;,&#34;neo&#34;,&#34;superbly&#34;,&#34;jessica&#34;,&#34;jason&#34;,&#34;shout&#34;,&#34;nonstop&#34;,&#34;surprisingly&#34;,&#34;haters&#34;,&#34;bothered&#34;,&#34;rescuing&#34;,&#34;experienced&#34;,&#34;dungeons&#34;,&#34;breasts&#34;,&#34;objectification&#34;,&#34;rounded&#34;,&#34;scar&#34;,&#34;photography&#34;,&#34;realizes&#34;,&#34;damien&#34;,&#34;pig&#34;,&#34;surface&#34;,&#34;uplifting&#34;,&#34;fought&#34;,&#34;thirsty&#34;,&#34;fed&#34;,&#34;camps&#34;,&#34;photographed&#34;,&#34;ford&#34;,&#34;portrayals&#34;,&#34;booze&#34;,&#34;highlight&#34;,&#34;anticipating&#34;,&#34;violated&#34;,&#34;stumbling&#34;,&#34;shining&#34;,&#34;carpenter&#34;,&#34;hilton&#34;,&#34;absence&#34;,&#34;senseless&#34;,&#34;worship&#34;,&#34;exceeded&#34;,&#34;expanded&#34;,&#34;barney&#34;,&#34;repeating&#34;,&#34;festivals&#34;,&#34;shitty&#34;,&#34;herring&#34;,&#34;toys&#34;,&#34;fashionable&#34;,&#34;suspects&#34;,&#34;parent&#34;,&#34;defense&#34;,&#34;tasks&#34;,&#34;abomination&#34;,&#34;golf&#34;,&#34;feared&#34;,&#34;heaven&#39;s&#34;,&#34;heartwarming&#34;,&#34;rave&#34;,&#34;mercy&#34;,&#34;depressed&#34;,&#34;shallow&#34;,&#34;accurately&#34;,&#34;debate&#34;,&#34;honour&#34;,&#34;ron&#34;,&#34;trigger&#34;,&#34;awkward&#34;,&#34;inform&#34;,&#34;spy&#34;,&#34;appears&#34;,&#34;joke&#34;,&#34;soap&#34;,&#34;corny&#34;,&#34;welles&#34;,&#34;globe&#34;,&#34;nicholas&#34;,&#34;pillow&#34;,&#34;fiction&#34;,&#34;supremely&#34;,&#34;loathing&#34;,&#34;lava&#34;,&#34;redeeming&#34;,&#34;leading&#34;,&#34;intends&#34;,&#34;roman&#34;,&#34;gratification&#34;,&#34;artwork&#34;,&#34;possess&#34;,&#34;injury&#34;,&#34;luc&#34;,&#34;drags&#34;,&#34;explore&#34;,&#34;characters.the&#34;,&#34;cried&#34;,&#34;misfortune&#34;,&#34;unbelievably&#34;,&#34;lurid&#34;,&#34;miguel&#34;,&#34;vomit&#34;,&#34;jr&#34;,&#34;examples&#34;,&#34;odyssey&#34;,&#34;united&#34;,&#34;sentimental&#34;,&#34;interactions&#34;,&#34;insight&#34;,&#34;wicked&#34;,&#34;bore&#34;,&#34;impeccable&#34;,&#34;subjects&#34;,&#34;cox&#34;,&#34;jedi&#34;,&#34;denial&#34;,&#34;communication&#34;,&#34;overdone&#34;,&#34;spectacular&#34;,&#34;crappy&#34;,&#34;scorsese&#34;,&#34;vegas&#34;,&#34;darkness&#34;,&#34;certainty&#34;,&#34;pace&#34;,&#34;slave&#34;,&#34;wounds&#34;,&#34;puppet&#34;,&#34;murderer&#34;,&#34;dick&#34;,&#34;hur&#34;,&#34;infamous&#34;,&#34;lang&#34;,&#34;depraved&#34;,&#34;survival&#34;,&#34;hardy&#34;,&#34;harold&#34;,&#34;swear&#34;,&#34;twists&#34;,&#34;elegant&#34;,&#34;ass&#34;,&#34;june&#34;,&#34;cornball&#34;,&#34;channel&#34;,&#34;bogart&#34;,&#34;shields&#34;,&#34;coma&#34;,&#34;lucas&#34;,&#34;redux&#34;,&#34;masterful&#34;,&#34;innocence&#34;,&#34;electric&#34;,&#34;robinson&#34;,&#34;proposal&#34;,&#34;convincingly&#34;,&#34;vampires&#34;,&#34;novelty&#34;,&#34;demonic&#34;,&#34;hitchcock&#39;s&#34;,&#34;communist&#34;,&#34;accidentally&#34;,&#34;influential&#34;,&#34;nudge&#34;,&#34;anthony&#34;,&#34;nazis&#34;,&#34;one.this&#34;,&#34;carol&#34;,&#34;straightforward&#34;,&#34;mischief&#34;,&#34;mediocre&#34;,&#34;conditions&#34;,&#34;illness&#34;,&#34;superman&#34;,&#34;circle&#34;,&#34;thrilled&#34;,&#34;triggered&#34;,&#34;collins&#34;,&#34;nolan&#34;,&#34;falsely&#34;,&#34;scary&#34;,&#34;sinking&#34;,&#34;shot&#34;,&#34;placement&#34;,&#34;compassion&#34;,&#34;plunge&#34;,&#34;media&#34;,&#34;peril&#34;,&#34;spectacle&#34;,&#34;leonard&#34;,&#34;surrealism&#34;,&#34;reed&#34;,&#34;handled&#34;,&#34;glover&#34;,&#34;superb&#34;,&#34;philosophical&#34;,&#34;nailed&#34;,&#34;dawn&#34;,&#34;cheat&#34;,&#34;breathtaking&#34;,&#34;gospel&#34;,&#34;restored&#34;,&#34;leonardo&#34;,&#34;hears&#34;,&#34;rating&#34;,&#34;mexicans&#34;,&#34;assigned&#34;,&#34;facility&#34;,&#34;fake&#34;,&#34;gadgets&#34;,&#34;swedish&#34;,&#34;inglourious&#34;,&#34;disturbs&#34;,&#34;complexity&#34;,&#34;goal&#34;,&#34;vicious&#34;,&#34;nausea&#34;,&#34;struggled&#34;,&#34;boobs&#34;,&#34;neon&#34;,&#34;claw&#34;,&#34;scale&#34;,&#34;tooth&#34;,&#34;utter&#34;,&#34;apt&#34;,&#34;strangelove&#34;,&#34;arrival&#34;,&#34;excellence&#34;,&#34;poverty&#34;,&#34;troll&#34;,&#34;strongest&#34;,&#34;layers&#34;,&#34;mixing&#34;,&#34;grief&#34;,&#34;monstrosity&#34;,&#34;nutshell&#34;,&#34;psycho&#34;,&#34;reservoir&#34;,&#34;directorial&#34;,&#34;trek&#34;,&#34;charles&#34;,&#34;rooted&#34;,&#34;ticked&#34;,&#34;treasure&#34;,&#34;bruce&#34;,&#34;quentin&#34;,&#34;praises&#34;,&#34;unit&#34;,&#34;address&#34;,&#34;sections&#34;,&#34;engrossing&#34;,&#34;laden&#34;,&#34;novels&#34;,&#34;tropical&#34;,&#34;paranoid&#34;,&#34;smoothly&#34;,&#34;tremendously&#34;,&#34;lived&#34;,&#34;solves&#34;,&#34;hostage&#34;,&#34;glossy&#34;,&#34;crack&#34;,&#34;moderately&#34;,&#34;andrew&#34;,&#34;would&#39;ve&#34;,&#34;fart&#34;,&#34;unstable&#34;,&#34;tens&#34;,&#34;unfolds&#34;,&#34;duck&#34;,&#34;instincts&#34;,&#34;women&#39;s&#34;,&#34;robbing&#34;,&#34;throwing&#34;,&#34;joseph&#34;,&#34;tommy&#34;,&#34;captures&#34;,&#34;november&#34;,&#34;outdo&#34;,&#34;chandler&#34;,&#34;raymond&#34;,&#34;tarantino&#34;,&#34;zombie&#34;,&#34;well.the&#34;,&#34;austin&#34;,&#34;morally&#34;,&#34;window&#34;,&#34;spiral&#34;,&#34;pitiful&#34;,&#34;moon&#34;,&#34;switches&#34;,&#34;gregory&#34;,&#34;wilder&#34;,&#34;japan&#34;,&#34;coarse&#34;,&#34;weak&#34;,&#34;profoundly&#34;,&#34;acting&#34;,&#34;relate&#34;,&#34;giant&#34;,&#34;progression&#34;,&#34;tin&#34;,&#34;haunting&#34;,&#34;extended&#34;,&#34;island&#34;,&#34;lawyer&#34;,&#34;bible&#34;,&#34;parody&#34;,&#34;phenomenal&#34;,&#34;cliched&#34;,&#34;raving&#34;,&#34;adolescent&#34;,&#34;resemble&#34;,&#34;humanity&#34;,&#34;corpse&#34;,&#34;continuity&#34;,&#34;limitations&#34;,&#34;factory&#34;,&#34;dracula&#34;,&#34;advertised&#34;,&#34;sophistication&#34;,&#34;arc&#34;,&#34;premier&#34;,&#34;classroom&#34;,&#34;activity&#34;,&#34;boot&#34;,&#34;extraordinary&#34;,&#34;period&#34;,&#34;nominations&#34;,&#34;similarly&#34;,&#34;cowardly&#34;,&#34;decoration&#34;,&#34;unfunny&#34;,&#34;distinction&#34;,&#34;deemed&#34;,&#34;suspend&#34;,&#34;moore&#34;,&#34;germany&#39;s&#34;,&#34;fighter&#34;,&#34;trick&#34;,&#34;del&#34;,&#34;unpleasant&#34;,&#34;incoherent&#34;,&#34;exaggeration&#34;,&#34;crafting&#34;,&#34;capturing&#34;,&#34;exploration&#34;,&#34;basement&#34;,&#34;brad&#34;,&#34;girls&#34;,&#34;games&#34;,&#34;stereo&#34;,&#34;pg&#34;,&#34;eli&#34;,&#34;boxing&#34;,&#34;despicable&#34;,&#34;daycare&#34;,&#34;depiction&#34;,&#34;sh&#34;,&#34;horrifically&#34;,&#34;norton&#34;,&#34;brilliantly&#34;,&#34;institution&#34;,&#34;bros&#34;,&#34;submit&#34;,&#34;embarrassed&#34;,&#34;faced&#34;,&#34;monkeys&#34;,&#34;timeline&#34;,&#34;transported&#34;,&#34;catastrophe&#34;,&#34;shyamalan&#34;,&#34;grate&#34;,&#34;juno&#34;,&#34;pacing&#34;,&#34;tossed&#34;,&#34;exposure&#34;,&#34;bear&#34;,&#34;upcoming&#34;,&#34;load&#34;,&#34;samurai&#34;,&#34;authorities&#34;,&#34;technical&#34;,&#34;pile&#34;,&#34;hour&#34;,&#34;differences&#34;,&#34;bates&#34;,&#34;versa&#34;,&#34;jews&#34;,&#34;filmmaking&#34;,&#34;slipped&#34;,&#34;blacks&#34;,&#34;shouting&#34;,&#34;triple&#34;,&#34;bounty&#34;,&#34;steven&#34;,&#34;vasquez&#34;,&#34;nomination&#34;,&#34;ordeal&#34;,&#34;categorize&#34;,&#34;looked&#34;,&#34;primarily&#34;,&#34;scariest&#34;,&#34;expression&#34;,&#34;youtube&#34;,&#34;created&#34;,&#34;jew&#34;,&#34;george&#34;,&#34;enduring&#34;,&#34;savvy&#34;,&#34;definitive&#34;,&#34;conveying&#34;,&#34;dennis&#34;,&#34;crop&#34;,&#34;silent&#34;,&#34;previews&#34;,&#34;lastly&#34;,&#34;journey&#34;,&#34;indictment&#34;,&#34;circles&#34;,&#34;independence&#34;,&#34;classics&#34;,&#34;trapped&#34;,&#34;signed&#34;,&#34;bucks&#34;,&#34;abandons&#34;,&#34;fi&#34;,&#34;confirm&#34;,&#34;hysterical&#34;,&#34;fruit&#34;,&#34;tragic&#34;,&#34;ridiculous&#34;,&#34;hmm&#34;,&#34;transcends&#34;,&#34;messiah&#34;,&#34;henry&#34;,&#34;calculated&#34;,&#34;unexpected&#34;,&#34;agenda&#34;,&#34;behavior&#34;,&#34;traumatized&#34;,&#34;atrocious&#34;,&#34;pacifist&#34;,&#34;imaginative&#34;,&#34;spared&#34;,&#34;crafted&#34;,&#34;noir&#34;,&#34;crucial&#34;,&#34;follow&#34;,&#34;um&#34;,&#34;transformers&#34;,&#34;unforgettable&#34;,&#34;pages&#34;,&#34;portal&#34;,&#34;accolades&#34;,&#34;contrived&#34;,&#34;semblance&#34;,&#34;replace&#34;,&#34;mike&#34;,&#34;struggle&#34;,&#34;france&#34;,&#34;formal&#34;,&#34;day&#39;s&#34;,&#34;mary&#34;,&#34;raises&#34;,&#34;resistance&#34;,&#34;disappear&#34;,&#34;wonderfully&#34;,&#34;subjected&#34;,&#34;roller&#34;,&#34;clich√©&#34;,&#34;pirates&#34;,&#34;grey&#34;,&#34;cannon&#34;,&#34;alec&#34;,&#34;wives&#34;,&#34;teeth&#34;,&#34;gangs&#34;,&#34;false&#34;,&#34;wicker&#34;,&#34;rubber&#34;,&#34;attitudes&#34;,&#34;freeman&#34;,&#34;achieves&#34;,&#34;expressing&#34;,&#34;broken&#34;,&#34;sounding&#34;,&#34;barrels&#34;,&#34;obsolete&#34;,&#34;deviates&#34;,&#34;patch&#34;,&#34;caan&#34;,&#34;joker&#34;,&#34;towers&#34;,&#34;it.this&#34;,&#34;mentioning&#34;,&#34;doc&#34;,&#34;piper&#34;,&#34;vengeful&#34;,&#34;leatherface&#34;,&#34;crystal&#34;,&#34;resorting&#34;,&#34;environmental&#34;,&#34;holocaust&#34;,&#34;engaging&#34;,&#34;restrained&#34;,&#34;jail&#34;,&#34;relationship&#34;,&#34;costs&#34;,&#34;outstanding&#34;,&#34;surrounded&#34;,&#34;freaky&#34;,&#34;inception&#34;,&#34;wayans&#34;,&#34;wizards&#34;,&#34;affairs&#34;,&#34;endure&#34;,&#34;manhattan&#34;,&#34;scottish&#34;,&#34;provoking&#34;,&#34;translation&#34;,&#34;keen&#34;,&#34;retired&#34;,&#34;spawned&#34;,&#34;brink&#34;,&#34;mall&#34;,&#34;inch&#34;,&#34;historic&#34;,&#34;sign&#34;,&#34;stray&#34;,&#34;plummer&#34;,&#34;juvenile&#34;,&#34;heroic&#34;,&#34;stack&#34;,&#34;tables&#34;,&#34;england&#34;,&#34;eve&#34;,&#34;improbable&#34;,&#34;lovely&#34;,&#34;jake&#34;,&#34;spit&#34;,&#34;basterds&#34;,&#34;makeover&#34;,&#34;closet&#34;,&#34;hanks&#34;,&#34;exorcist&#34;,&#34;compelling&#34;,&#34;flying&#34;,&#34;touched&#34;,&#34;redeem&#34;,&#34;requiem&#34;,&#34;lawrence&#34;,&#34;formed&#34;,&#34;demanding&#34;,&#34;listens&#34;,&#34;submarine&#34;,&#34;duel&#34;,&#34;learns&#34;,&#34;norman&#34;,&#34;transforming&#34;,&#34;deliver&#34;,&#34;simpson&#34;,&#34;severe&#34;,&#34;spoof&#34;,&#34;requirement&#34;,&#34;blend&#34;,&#34;travesties&#34;,&#34;stabbed&#34;,&#34;improving&#34;,&#34;overweight&#34;,&#34;fairness&#34;,&#34;books&#34;,&#34;raging&#34;,&#34;sweating&#34;,&#34;akira&#34;,&#34;vader&#34;,&#34;shortly&#34;,&#34;bend&#34;,&#34;omnipresent&#34;,&#34;forrest&#34;,&#34;uttered&#34;,&#34;laughed&#34;,&#34;nerds&#34;,&#34;planes&#34;,&#34;blown&#34;,&#34;elicited&#34;,&#34;incapable&#34;,&#34;sadistic&#34;,&#34;mother&#39;s&#34;,&#34;unexplained&#34;,&#34;buys&#34;,&#34;gosh&#34;,&#34;visions&#34;,&#34;superheroes&#34;,&#34;eastwood&#34;,&#34;killer&#34;,&#34;heightened&#34;,&#34;nest&#34;,&#34;ben&#34;,&#34;shelby&#34;,&#34;allied&#34;,&#34;joining&#34;,&#34;predicted&#34;,&#34;allusions&#34;,&#34;officer&#34;,&#34;flashes&#34;,&#34;hopper&#34;,&#34;directions&#34;,&#34;stalking&#34;,&#34;influenced&#34;,&#34;elm&#34;,&#34;videos&#34;,&#34;attract&#34;,&#34;bent&#34;,&#34;positively&#34;,&#34;bearing&#34;,&#34;relentlessly&#34;,&#34;stinkers&#34;,&#34;unknowingly&#34;,&#34;calm&#34;,&#34;oppressed&#34;,&#34;modified&#34;,&#34;adequately&#34;,&#34;duncan&#34;,&#34;paint&#34;,&#34;commercially&#34;,&#34;arthur&#34;,&#34;wile&#34;,&#34;rap&#34;,&#34;tender&#34;,&#34;knight&#34;,&#34;toy&#34;,&#34;obsession&#34;,&#34;preconceived&#34;,&#34;harrowing&#34;,&#34;boring&#34;,&#34;interact&#34;,&#34;woody&#34;,&#34;ride&#34;,&#34;apartment&#34;,&#34;beard&#34;,&#34;funny&#34;,&#34;wood&#34;,&#34;widow&#34;,&#34;moronic&#34;,&#34;delve&#34;,&#34;reasoning&#34;,&#34;tests&#34;,&#34;snobbish&#34;,&#34;weekend&#34;,&#34;atrocities&#34;,&#34;emotionless&#34;,&#34;technique&#34;,&#34;dives&#34;,&#34;sacrilegious&#34;,&#34;styled&#34;,&#34;ambiguous&#34;,&#34;psychosis&#34;,&#34;editors&#34;,&#34;healthy&#34;,&#34;hilariously&#34;,&#34;stumble&#34;,&#34;clark&#34;,&#34;godfather&#34;,&#34;assumption&#34;,&#34;psychic&#34;,&#34;stooges&#34;,&#34;badly&#34;,&#34;scroll&#34;,&#34;implied&#34;,&#34;studying&#34;,&#34;geniuses&#34;,&#34;kane&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;markers&#34;,&#34;marker&#34;:{&#34;autocolorscale&#34;:false,&#34;color&#34;:[&#34;rgba(72,23,105,1)&#34;,&#34;rgba(64,69,136,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(44,113,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(52,182,121,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(33,144,141,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(72,33,114,1)&#34;,&#34;rgba(72,30,112,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(72,34,116,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(44,113,142,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(31,149,139,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(36,134,142,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(44,115,142,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(69,6,89,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(54,92,141,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(31,162,135,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(54,92,141,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(47,108,142,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(56,87,140,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(60,80,139,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(61,78,138,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(69,56,130,1)&#34;,&#34;rgba(68,1,84,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(31,158,137,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,18,101,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(253,231,37,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(46,109,142,1)&#34;,&#34;rgba(62,76,138,1)&#34;,&#34;rgba(72,39,120,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(32,163,134,1)&#34;,&#34;rgba(60,80,139,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(68,60,132,1)&#34;,&#34;rgba(59,82,139,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(54,92,141,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(32,147,140,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(72,39,120,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(51,99,141,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(30,157,137,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(72,39,120,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(171,220,50,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(32,146,140,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(51,99,141,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(46,109,142,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(51,99,141,1)&#34;,&#34;rgba(33,144,141,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(69,4,88,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(39,126,142,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(40,174,128,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(47,107,142,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,18,101,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(66,65,134,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(34,140,141,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(47,108,142,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(37,171,130,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(69,6,89,1)&#34;,&#34;rgba(37,132,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(32,146,140,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(32,146,140,1)&#34;,&#34;rgba(65,66,135,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(42,119,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(112,207,87,1)&#34;,&#34;rgba(41,123,142,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(68,191,112,1)&#34;,&#34;rgba(42,118,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(54,93,141,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(35,136,142,1)&#34;,&#34;rgba(65,68,135,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(50,100,142,1)&#34;,&#34;rgba(50,182,122,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(57,85,140,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(39,127,142,1)&#34;,&#34;rgba(71,19,102,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,21,104,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(61,77,138,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(69,5,89,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(68,60,132,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(69,5,89,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(72,30,112,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(39,126,142,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(33,143,141,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(32,163,134,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(69,3,87,1)&#34;,&#34;rgba(60,79,138,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(35,137,142,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(59,82,139,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(72,21,104,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(60,79,138,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(69,56,130,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(61,77,138,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(46,179,124,1)&#34;,&#34;rgba(64,69,136,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(41,123,142,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(65,66,135,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(53,95,141,1)&#34;,&#34;rgba(43,116,142,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(65,68,135,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(67,61,132,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(72,21,103,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(69,5,89,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(48,106,142,1)&#34;,&#34;rgba(71,43,122,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(40,124,142,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(65,67,135,1)&#34;,&#34;rgba(67,61,132,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(31,158,137,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(60,80,139,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(45,112,142,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(72,34,116,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(35,136,142,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(56,89,140,1)&#34;,&#34;rgba(71,19,102,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(58,83,139,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,16,98,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(35,138,141,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(49,102,142,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(37,171,130,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(66,65,134,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(54,93,141,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(44,114,142,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(65,66,135,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(69,56,130,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(53,95,141,1)&#34;,&#34;rgba(52,97,141,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(31,151,139,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(68,1,85,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(48,106,142,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(57,85,140,1)&#34;,&#34;rgba(69,6,89,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(57,85,140,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(70,8,91,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(61,78,138,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(34,141,141,1)&#34;,&#34;rgba(53,95,141,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(34,139,141,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(41,122,142,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(72,33,114,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(39,126,142,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(37,133,142,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,30,112,1)&#34;,&#34;rgba(37,132,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(70,8,91,1)&#34;,&#34;rgba(46,110,142,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(31,149,139,1)&#34;,&#34;rgba(61,78,138,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(65,67,135,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(62,75,137,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(57,87,140,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(54,93,141,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(31,158,137,1)&#34;,&#34;rgba(69,4,87,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(69,4,88,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(46,110,142,1)&#34;,&#34;rgba(68,1,84,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(69,4,88,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(44,115,142,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(41,122,142,1)&#34;,&#34;rgba(66,65,134,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(71,19,102,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(66,64,134,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(72,32,114,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(37,133,142,1)&#34;,&#34;rgba(70,6,90,1)&#34;,&#34;rgba(72,33,114,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(46,110,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(72,39,119,1)&#34;,&#34;rgba(71,43,122,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(69,54,129,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(70,49,126,1)&#34;],&#34;opacity&#34;:0.5,&#34;size&#34;:[5.85498525186645,5.75530441896398,4.81725640546078,7.08156052852364,3.77952755905512,9.9842436220335,4.99637249295625,6.1572630538017,6.1287861523447,8.67448473764607,4.81725640546078,4.93974368044287,4.75023400996066,6.04120514519478,11.800976881346,5.42032093320559,4.81725640546078,5.05048064158557,5.7209404608662,5.57692664550957,5.46084045125838,5.20049630343061,4.59992424613035,4.51331266338146,5.42032093320559,5.15231378700878,6.24071762028082,4.41500410032034,9.30732123076958,8.33254439454472,4.59992424613035,5.61399031987096,5.50040616788309,4.29839198225795,6.3477754241973,6.80500105069749,5.46084045125838,7.20167346483616,6.32143372411601,8.07389478160306,4.29839198225795,5.85498525186645,5.95009316947746,4.29839198225795,9.08363165588957,7.39300013384823,5.75530441896398,5.7890808290592,5.5390824263879,5.88716480950467,10.9409844765614,5.91886038129558,6.45054565636157,4.67822710228234,9.18419234317619,9.22142353961344,7.88151099443129,4.88020521554463,5.98088287203413,5.15231378700878,5.05048064158557,6.42522737787542,4.29839198225795,4.51331266338146,4.81725640546078,8.16692436252423,5.61399031987096,6.24071762028082,5.15231378700878,4.75023400996066,4.59992424613035,5.65031984192698,5.46084045125838,5.2922643048763,4.75023400996066,5.7890808290592,5.75530441896398,5.05048064158557,13.9735960212014,6.04120514519478,5.7890808290592,5.33612082866362,8.16692436252423,13.2479147743441,7.60999825947506,4.88020521554463,6.89271409827211,5.85498525186645,5.5390824263879,5.61399031987096,4.81725640546078,7.53905747746838,5.10237746846527,5.75530441896398,7.18194911665511,5.61399031987096,4.81725640546078,4.29839198225795,4.14642011121829,6.89271409827211,4.81725640546078,4.29839198225795,10.663041994367,5.10237746846527,9.27067247086978,10.016700945829,9.9842436220335,5.46084045125838,4.75023400996066,5.95009316947746,5.68595718285079,5.88716480950467,5.50040616788309,15.9976555097511,5.57692664550957,5.88716480950467,4.81725640546078,4.41500410032034,5.57692664550957,4.14642011121829,4.93974368044287,7.50308028699906,4.51331266338146,4.88020521554463,7.27945944121871,7.29863729372068,6.6684424037042,9.55735724835328,5.75530441896398,3.77952755905512,6.6214650478061,5.33612082866362,4.93974368044287,5.2470977677078,5.68595718285079,6.04120514519478,4.93974368044287,5.10237746846527,5.88716480950467,6.37384967506928,6.1572630538017,6.37384967506928,7.97880475556136,4.99637249295625,5.10237746846527,7.53905747746838,6.24071762028082,6.6684424037042,4.59992424613035,6.84917088333504,5.42032093320559,5.75530441896398,3.77952755905512,4.88020521554463,5.88716480950467,7.01983484339694,6.26791391617673,4.99637249295625,5.10237746846527,6.1287861523447,5.68595718285079,6.1572630538017,4.51331266338146,5.65031984192698,5.5390824263879,4.51331266338146,7.67964888615596,4.99637249295625,4.14642011121829,6.32143372411601,4.67822710228234,4.88020521554463,4.41500410032034,7.62752910941972,4.99637249295625,8.15155690093495,6.09995980183062,5.95009316947746,5.05048064158557,5.10237746846527,4.41500410032034,6.3477754241973,5.61399031987096,3.77952755905512,5.46084045125838,4.29839198225795,8.83679238485105,4.51331266338146,6.24071762028082,5.7209404608662,5.82229883597697,4.75023400996066,6.47562618873679,6.32143372411601,5.3787751170721,4.41500410032034,5.57692664550957,5.85498525186645,5.2470977677078,5.68595718285079,7.27945944121871,5.42032093320559,5.15231378700878,4.29839198225795,5.98088287203413,4.67822710228234,7.12207778622041,4.88020521554463,8.74275800951811,8.83679238485105,10.4947638556414,5.57692664550957,7.06111430735605,6.3477754241973,5.98088287203413,6.04120514519478,4.59992424613035,10.702042388254,4.59992424613035,4.59992424613035,5.3787751170721,8.16692436252423,8.19749892618241,5.10237746846527,6.09995980183062,4.41500410032034,4.99637249295625,5.05048064158557,4.99637249295625,4.59992424613035,6.37384967506928,5.75530441896398,4.29839198225795,7.01983484339694,5.50040616788309,6.57369799056115,4.41500410032034,5.2470977677078,5.82229883597697,7.04053989294647,6.8710191542449,6.50047554933428,6.45054565636157,6.73750988052566,4.99637249295625,5.88716480950467,5.33612082866362,6.42522737787542,5.91886038129558,5.2922643048763,5.82229883597697,6.9356566308181,4.75023400996066,5.57692664550957,6.37384967506928,8.05819320353604,7.7818527876071,7.55691757760989,6.1572630538017,6.78267252788327,4.29839198225795,7.94662591203789,6.09995980183062,4.75023400996066,5.2470977677078,6.64504999568007,6.01124782799873,4.75023400996066,6.52510001496245,6.52510001496245,4.75023400996066,6.32143372411601,5.7209404608662,4.99637249295625,6.21321742685738,8.49234772297105,4.88020521554463,7.74807728728558,6.45054565636157,4.14642011121829,6.3477754241973,6.3477754241973,5.33612082866362,4.67822710228234,7.60999825947506,5.46084045125838,6.6684424037042,6.52510001496245,5.20049630343061,6.3477754241973,3.77952755905512,5.2922643048763,6.8710191542449,4.75023400996066,5.15231378700878,7.50308028699906,5.7890808290592,6.42522737787542,5.91886038129558,4.14642011121829,7.08156052852364,7.7818527876071,3.77952755905512,4.67822710228234,5.42032093320559,4.88020521554463,7.67964888615596,5.85498525186645,4.81725640546078,9.56899437935629,5.61399031987096,5.10237746846527,4.51331266338146,5.5390824263879,9.40388388095622,4.51331266338146,12.9738285632099,4.93974368044287,12.407355216846,5.2470977677078,5.3787751170721,4.51331266338146,7.37432573196402,4.88020521554463,5.7209404608662,6.52510001496245,4.93974368044287,5.42032093320559,6.26791391617673,4.99637249295625,9.88583660124146,6.1287861523447,5.2922643048763,5.10237746846527,4.93974368044287,6.71466797636047,4.29839198225795,5.2922643048763,6.18540291488937,4.93974368044287,12.7740090363008,4.41500410032034,5.05048064158557,4.99637249295625,8.61917271143022,4.93974368044287,4.67822710228234,5.57692664550957,4.29839198225795,5.68595718285079,6.59768272602791,5.5390824263879,4.41500410032034,4.75023400996066,5.7890808290592,4.67822710228234,4.29839198225795,7.35555381163162,4.81725640546078,7.81534563284998,4.67822710228234,6.78267252788327,5.46084045125838,5.7209404608662,6.29481617214543,7.60999825947506,5.61399031987096,5.46084045125838,4.81725640546078,4.99637249295625,5.5390824263879,4.99637249295625,8.74275800951811,6.54950558342098,5.82229883597697,5.85498525186645,7.71401185255184,5.05048064158557,4.29839198225795,5.88716480950467,7.84856280275047,7.69686804858876,4.75023400996066,5.15231378700878,5.2922643048763,4.67822710228234,5.50040616788309,5.20049630343061,5.61399031987096,4.81725640546078,5.20049630343061,4.93974368044287,4.93974368044287,7.31771119892611,4.51331266338146,4.81725640546078,4.75023400996066,5.91886038129558,4.59992424613035,6.59768272602791,7.31771119892611,6.6214650478061,5.10237746846527,4.29839198225795,5.3787751170721,4.99637249295625,4.67822710228234,4.41500410032034,4.51331266338146,6.78267252788327,6.39966446129382,7.48496070147531,6.07077081294139,5.2922643048763,3.77952755905512,4.88020521554463,5.3787751170721,10.2808801473632,6.09995980183062,4.59992424613035,6.47562618873679,5.33612082866362,8.63305981358281,5.05048064158557,5.46084045125838,7.24078497365455,5.2922643048763,5.85498525186645,7.48496070147531,6.32143372411601,4.41500410032034,8.81010478523574,5.15231378700878,22.6771653543307,7.53905747746838,7.46675207461058,5.2470977677078,4.81725640546078,6.64504999568007,6.37384967506928,7.24078497365455,6.01124782799873,5.2470977677078,9.72952487762825,6.78267252788327,5.10237746846527,4.93974368044287,5.10237746846527,5.5390824263879,8.31773779651867,5.33612082866362,6.57369799056115,5.10237746846527,6.6214650478061,5.2470977677078,4.75023400996066,4.67822710228234,5.50040616788309,4.75023400996066,4.41500410032034,5.7890808290592,7.18194911665511,6.9356566308181,8.74275800951811,5.88716480950467,5.7890808290592,4.75023400996066,4.59992424613035,8.34730299673642,5.05048064158557,4.99637249295625,5.3787751170721,5.65031984192698,4.99637249295625,7.62752910941972,7.12207778622041,5.10237746846527,5.95009316947746,5.65031984192698,5.05048064158557,4.51331266338146,5.42032093320559,5.15231378700878,5.05048064158557,7.12207778622041,11.2536970852041,10.2393375328987,4.81725640546078,7.69686804858876,5.65031984192698,5.3787751170721,5.2922643048763,5.15231378700878,6.64504999568007,6.64504999568007,4.29839198225795,6.73750988052566,7.53905747746838,5.42032093320559,6.50047554933428,4.93974368044287,6.21321742685738,6.01124782799873,5.20049630343061,4.81725640546078,5.10237746846527,4.93974368044287,6.07077081294139,4.51331266338146,5.2470977677078,7.20167346483616,4.75023400996066,4.88020521554463,7.91419663816726,5.05048064158557,6.57369799056115,7.83198825221453,5.05048064158557,7.01983484339694,7.64498045314673,11.8594978711237,5.65031984192698,6.21321742685738,4.51331266338146,7.55691757760989,6.99899663828633,4.51331266338146,5.5390824263879,5.57692664550957,4.75023400996066,5.68595718285079,7.10188092320679,4.88020521554463,6.18540291488937,4.67822710228234,4.29839198225795,10.9127340432949,5.82229883597697,5.82229883597697,6.71466797636047,6.64504999568007,9.99508156228079,5.7209404608662,9.4158378930007,4.88020521554463,4.75023400996066,5.10237746846527,4.67822710228234,6.29481617214543,5.61399031987096,9.31948360778685,6.1287861523447,5.7209404608662,8.12065877989981,4.29839198225795,5.05048064158557,5.42032093320559,7.7818527876071,6.09995980183062,5.46084045125838,6.1572630538017,4.29839198225795,9.7521055937645,4.29839198225795,5.82229883597697,4.29839198225795,6.95691026538124,11.1357003562906,4.93974368044287,4.99637249295625,4.88020521554463,7.76500081705985,5.05048064158557,6.78267252788327,4.99637249295625,6.47562618873679,4.67822710228234,7.01983484339694,4.29839198225795,5.88716480950467,4.88020521554463,6.71466797636047,7.64498045314673,5.46084045125838,9.89684888979454,5.2922643048763,5.46084045125838,7.37432573196402,5.65031984192698,4.41500410032034,5.57692664550957,7.14215334346163,4.99637249295625,5.65031984192698,8.04243379218159,7.35555381163162,5.75530441896398,4.14642011121829,4.51331266338146,5.7890808290592,5.2470977677078,5.15231378700878,5.82229883597697,6.71466797636047,5.42032093320559,6.29481617214543,7.96274627533861,5.20049630343061,7.55691757760989,5.82229883597697,5.75530441896398,5.46084045125838,6.6214650478061,5.3787751170721,6.69164691177173,5.2922643048763,5.20049630343061,4.75023400996066,7.18194911665511,5.15231378700878,4.99637249295625,6.91425889886634,5.46084045125838,4.29839198225795,4.81725640546078,3.77952755905512,4.75023400996066,4.75023400996066,8.16692436252423,6.52510001496245,5.20049630343061,5.7890808290592,5.42032093320559,4.41500410032034,4.41500410032034,6.21321742685738,5.20049630343061,4.41500410032034,5.2470977677078,8.18223818501315,7.01983484339694,4.51331266338146,6.26791391617673,8.96817179108344,6.6684424037042,8.76980578717714,5.75530441896398,5.33612082866362,7.12207778622041,8.67448473764607,4.51331266338146,5.98088287203413,5.85498525186645,4.59992424613035,5.46084045125838,6.50047554933428,5.61399031987096,4.93974368044287,5.15231378700878,5.15231378700878,4.14642011121829,5.65031984192698,4.59992424613035,5.05048064158557,6.76017674320361,5.05048064158557,4.51331266338146,6.09995980183062,6.18540291488937,5.50040616788309,4.67822710228234,5.57692664550957,6.82716598798061,4.59992424613035,6.54950558342098,4.99637249295625,5.10237746846527,6.59768272602791,4.29839198225795,4.59992424613035,7.57469362882203,6.8710191542449,7.10188092320679,7.57469362882203,6.39966446129382,5.3787751170721,5.7209404608662,8.52082423687209,4.81725640546078,5.3787751170721,4.51331266338146,6.1287861523447,4.88020521554463,6.32143372411601,6.24071762028082,4.14642011121829,7.4300623607585,4.59992424613035,5.85498525186645,9.88583660124146,4.29839198225795,5.61399031987096,3.77952755905512,5.05048064158557,4.75023400996066,4.67822710228234,4.99637249295625,9.39190440767069,5.42032093320559,4.29839198225795,5.50040616788309,7.48496070147531,5.61399031987096,4.75023400996066,4.41500410032034,7.24078497365455,4.88020521554463,9.2584017406471,5.05048064158557,5.05048064158557,7.27945944121871,4.14642011121829,5.20049630343061,6.32143372411601,5.10237746846527,5.05048064158557,4.81725640546078,4.99637249295625,5.05048064158557,4.75023400996066,6.3477754241973,10.2497481923104,4.51331266338146,5.91886038129558,7.53905747746838,4.67822710228234,4.67822710228234,5.05048064158557,5.3787751170721,4.59992424613035,7.29863729372068,5.05048064158557,5.2470977677078,4.93974368044287,4.81725640546078,5.7890808290592,4.59992424613035,6.3477754241973,5.20049630343061,5.05048064158557,5.7890808290592,5.10237746846527,4.51331266338146,4.93974368044287,4.14642011121829,6.07077081294139,4.81725640546078,4.75023400996066,4.51331266338146,5.50040616788309,6.04120514519478,4.51331266338146,5.33612082866362,4.51331266338146,5.61399031987096,4.67822710228234,8.76980578717714,9.86375222856076,6.42522737787542,4.41500410032034,5.10237746846527,14.6323556111669,4.75023400996066,7.52111212479883,7.73108127887284,7.10188092320679,4.81725640546078,20.4882510406151,7.88151099443129,5.2470977677078,5.50040616788309,4.88020521554463,5.15231378700878,4.88020521554463,4.59992424613035,7.24078497365455,5.85498525186645,4.88020521554463,6.26791391617673,4.41500410032034,3.77952755905512,4.41500410032034,5.2922643048763,4.51331266338146,4.51331266338146,5.20049630343061,5.75530441896398,4.75023400996066,5.7890808290592,9.64980839366583,4.41500410032034,4.99637249295625,5.05048064158557,9.07092719669573,4.14642011121829,5.20049630343061,4.93974368044287,7.27945944121871,8.54913073717632],&#34;symbol&#34;:&#34;circle&#34;,&#34;line&#34;:{&#34;width&#34;:1.88976377952756,&#34;color&#34;:[&#34;rgba(72,23,105,1)&#34;,&#34;rgba(64,69,136,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(44,113,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(52,182,121,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(33,144,141,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(72,33,114,1)&#34;,&#34;rgba(72,30,112,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(72,34,116,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(44,113,142,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(31,149,139,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(36,134,142,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(44,115,142,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(69,6,89,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(54,92,141,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(31,162,135,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(54,92,141,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(47,108,142,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(56,87,140,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(60,80,139,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(61,78,138,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(69,56,130,1)&#34;,&#34;rgba(68,1,84,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(31,158,137,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,18,101,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(253,231,37,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(46,109,142,1)&#34;,&#34;rgba(62,76,138,1)&#34;,&#34;rgba(72,39,120,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(32,163,134,1)&#34;,&#34;rgba(60,80,139,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(68,60,132,1)&#34;,&#34;rgba(59,82,139,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(54,92,141,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(32,147,140,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(72,39,120,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(51,99,141,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(30,157,137,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(72,39,120,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(171,220,50,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(32,146,140,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(51,99,141,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(46,109,142,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(51,99,141,1)&#34;,&#34;rgba(33,144,141,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(69,4,88,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(39,126,142,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(40,174,128,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(47,107,142,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,18,101,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(66,65,134,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(34,140,141,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(47,108,142,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(37,171,130,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(69,6,89,1)&#34;,&#34;rgba(37,132,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(32,146,140,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(32,146,140,1)&#34;,&#34;rgba(65,66,135,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(42,119,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(112,207,87,1)&#34;,&#34;rgba(41,123,142,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(68,191,112,1)&#34;,&#34;rgba(42,118,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(54,93,141,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(35,136,142,1)&#34;,&#34;rgba(65,68,135,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(50,100,142,1)&#34;,&#34;rgba(50,182,122,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(57,85,140,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,12,95,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(39,127,142,1)&#34;,&#34;rgba(71,19,102,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,21,104,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(61,77,138,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(69,5,89,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(68,60,132,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(68,2,85,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(69,5,89,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(72,30,112,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(39,126,142,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(33,143,141,1)&#34;,&#34;rgba(49,104,142,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(32,163,134,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(69,3,87,1)&#34;,&#34;rgba(60,79,138,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(35,137,142,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(59,82,139,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(72,21,104,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(60,79,138,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(69,56,130,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(61,77,138,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(53,94,141,1)&#34;,&#34;rgba(46,179,124,1)&#34;,&#34;rgba(64,69,136,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(41,123,142,1)&#34;,&#34;rgba(55,91,141,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(65,66,135,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(53,95,141,1)&#34;,&#34;rgba(43,116,142,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(46,111,142,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(65,68,135,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(67,61,132,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(72,21,103,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(69,5,89,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(48,106,142,1)&#34;,&#34;rgba(71,43,122,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(40,124,142,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(65,67,135,1)&#34;,&#34;rgba(67,61,132,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(31,158,137,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(60,80,139,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(45,112,142,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(72,34,116,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(35,136,142,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(56,89,140,1)&#34;,&#34;rgba(71,19,102,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(58,83,139,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(70,51,127,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(71,16,98,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(35,138,141,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(49,102,142,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(37,171,130,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(66,65,134,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(54,93,141,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(71,42,122,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(44,114,142,1)&#34;,&#34;rgba(71,45,123,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(65,66,135,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(70,50,126,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(68,3,86,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(69,56,130,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(53,95,141,1)&#34;,&#34;rgba(52,97,141,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,37,118,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(31,151,139,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(68,1,85,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(50,101,142,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(48,106,142,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(57,85,140,1)&#34;,&#34;rgba(69,6,89,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(57,85,140,1)&#34;,&#34;rgba(63,71,136,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(52,96,141,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(70,8,91,1)&#34;,&#34;rgba(57,86,140,1)&#34;,&#34;rgba(61,78,138,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(70,12,95,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(34,141,141,1)&#34;,&#34;rgba(53,95,141,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(34,139,141,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(41,122,142,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(72,33,114,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(39,126,142,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(37,133,142,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(69,55,129,1)&#34;,&#34;rgba(70,9,92,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,26,108,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,34,115,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(51,98,141,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,30,112,1)&#34;,&#34;rgba(37,132,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(70,8,91,1)&#34;,&#34;rgba(46,110,142,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(31,149,139,1)&#34;,&#34;rgba(61,78,138,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(65,67,135,1)&#34;,&#34;rgba(72,20,102,1)&#34;,&#34;rgba(66,63,133,1)&#34;,&#34;rgba(62,75,137,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(57,87,140,1)&#34;,&#34;rgba(72,22,104,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(54,93,141,1)&#34;,&#34;rgba(70,9,93,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(31,158,137,1)&#34;,&#34;rgba(69,4,87,1)&#34;,&#34;rgba(68,59,132,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(71,44,122,1)&#34;,&#34;rgba(72,38,119,1)&#34;,&#34;rgba(69,4,88,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,29,111,1)&#34;,&#34;rgba(62,73,137,1)&#34;,&#34;rgba(46,110,142,1)&#34;,&#34;rgba(68,1,84,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(41,121,142,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(71,46,124,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(69,4,88,1)&#34;,&#34;rgba(64,70,136,1)&#34;,&#34;rgba(70,8,92,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(44,115,142,1)&#34;,&#34;rgba(68,2,86,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(41,122,142,1)&#34;,&#34;rgba(66,65,134,1)&#34;,&#34;rgba(71,19,101,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,23,105,1)&#34;,&#34;rgba(71,17,100,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(71,19,102,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,40,120,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,52,128,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(58,84,140,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(66,64,134,1)&#34;,&#34;rgba(70,49,126,1)&#34;,&#34;rgba(72,30,111,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(71,15,98,1)&#34;,&#34;rgba(71,14,97,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,35,116,1)&#34;,&#34;rgba(63,72,137,1)&#34;,&#34;rgba(70,48,126,1)&#34;,&#34;rgba(55,90,140,1)&#34;,&#34;rgba(72,32,114,1)&#34;,&#34;rgba(72,41,121,1)&#34;,&#34;rgba(59,81,139,1)&#34;,&#34;rgba(71,47,125,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(37,133,142,1)&#34;,&#34;rgba(70,6,90,1)&#34;,&#34;rgba(72,33,114,1)&#34;,&#34;rgba(72,36,117,1)&#34;,&#34;rgba(72,31,112,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(46,110,142,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(72,24,106,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(70,7,91,1)&#34;,&#34;rgba(72,39,119,1)&#34;,&#34;rgba(71,43,122,1)&#34;,&#34;rgba(72,25,107,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(70,7,90,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(68,58,131,1)&#34;,&#34;rgba(72,28,110,1)&#34;,&#34;rgba(70,10,93,1)&#34;,&#34;rgba(72,20,103,1)&#34;,&#34;rgba(72,32,113,1)&#34;,&#34;rgba(70,11,94,1)&#34;,&#34;rgba(69,54,129,1)&#34;,&#34;rgba(69,53,129,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(71,16,99,1)&#34;,&#34;rgba(72,27,109,1)&#34;,&#34;rgba(72,33,115,1)&#34;,&#34;rgba(71,18,100,1)&#34;,&#34;rgba(71,13,96,1)&#34;,&#34;rgba(67,62,133,1)&#34;,&#34;rgba(68,57,131,1)&#34;,&#34;rgba(70,49,126,1)&#34;]}},&#34;hoveron&#34;:&#34;points&#34;,&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;frame&#34;:null}],&#34;layout&#34;:{&#34;margin&#34;:{&#34;t&#34;:40.8401826484018,&#34;r&#34;:7.30593607305936,&#34;b&#34;:37.2602739726027,&#34;l&#34;:48.9497716894977},&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;title&#34;:{&#34;text&#34;:&#34;What are people saying about the best and worst movies on IMDB?&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:17.5342465753425},&#34;x&#34;:0,&#34;xref&#34;:&#34;paper&#34;},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[-5.06,5.06],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;-5.0&#34;,&#34;-2.5&#34;,&#34;0.0&#34;,&#34;2.5&#34;,&#34;5.0&#34;],&#34;tickvals&#34;:[-5,-2.5,0,2.5,5],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;-5.0&#34;,&#34;-2.5&#34;,&#34;0.0&#34;,&#34;2.5&#34;,&#34;5.0&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;&#34;,&#34;tickcolor&#34;:null,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(235,235,235,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;y&#34;,&#34;title&#34;:{&#34;text&#34;:&#34;‚Üê Bad Movies - Good Movies ‚Üí&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187}},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[-5.06,5.06],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;-5.0&#34;,&#34;-2.5&#34;,&#34;0.0&#34;,&#34;2.5&#34;,&#34;5.0&#34;],&#34;tickvals&#34;:[-5,-2.5,0,2.5,5],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;-5.0&#34;,&#34;-2.5&#34;,&#34;0.0&#34;,&#34;2.5&#34;,&#34;5.0&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;&#34;,&#34;tickcolor&#34;:null,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(235,235,235,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;x&#34;,&#34;title&#34;:{&#34;text&#34;:&#34;‚Üê Bad Reviews - Good Reviews ‚Üí&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187}},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;shapes&#34;:[{&#34;type&#34;:&#34;rect&#34;,&#34;fillcolor&#34;:null,&#34;line&#34;:{&#34;color&#34;:null,&#34;width&#34;:0,&#34;linetype&#34;:[]},&#34;yref&#34;:&#34;paper&#34;,&#34;xref&#34;:&#34;paper&#34;,&#34;x0&#34;:0,&#34;x1&#34;:1,&#34;y0&#34;:0,&#34;y1&#34;:1}],&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;bgcolor&#34;:null,&#34;bordercolor&#34;:null,&#34;borderwidth&#34;:0,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895}},&#34;hovermode&#34;:&#34;closest&#34;,&#34;width&#34;:700,&#34;height&#34;:700,&#34;barmode&#34;:&#34;relative&#34;},&#34;config&#34;:{&#34;doubleClick&#34;:&#34;reset&#34;,&#34;showSendToCloud&#34;:false,&#34;displayModeBar&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;attrs&#34;:{&#34;103ac44aa7ca8&#34;:{&#34;xintercept&#34;:{},&#34;type&#34;:&#34;scatter&#34;},&#34;103ac14de1cd0&#34;:{&#34;yintercept&#34;:{}},&#34;103ac235a664&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;size&#34;:{},&#34;colour&#34;:{},&#34;text&#34;:{}}},&#34;cur_data&#34;:&#34;103ac44aa7ca8&#34;,&#34;visdat&#34;:{&#34;103ac44aa7ca8&#34;:[&#34;function (y) &#34;,&#34;x&#34;],&#34;103ac14de1cd0&#34;:[&#34;function (y) &#34;,&#34;x&#34;],&#34;103ac235a664&#34;:[&#34;function (y) &#34;,&#34;x&#34;]},&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;shinyEvents&#34;:[&#34;plotly_hover&#34;,&#34;plotly_click&#34;,&#34;plotly_selected&#34;,&#34;plotly_relayout&#34;,&#34;plotly_brushed&#34;,&#34;plotly_brushing&#34;,&#34;plotly_clickannotation&#34;,&#34;plotly_doubleclick&#34;,&#34;plotly_deselect&#34;,&#34;plotly_afterplot&#34;,&#34;plotly_sunburstclick&#34;],&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;And we are done and it looks amazing! With this dataviz we are able to see that the word &lt;em&gt;overrated&lt;/em&gt; is mainly used in negative reviews about good movies. Likewise &lt;em&gt;unfunny&lt;/em&gt; is used in bad reviews about bad movies. There is many more examples that I‚Äôll let you explore by yourself.&lt;/p&gt;
&lt;p&gt;Thanks for tagging along!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nytimes.com/interactive/2017/11/07/upshot/modern-love-what-we-write-when-we-write-about-love.html&#34;&gt;The Words Men and Women Use When They Write About Love&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2 trial and error - US trade data</title>
      <link>/2018/06/12/ggplot2-trial-and-error-us-trade-data/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      <guid>/2018/06/12/ggplot2-trial-and-error-us-trade-data/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2018-12-16.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This blogpost will showcase an example of a workflow and its associated thought process when iterating though visualization styles working with &lt;code&gt;ggplot2&lt;/code&gt;. For this reason will this post include a lot of sub par charts as you are seeing the steps not just the final product.&lt;/p&gt;
&lt;p&gt;We will use census data concerning US trade with other nations which we scrape as well.&lt;/p&gt;
&lt;div id=&#34;setting-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setting up&lt;/h2&gt;
&lt;p&gt;We will using a standard set of packages, &lt;code&gt;tidyverse&lt;/code&gt; for general data manipulation, &lt;code&gt;rvest&lt;/code&gt; and &lt;code&gt;httr&lt;/code&gt; for scraping and manipulation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2
library(rvest)
## Warning: package &amp;#39;xml2&amp;#39; was built under R version 3.6.2
library(httr)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting the data&lt;/h2&gt;
&lt;p&gt;This project started when I found the following link &lt;a href=&#34;https://www.census.gov/foreign-trade/balance/c4099.html&#34;&gt;https://www.census.gov/foreign-trade/balance/c4099.html&lt;/a&gt;. It include a month by month breakdown of U.S. trade in goods with Denmark from 1985 till the present. Unfortunately the data is given in yearly tables, so we have a little bit of munching to do. First we notice that the last part of the url include &lt;code&gt;c4099&lt;/code&gt;, which after some googling reveals that 4099 is the country code for Denmark. The fill list of country trade codes are given on the following page &lt;a href=&#34;https://www.census.gov/foreign-trade/schedules/c/countrycode.html&#34;&gt;https://www.census.gov/foreign-trade/schedules/c/countrycode.html&lt;/a&gt; which also include a &lt;code&gt;.txt&lt;/code&gt; file so we don‚Äôt have to scrape. We will remove the first entry and last 6 since US doesn‚Äôt trade with itself.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;continent_df &amp;lt;- tibble(number = as.character(1:7),
                       continent = c(&amp;quot;North America&amp;quot;, &amp;quot;Central America&amp;quot;, 
                                     &amp;quot;South America&amp;quot;, &amp;quot;Europe&amp;quot;, &amp;quot;Asia&amp;quot;, 
                                     &amp;quot;Australia and Oceania&amp;quot;, &amp;quot;Africa&amp;quot;))

code_df &amp;lt;- read_lines(&amp;quot;https://www.census.gov/foreign-trade/schedules/c/country.txt&amp;quot;,
                      skip = 5) %&amp;gt;%
  tibble(code = .) %&amp;gt;%
  separate(code, c(&amp;quot;code&amp;quot;, &amp;quot;name&amp;quot;, &amp;quot;iso&amp;quot;), sep = &amp;quot;\\|&amp;quot;) %&amp;gt;%
  mutate_all(trimws) %&amp;gt;%
  mutate(con_code = str_sub(code, 1, 1)) %&amp;gt;%
  filter(!is.na(iso), 
         name != &amp;quot;United States of America&amp;quot;, 
         con_code != 9) %&amp;gt;%
  left_join(continent_df, by = c(&amp;quot;con_code&amp;quot; = &amp;quot;number&amp;quot;)) %&amp;gt;%
  select(-con_code)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With these code we create the targeted urls we will be scraping&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;target_urls &amp;lt;- str_glue(&amp;quot;https://www.census.gov/foreign-trade/balance/c{code_df$code}.html&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will be replication hrbrmstr‚Äôs scraping code &lt;a href=&#34;https://rud.is/b/2017/09/19/pirating-web-content-responsibly-with-r/&#34;&gt;found here&lt;/a&gt; since it works wonderfully.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;s_GET &amp;lt;- safely(GET)

pb &amp;lt;- progress_estimated(length(target_urls))
map(target_urls, ~{
  pb$tick()$print()
  Sys.sleep(5)
  s_GET(.x)
}) -&amp;gt; httr_raw_responses

write_rds(httr_raw_responses, &amp;quot;data/2018-us-trade-raw-httr-responses.rds&amp;quot;)

good_responses &amp;lt;- keep(httr_raw_responses, ~!is.null(.x$result))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then we wrangle all the html files by extracting all the tables, parse the numeric variables and combining them to one table.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;wrangle &amp;lt;- function(x, name) {
  # Read html and extract tables
  read_html(x[[1]]) %&amp;gt;%
  html_nodes(&amp;quot;table&amp;quot;) %&amp;gt;%
  html_table() %&amp;gt;%
  # parse numeric columns
  map(~ mutate_at(.x, vars(Exports:Balance), funs(parse_number))) %&amp;gt;%
  bind_rows() %&amp;gt;%
  mutate(Country = name)
}

full_data &amp;lt;- map2_df(good_responses, code_df$code, wrangle)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lastly we do some polishing up with the date variables and join in the country information.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data &amp;lt;- full_data %&amp;gt;%
  filter(!str_detect(Month, &amp;quot;TOTAL&amp;quot;)) %&amp;gt;%
  mutate(Date = parse_date(Month, format = &amp;quot;%B %Y&amp;quot;), 
         Month = lubridate::month(Date),
         Year = lubridate::year(Date)) %&amp;gt;%
  left_join(code_df, by = c(&amp;quot;Country&amp;quot; = &amp;quot;code&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Giving us this data to work with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(trade_data)
## Rows: 75,379
## Columns: 10
## $ Month     &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3,‚Ä¶
## $ Exports   &amp;lt;dbl&amp;gt; 0.1, 0.4, 1.8, 0.2, 0.1, 1.3, 3.2, 0.6, 0.3, 0.6, 0.7, 1.4,‚Ä¶
## $ Imports   &amp;lt;dbl&amp;gt; 1.0, 2.4, 2.2, 0.8, 0.2, 0.5, 0.8, 0.9, 0.4, 2.4, 0.5, 1.0,‚Ä¶
## $ Balance   &amp;lt;dbl&amp;gt; -0.8, -2.0, -0.4, -0.6, -0.1, 0.7, 2.4, -0.3, -0.1, -1.8, 0‚Ä¶
## $ Country   &amp;lt;dbl&amp;gt; 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010,‚Ä¶
## $ Date      &amp;lt;date&amp;gt; 2018-01-01, 2018-02-01, 2018-03-01, 2018-04-01, 2017-01-01‚Ä¶
## $ Year      &amp;lt;dbl&amp;gt; 2018, 2018, 2018, 2018, 2017, 2017, 2017, 2017, 2017, 2017,‚Ä¶
## $ name      &amp;lt;chr&amp;gt; &amp;quot;Greenland&amp;quot;, &amp;quot;Greenland&amp;quot;, &amp;quot;Greenland&amp;quot;, &amp;quot;Greenland&amp;quot;, &amp;quot;Greenl‚Ä¶
## $ iso       &amp;lt;chr&amp;gt; &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;, &amp;quot;GL&amp;quot;,‚Ä¶
## $ continent &amp;lt;chr&amp;gt; &amp;quot;North America&amp;quot;, &amp;quot;North America&amp;quot;, &amp;quot;North America&amp;quot;, &amp;quot;North A‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;lets-get-vizualising&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Lets get vizualising!&lt;/h2&gt;
&lt;p&gt;Lets set a different theme for now.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;theme_set(theme_minimal())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets start out nice and simple by plotting a simple scatter plot for just a single country to get a feel for the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  filter(name == &amp;quot;Greenland&amp;quot;) %&amp;gt;%
  ggplot(aes(Date, Balance)) +
  geom_point() +
  labs(title = &amp;quot;United States Trade Balance in Goods with Greenland&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Which looks good already! Lets see how it would look with as a line chart instead&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  filter(name == &amp;quot;Greenland&amp;quot;) %&amp;gt;%
  ggplot(aes(Date, Balance)) +
  geom_line() +
  labs(title = &amp;quot;United States Trade Balance in Goods with Greenland&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;it sure it quite jagged! Lets take a loot at the 4 biggest spiked to see if it is a indication of a trend&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  filter(name == &amp;quot;Greenland&amp;quot;, Balance &amp;gt; 5)
## # A tibble: 4 x 10
##   Month Exports Imports Balance Country Date        Year name   iso   continent 
##   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;     
## 1     3     7.9     0.5     7.4    1010 2014-03-01  2014 Green‚Ä¶ GL    North Ame‚Ä¶
## 2     3    10.4     1       9.4    1010 2013-03-01  2013 Green‚Ä¶ GL    North Ame‚Ä¶
## 3     3    10.5     0.6     9.9    1010 2012-03-01  2012 Green‚Ä¶ GL    North Ame‚Ä¶
## 4     9    20       1.3    18.8    1010 2008-09-01  2008 Green‚Ä¶ GL    North Ame‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which didn‚Äôt give us much, 3 of the spikes happened in March and the last one a random September. It was worth a try, back to plotting! Lets see how a smooth curve would look overlaid the line chart&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  filter(name == &amp;quot;Greenland&amp;quot;) %&amp;gt;%
  ggplot(aes(Date, Balance)) +
  geom_line() +
  geom_smooth(se = FALSE) +
  labs(title = &amp;quot;United States Trade Balance in Goods with Greenland&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Which looks nice in and off itself, however since this chart looks at the trade balance between two countries is the value 0 quite important and should be highlighted better. I will add a line behind the data points such that it highlights rather then hides&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  filter(name == &amp;quot;Greenland&amp;quot;) %&amp;gt;%
  ggplot(aes(Date, Balance)) +
  geom_abline(slope = 0, intercept = 0, color = &amp;quot;orange&amp;quot;) +
  geom_line() +
  geom_smooth(se = FALSE) +
  labs(title = &amp;quot;United States Trade Balance in Goods with Greenland&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This gives us better indication for when the trade is positive or negative with respect to the United States. Lets take it up a notch and include a couple more countries. We remove the filter and add &lt;code&gt;Country&lt;/code&gt; as the &lt;code&gt;group&lt;/code&gt; aesthetic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  geom_line() +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So we have 3 different problems I would like to fix right now. The scale between these different countries is massively different! The very negative balance of one country is making it hard to see what happens to the other countries. Secondly it is hard to distinguish the different countries since they are all the same color. And lastly there is some serious over plotting, this point is tired to the other problems so lets see if we can fix them one at a time.&lt;/p&gt;
&lt;p&gt;First lets transform the scales on the y axis such that we better can identify individual lines. We do this with the square root transformation which gives weights to values close to 0 and shrinks values far away form 0.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  geom_line() + 
  scale_y_sqrt() +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With square root transformation&amp;quot;)
## Warning in self$trans$transform(x): NaNs produced
## Warning: Transformation introduced infinite values in continuous y-axis
## Warning: Removed 11918 row(s) containing missing values (geom_path).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Oh no! We lost all the negative values. This happened because the normal square root operation only works with positive numbers. We fix this by using the &lt;em&gt;signed square root&lt;/em&gt; which apply the square root to both the positive and negative as if they were positive and then signs them accordingly. for this we create a new transformation with the &lt;code&gt;scales&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;S_sqrt &amp;lt;- function(x) sign(x) * sqrt(abs(x))
IS_sqrt &amp;lt;- function(x) x ^ 2 * sign(x) 
S_sqrt_trans &amp;lt;- function() scales::trans_new(&amp;quot;S_sqrt&amp;quot;, S_sqrt, IS_sqrt)

trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  geom_line() + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Much better! We will fix the the breaks a little bit too.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  geom_line() + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now lets solve the problem with over plotting, a standard trick is to introduce transparency, this is done using the &lt;code&gt;alpha&lt;/code&gt; aesthetic. Lets start with &lt;code&gt;0.5&lt;/code&gt; alpha.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  geom_line(alpha = 0.5) + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;slightly better but not good enough, lets try &lt;code&gt;0.2&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  geom_line(alpha = 0.2) + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;much better! Another thing we could do if coloring depending on the the continent.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country, color = continent)) +
  geom_line(alpha = 0.2) + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is quite messy, however we notice that the data for the African countries don‚Äôt cover the same range as the other countries. Lets see if there are some overall trends within each continent.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  geom_line(alpha = 0.2) + 
  geom_smooth(aes(Date, Balance, group = continent, color = continent), se = FALSE) +
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This gives some more tangible information. There is a upwards trend within North America for the last 10 years, where Asia have had a slow decline since the beginning of the data collection.&lt;/p&gt;
&lt;p&gt;Next lets see what happens when you facet depending on continent&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country)) +
  facet_wrap(~ continent) +
  geom_line(alpha = 0.2) + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation faceted depending on continent&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;These look really nice, lets free up the scale on the y axis within each facet such that we can differentiate the lines better, on top of that lets re introduce the colors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country, color = continent)) +
  facet_wrap(~ continent, scales = &amp;quot;free_y&amp;quot;) +
  geom_line(alpha = 0.2) + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation faceted depending on continent&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;lets remove the color legend as the information is already present in the facet labels.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country, color = continent)) +
  facet_wrap(~ continent, scales = &amp;quot;free_y&amp;quot;) +
  geom_line(alpha = 0.2) + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation faceted depending on continent&amp;quot;) +
  guides(color = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lastly lets overlay the smooth continent average&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country, color = continent)) +
  facet_wrap(~ continent, scales = &amp;quot;free_y&amp;quot;) +
  geom_line(alpha = 0.2) + 
  geom_smooth(aes(group = continent), color = &amp;quot;grey40&amp;quot;, se = FALSE) +
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation faceted depending on continent&amp;quot;) +
  guides(color = &amp;quot;none&amp;quot;)
## `geom_smooth()` using method = &amp;#39;gam&amp;#39; and formula &amp;#39;y ~ s(x, bs = &amp;quot;cs&amp;quot;)&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately doesn‚Äôt add too much information so lets remove it again. Lastly lets update the the labels to reflect the the unit.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trade_data %&amp;gt;% 
  ggplot(aes(Date, Balance, group = Country, color = continent)) +
  facet_wrap(~ continent, scales = &amp;quot;free_y&amp;quot;) +
  geom_line(alpha = 0.2) + 
  coord_trans(y = &amp;quot;S_sqrt&amp;quot;) +
  scale_y_continuous(breaks = c(0, -1750, -7500, -17000, -30000, 0, 1750, 7500),
                     minor_breaks = NULL) +
  labs(title = &amp;quot;United States Trade Balance in Goods with all countries&amp;quot;,
       subtitle = &amp;quot;With signed square root transformation faceted depending on continent&amp;quot;,
       y = &amp;quot;Balance (in millions of U.S. dollars on a nominal basis)&amp;quot;) +
  guides(color = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-12-ggplot2-trial-and-error-us-trade-data/index_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Analysing ethnic diversity in Californian school</title>
      <link>/2018/05/01/analysing-ethnic-diversity-in-californian-school/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      <guid>/2018/05/01/analysing-ethnic-diversity-in-californian-school/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2018-12-16.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I will In this post explore the ethnic diversity of the student population in schools in California. We will utilize the data provided by &lt;a href=&#34;https://www.cde.ca.gov/&#34;&gt;California Department of Education&lt;/a&gt; that has &lt;a href=&#34;https://www.cde.ca.gov/ds/sd/sd/filesenr.asp&#34;&gt;Enrollment by School&lt;/a&gt; which includes ‚Äúschool-level enrollment by racial/ethnic designation, gender, and grade‚Äù.&lt;/p&gt;
&lt;p&gt;We will combine this data with two other datasets that contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Longitude and latitude of the schools&lt;/li&gt;
&lt;li&gt;Income information of the cities the schools are located in&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully we will be able to draw some cool inference using these datasets while working though the complications you get when you combine datasets from the wild.&lt;/p&gt;
&lt;div id=&#34;loading-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Loading packages&lt;/h2&gt;
&lt;p&gt;This will be a fairly standard data science exercise so we will stick to the &lt;code&gt;tidyverse&lt;/code&gt;, &lt;code&gt;rvest&lt;/code&gt; for scraping, &lt;code&gt;patchwork&lt;/code&gt; for plot stitching and add a little fancyness with &lt;code&gt;ggmap&lt;/code&gt; for local maps.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;xml2&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(patchwork)
library(ggmap)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;enrollment-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Enrollment data&lt;/h2&gt;
&lt;p&gt;We start by downloading the dataset to our local disk and read it from there this is mainly to be nice, and for the fact the the download speed on the files we work with are a little slow. This can be done using &lt;code&gt;readr&lt;/code&gt;‚Äôs &lt;code&gt;read_tsv()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- readr::read_tsv(&amp;quot;filesenr.asp.txt&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To get an idea of the data lets have a quick &lt;code&gt;glimpse()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 129,813
## Columns: 23
## $ CDS_CODE  &amp;lt;chr&amp;gt; &amp;quot;33672490000001&amp;quot;, &amp;quot;33672490000001&amp;quot;, &amp;quot;33672490000001&amp;quot;, &amp;quot;3367‚Ä¶
## $ COUNTY    &amp;lt;chr&amp;gt; &amp;quot;Riverside&amp;quot;, &amp;quot;Riverside&amp;quot;, &amp;quot;Riverside&amp;quot;, &amp;quot;Riverside&amp;quot;, &amp;quot;Rivers‚Ä¶
## $ DISTRICT  &amp;lt;chr&amp;gt; &amp;quot;San Jacinto Unified&amp;quot;, &amp;quot;San Jacinto Unified&amp;quot;, &amp;quot;San Jacinto ‚Ä¶
## $ SCHOOL    &amp;lt;chr&amp;gt; &amp;quot;Nonpublic, Nonsectarian Schools&amp;quot;, &amp;quot;Nonpublic, Nonsectarian‚Ä¶
## $ ETHNIC    &amp;lt;dbl&amp;gt; 9, 5, 1, 9, 7, 6, 6, 7, 5, 5, 9, 9, 7, 6, 4, 3, 6, 1, 4, 5,‚Ä¶
## $ GENDER    &amp;lt;chr&amp;gt; &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;,‚Ä¶
## $ KDGN      &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 3, 0, 17, 1, 1, 1, 1, 0, 1, 4‚Ä¶
## $ GR_1      &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 3, 2, 18, 2, 1, 0, 0, 0, 1, 4‚Ä¶
## $ GR_2      &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 2, 5, 28, 1, 3, 0, 0, 0, 1, 3‚Ä¶
## $ GR_3      &amp;lt;dbl&amp;gt; 1, 0, 1, 0, 0, 0, 0, 2, 0, 4, 5, 3, 24, 1, 3, 0, 0, 0, 3, 6‚Ä¶
## $ GR_4      &amp;lt;dbl&amp;gt; 0, 2, 0, 1, 1, 0, 0, 0, 0, 6, 5, 1, 26, 0, 0, 0, 0, 0, 1, 4‚Ä¶
## $ GR_5      &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 3, 0, 1, 0, 6, 7, 7, 30, 2, 2, 0, 1, 1, 1, 6‚Ä¶
## $ GR_6      &amp;lt;dbl&amp;gt; 0, 4, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_7      &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_8      &amp;lt;dbl&amp;gt; 1, 2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ UNGR_ELM  &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_9      &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_10     &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_11     &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_12     &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ UNGR_SEC  &amp;lt;dbl&amp;gt; 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ ENR_TOTAL &amp;lt;dbl&amp;gt; 2, 16, 1, 1, 1, 6, 2, 7, 2, 29, 25, 18, 143, 7, 10, 1, 2, 1‚Ä¶
## $ ADULT     &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we notice that &lt;code&gt;CDS_CODE&lt;/code&gt; is being read as a chr which is favorable in this case since we don‚Äôt actually want it as a integer but rather as an ID variable. If this column had been converted to integers we would have lost leading zeros which could lead to trouble.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;longitude-and-latitude-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Longitude and latitude data&lt;/h2&gt;
&lt;p&gt;The longitude and latitude of the schools are also available on California Department of Education‚Äôs website &lt;a href=&#34;https://www.cde.ca.gov/ds/si/ds/fspubschls.asp&#34;&gt;here&lt;/a&gt;. It includes quite a lot of information, a lot of it uninteresting for this project so will take a subset of it for further analysis. &lt;code&gt;read_tsv&lt;/code&gt; complaints a little bit when reading it in, but after some crosschecking with the .xls file also provided, does it seem to be correct so we will ignore the error (don‚Äôt just ignore error all the time! most of the time they are telling you something important! in this case the problems stems from missing values and tab separated values don‚Äôt mix that nicely).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;longlat_raw &amp;lt;- read_tsv(&amp;quot;pubschls.txt&amp;quot;)
longlat &amp;lt;- longlat_raw %&amp;gt;%
  select(CDSCode, Latitude, Longitude, School, City)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets have a peak at the data:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(longlat)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 10,014
## Columns: 5
## $ CDSCode   &amp;lt;chr&amp;gt; &amp;quot;01100170000000&amp;quot;, &amp;quot;01100170109835&amp;quot;, &amp;quot;01100170112607&amp;quot;, &amp;quot;0110‚Ä¶
## $ Latitude  &amp;lt;dbl&amp;gt; 37.65821, 37.52144, 37.80452, 37.86899, 37.78465, 37.84737,‚Ä¶
## $ Longitude &amp;lt;dbl&amp;gt; -122.0971, -121.9939, -122.2682, -122.2784, -122.2386, -122‚Ä¶
## $ School    &amp;lt;chr&amp;gt; NA, &amp;quot;FAME Public Charter&amp;quot;, &amp;quot;Envision Academy for Arts &amp;amp; Tec‚Ä¶
## $ City      &amp;lt;chr&amp;gt; &amp;quot;Hayward&amp;quot;, &amp;quot;Newark&amp;quot;, &amp;quot;Oakland&amp;quot;, &amp;quot;Berkeley&amp;quot;, &amp;quot;Oakland&amp;quot;, &amp;quot;Oak‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we see that the the columns have been read in in appropriate ways. We recognize the &lt;code&gt;CDS_CODE&lt;/code&gt; from before as &lt;code&gt;CDSCode&lt;/code&gt; in this dataset which we will use to combine the datasets later.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;income-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Income data&lt;/h2&gt;
&lt;p&gt;Lastly we will get some income data, I found some fairly good data on &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_California_locations_by_income&#34;&gt;Wikipedia&lt;/a&gt;. We use simple &lt;code&gt;rvest&lt;/code&gt; tools to extract the table from the website and give it column names.&lt;/p&gt;
&lt;p&gt;While the income data is quite lovely, would it be outside the scope of this post to identify which census-designated place (CDP) each of the schools belong it. The second best option is to use the income data on a county by county basis. This will ofcause mean that we trade a bit of granularity for time. But hopefully it will still lead to some meaningful findings.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url &amp;lt;- &amp;quot;https://en.wikipedia.org/wiki/List_of_California_locations_by_income&amp;quot;
income_data &amp;lt;- read_html(url) %&amp;gt;%
  html_nodes(&amp;quot;table&amp;quot;) %&amp;gt;%
  .[2] %&amp;gt;%
  html_table() %&amp;gt;%
  .[[1]] %&amp;gt;%
  set_names(c(&amp;quot;county&amp;quot;, &amp;quot;population&amp;quot;, &amp;quot;population_density&amp;quot;, 
              &amp;quot;per_capita_income&amp;quot;, &amp;quot;median_household_income&amp;quot;,
              &amp;quot;median_family_income&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;lets take a look at the table:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(income_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 58
## Columns: 6
## $ county                  &amp;lt;chr&amp;gt; &amp;quot;Alameda&amp;quot;, &amp;quot;Alpine&amp;quot;, &amp;quot;Amador&amp;quot;, &amp;quot;Butte&amp;quot;, &amp;quot;Cala‚Ä¶
## $ population              &amp;lt;chr&amp;gt; &amp;quot;1,559,308&amp;quot;, &amp;quot;1,202&amp;quot;, &amp;quot;37,159&amp;quot;, &amp;quot;221,578&amp;quot;, &amp;quot;4‚Ä¶
## $ population_density      &amp;lt;chr&amp;gt; &amp;quot;2,109.8&amp;quot;, &amp;quot;1.6&amp;quot;, &amp;quot;62.5&amp;quot;, &amp;quot;135.4&amp;quot;, &amp;quot;44.0&amp;quot;, &amp;quot;1‚Ä¶
## $ per_capita_income       &amp;lt;chr&amp;gt; &amp;quot;$36,439&amp;quot;, &amp;quot;$24,375&amp;quot;, &amp;quot;$27,373&amp;quot;, &amp;quot;$24,430&amp;quot;, &amp;quot;‚Ä¶
## $ median_household_income &amp;lt;chr&amp;gt; &amp;quot;$73,775&amp;quot;, &amp;quot;$61,343&amp;quot;, &amp;quot;$52,964&amp;quot;, &amp;quot;$43,165&amp;quot;, &amp;quot;‚Ä¶
## $ median_family_income    &amp;lt;chr&amp;gt; &amp;quot;$90,822&amp;quot;, &amp;quot;$71,932&amp;quot;, &amp;quot;$68,765&amp;quot;, &amp;quot;$56,934&amp;quot;, &amp;quot;‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;here we see a couple of things that look weirds. Every column characters valued, which it shouldn‚Äôt be since 5 out of the 6 variables should be numerical.&lt;/p&gt;
&lt;p&gt;We will use the wonderful &lt;code&gt;parse_number&lt;/code&gt; function from the &lt;code&gt;readr&lt;/code&gt; package to convert the character values to numeric.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;income_data_clean &amp;lt;- income_data %&amp;gt;%
  mutate_at(vars(population:median_family_income), parse_number)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;a quick glimpse to see everything went well&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(income_data_clean)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 58
## Columns: 6
## $ county                  &amp;lt;chr&amp;gt; &amp;quot;Alameda&amp;quot;, &amp;quot;Alpine&amp;quot;, &amp;quot;Amador&amp;quot;, &amp;quot;Butte&amp;quot;, &amp;quot;Cala‚Ä¶
## $ population              &amp;lt;dbl&amp;gt; 1559308, 1202, 37159, 221578, 44921, 21424, 1‚Ä¶
## $ population_density      &amp;lt;dbl&amp;gt; 2109.8, 1.6, 62.5, 135.4, 44.0, 18.6, 1496.0,‚Ä¶
## $ per_capita_income       &amp;lt;dbl&amp;gt; 36439, 24375, 27373, 24430, 29296, 22211, 387‚Ä¶
## $ median_household_income &amp;lt;dbl&amp;gt; 73775, 61343, 52964, 43165, 54936, 50503, 797‚Ä¶
## $ median_family_income    &amp;lt;dbl&amp;gt; 90822, 71932, 68765, 56934, 67100, 56472, 950‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And we are good to go!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ethnic-diversity&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ethnic diversity&lt;/h2&gt;
&lt;p&gt;To be able to compare the ethnic diversity between schools we need a measure that describes diversity to begin with. I‚Äôll use the diversity index &lt;a href=&#34;https://www.unc.edu/~pmeyer/carstat/tools.html&#34;&gt;developed in 1991&lt;/a&gt; by a researcher at the University of North Carolina at Chapel Hill. The index simply asks: ‚ÄúWhat is the probability that two people in a population picked at random will be from different ethnicity‚Äù. At first this can be seen as a daunting task, but if we look at it geometrically we notice that the calculations are quite straight forward.&lt;/p&gt;
&lt;p&gt;If we imagine a population of 10 people split into two ethnicities, with 5 in each. Then we can draw the following outcome space:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity_plot(makeup = rep(5, 2))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;(the code for &lt;code&gt;diversity_plot&lt;/code&gt; is displayed in the end of the article for those interested.)&lt;/p&gt;
&lt;p&gt;Where the colored squares represent random picks with the same ethnicity, light grey squares picks with different ethnicities. Dark grey indicate impossible picks (same person picked twice) and should be ignored. Now the diversity index can be calculated by dividing the number of light grey squares with the sum of light grey and colored squares.&lt;/p&gt;
&lt;p&gt;Before we go on, lets look at how different populations have different diversity indexes. If we only have two groups, will the diversity score converge to 0.5 for large populations, however with small populations will the index be quite large since each person contribute such a big percentage of the group, making it harder to pick another one in the same group.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity_plot(rep(1, 2)) + 
  diversity_plot(rep(2, 2)) +
  diversity_plot(rep(4, 2)) +
  diversity_plot(rep(8, 2))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Effectively giving that adding a single person from a new group will maximize the contribution to the index.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity_plot(c(rep(1, 2), 1, 1, 1)) + 
  diversity_plot(c(rep(2, 2), 1, 1, 1)) +
  diversity_plot(c(rep(4, 2), 1, 1, 1)) +
  diversity_plot(c(rep(8, 2), 1, 1, 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity_plot(c(2, 3, 4, 5, 6) * 1) + 
  diversity_plot(c(2, 3, 4, 5, 6) * 2) +
  diversity_plot(c(2, 3, 4, 5, 6) * 3) +
  diversity_plot(c(2, 3, 4, 5, 6) * 4)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now that we have seen the diversity index in use lets apply it to the data we have collected.&lt;/p&gt;
&lt;p&gt;We would like to have the data in a different kind of tidy format, namely we want each row to represent each school. Taking another look at the data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 129,813
## Columns: 23
## $ CDS_CODE  &amp;lt;chr&amp;gt; &amp;quot;33672490000001&amp;quot;, &amp;quot;33672490000001&amp;quot;, &amp;quot;33672490000001&amp;quot;, &amp;quot;3367‚Ä¶
## $ COUNTY    &amp;lt;chr&amp;gt; &amp;quot;Riverside&amp;quot;, &amp;quot;Riverside&amp;quot;, &amp;quot;Riverside&amp;quot;, &amp;quot;Riverside&amp;quot;, &amp;quot;Rivers‚Ä¶
## $ DISTRICT  &amp;lt;chr&amp;gt; &amp;quot;San Jacinto Unified&amp;quot;, &amp;quot;San Jacinto Unified&amp;quot;, &amp;quot;San Jacinto ‚Ä¶
## $ SCHOOL    &amp;lt;chr&amp;gt; &amp;quot;Nonpublic, Nonsectarian Schools&amp;quot;, &amp;quot;Nonpublic, Nonsectarian‚Ä¶
## $ ETHNIC    &amp;lt;dbl&amp;gt; 9, 5, 1, 9, 7, 6, 6, 7, 5, 5, 9, 9, 7, 6, 4, 3, 6, 1, 4, 5,‚Ä¶
## $ GENDER    &amp;lt;chr&amp;gt; &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;F&amp;quot;, &amp;quot;M&amp;quot;, &amp;quot;F&amp;quot;,‚Ä¶
## $ KDGN      &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 3, 0, 17, 1, 1, 1, 1, 0, 1, 4‚Ä¶
## $ GR_1      &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 3, 2, 18, 2, 1, 0, 0, 0, 1, 4‚Ä¶
## $ GR_2      &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 1, 0, 0, 0, 3, 2, 5, 28, 1, 3, 0, 0, 0, 1, 3‚Ä¶
## $ GR_3      &amp;lt;dbl&amp;gt; 1, 0, 1, 0, 0, 0, 0, 2, 0, 4, 5, 3, 24, 1, 3, 0, 0, 0, 3, 6‚Ä¶
## $ GR_4      &amp;lt;dbl&amp;gt; 0, 2, 0, 1, 1, 0, 0, 0, 0, 6, 5, 1, 26, 0, 0, 0, 0, 0, 1, 4‚Ä¶
## $ GR_5      &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 3, 0, 1, 0, 6, 7, 7, 30, 2, 2, 0, 1, 1, 1, 6‚Ä¶
## $ GR_6      &amp;lt;dbl&amp;gt; 0, 4, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_7      &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_8      &amp;lt;dbl&amp;gt; 1, 2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ UNGR_ELM  &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_9      &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_10     &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_11     &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ GR_12     &amp;lt;dbl&amp;gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ UNGR_SEC  &amp;lt;dbl&amp;gt; 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶
## $ ENR_TOTAL &amp;lt;dbl&amp;gt; 2, 16, 1, 1, 1, 6, 2, 7, 2, 29, 25, 18, 143, 7, 10, 1, 2, 1‚Ä¶
## $ ADULT     &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we would like to across each &lt;code&gt;ETHNIC&lt;/code&gt; category within each school, ignoring &lt;code&gt;GENDER&lt;/code&gt; (including gender could be a interesting question for another time). Luckily the total enrollment is already calculated for us &lt;code&gt;ENR_TOTAL&lt;/code&gt; so we don‚Äôt have to do that manually.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;small_data &amp;lt;- data %&amp;gt;%
  select(CDS_CODE, ETHNIC, ENR_TOTAL) %&amp;gt;%
  group_by(CDS_CODE, ETHNIC) %&amp;gt;%
  summarize(ENR_TOTAL = sum(ENR_TOTAL)) %&amp;gt;%
  spread(ETHNIC, ENR_TOTAL, fill = 0) %&amp;gt;%
  ungroup()&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(small_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 10,483
## Columns: 10
## $ CDS_CODE &amp;lt;chr&amp;gt; &amp;quot;01100170112607&amp;quot;, &amp;quot;01100170123968&amp;quot;, &amp;quot;01100170124172&amp;quot;, &amp;quot;01100‚Ä¶
## $ `0`      &amp;lt;dbl&amp;gt; 0, 3, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 23, 0, 4, 2, 7, 0,‚Ä¶
## $ `1`      &amp;lt;dbl&amp;gt; 5, 6, 0, 2, 0, 0, 1, 1, 1, 0, 1, 0, 0, 3, 6, 0, 0, 4, 1, 1, ‚Ä¶
## $ `2`      &amp;lt;dbl&amp;gt; 8, 24, 161, 22, 0, 11, 0, 15, 0, 3, 30, 3, 98, 109, 49, 91, ‚Ä¶
## $ `3`      &amp;lt;dbl&amp;gt; 5, 2, 1, 0, 0, 2, 0, 23, 0, 2, 2, 0, 4, 16, 0, 1, 1, 9, 0, 0‚Ä¶
## $ `4`      &amp;lt;dbl&amp;gt; 1, 2, 7, 5, 1, 1, 2, 2, 1, 0, 18, 0, 21, 35, 16, 34, 21, 104‚Ä¶
## $ `5`      &amp;lt;dbl&amp;gt; 212, 125, 18, 96, 21, 109, 123, 452, 425, 21, 190, 8, 17, 97‚Ä¶
## $ `6`      &amp;lt;dbl&amp;gt; 150, 23, 14, 75, 58, 95, 21, 84, 23, 1, 33, 6, 7, 81, 98, 63‚Ä¶
## $ `7`      &amp;lt;dbl&amp;gt; 18, 16, 35, 115, 2, 13, 1, 1, 8, 10, 85, 12, 30, 98, 177, 16‚Ä¶
## $ `9`      &amp;lt;dbl&amp;gt; 4, 7, 121, 57, 5, 11, 0, 10, 4, 2, 21, 2, 6, 41, 64, 62, 34,‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before we move on, lets reference the data documentation to see what each of the &lt;code&gt;ETHNIC&lt;/code&gt; numbers mean. &lt;a href=&#34;https://www.cde.ca.gov/ds/sd/sd/fsenr.asp&#34;&gt;File Structure&lt;/a&gt; which states the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code 0 = Not reported&lt;/li&gt;
&lt;li&gt;Code 1 = American Indian or Alaska Native, Not Hispanic&lt;/li&gt;
&lt;li&gt;Code 2 = Asian, Not Hispanic&lt;/li&gt;
&lt;li&gt;Code 3 = Pacific Islander, Not Hispanic&lt;/li&gt;
&lt;li&gt;Code 4 = Filipino, Not Hispanic&lt;/li&gt;
&lt;li&gt;Code 5 = Hispanic or Latino&lt;/li&gt;
&lt;li&gt;Code 6 = African American, not Hispanic&lt;/li&gt;
&lt;li&gt;Code 7 = White, not Hispanic&lt;/li&gt;
&lt;li&gt;Code 9 = Two or More Races, Not Hispanic&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So now we have two decisions we need to deal with before moving on. How to take care of the ‚ÄúNot reported‚Äù cases, and ‚ÄúTwo or More Races, Not Hispanic‚Äù. The second point have been discussed before &lt;a href=&#34;https://www.unc.edu/~pmeyer/carstat/tools.html&#34;&gt;Updating the USA TODAY Diversity Index&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lets start with the case of code 0. We notice that the category generally is quite small compared to the other groups, so we need to reason about what would happen if we drop them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity_plot(c(10, 10, 2)) +
  diversity_plot(c(10, 10)) +
  diversity_plot(c(11, 11)) +
  diversity_plot(c(10, 10, 10, 3)) +
  diversity_plot(c(10, 10, 10)) +
  diversity_plot(c(11, 11, 11)) +
  plot_layout(nrow = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;as we see that having them be a separate group (first column), gives a higher diversity score then ignoring them (second column) or adding them evenly to the remaining groups (third column). However ignoring them and spreading them gives mostly the same diversity index (when the group is small compared the the whole). Thus we will drop the ‚ÄúNot reported‚Äù column as it would otherwise inflate the diversity index.&lt;/p&gt;
&lt;p&gt;Coping with multi ethnicity is quite hard, and we will pick between four options.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Assume everyone in ‚ÄúTwo or More Races, Not Hispanic‚Äù is the same ethnicity&lt;/li&gt;
&lt;li&gt;Assume everyone in ‚ÄúTwo or More Races, Not Hispanic‚Äù is all different ethnicities&lt;/li&gt;
&lt;li&gt;Ignore the group ‚ÄúTwo or More Races, Not Hispanic‚Äù&lt;/li&gt;
&lt;li&gt;Distribute the group ‚ÄúTwo or More Races, Not Hispanic‚Äù evenly into the other groups&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lets evaluate the different choices with some visualizations.&lt;/p&gt;
&lt;p&gt;Assume we have 3 main groups. with 5 in each, and an additional 3 people who have picked ‚ÄúTwo or More Races, Not Hispanic‚Äù.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity_plot(c(5, 5, 5, 3)) +
  diversity_plot(c(5, 5, 5, rep(1, 3))) +
  diversity_plot(c(5, 5, 5)) +
  diversity_plot(c(6, 6, 6))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Option 3 and 4 both yields low diversity index considering that the choice of ‚ÄúTwo or More Races, Not Hispanic‚Äù must indicate that they are different enough not to be put into one of the more precisely defined groups. The first option while appalling from a computational standpoint would treat a black-white mixture and an Asian-American Indian as members of the same group even though they had no racial identity in common. Thus We will work with the second option which in any case might overestimate the diversity of any given population as they oath to be some people ‚ÄúTwo or More Races, Not Hispanic‚Äù with identical mixes (siblings would be a prime example).&lt;/p&gt;
&lt;p&gt;After deciding we can create a &lt;code&gt;dplyr&lt;/code&gt; friendly function to calculate the diversity index based on a collection of columns. Here we denote &lt;code&gt;y&lt;/code&gt; as the column denoting ‚ÄúTwo or More Races, Not Hispanic‚Äù.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity &amp;lt;- function(..., y) {
 x &amp;lt;- sapply(list(...), cbind)
 total &amp;lt;- cbind(x, y)
 1 - (rowSums(x ^ 2) - rowSums(x)) / (rowSums(total) ^ 2 - rowSums(total))
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;bring-back-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Bring back the data!&lt;/h2&gt;
&lt;p&gt;We are finally able to calculate some diversity indexes!!! Using our recently made function within &lt;code&gt;mutate&lt;/code&gt; gives us what we need.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_diversity &amp;lt;- small_data %&amp;gt;%
  mutate(diversity = diversity(`1`, `2`, `3`, `4`, `5`, `6`, `7`, y = `9`))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets run a &lt;code&gt;summary&lt;/code&gt; to see what ranges we get.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(data_diversity$diversity)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA&amp;#39;s 
##  0.0000  0.3113  0.5216  0.4686  0.6351  1.0000      88&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interesting. All the number are between 0 and 1 which is good! that means that the &lt;code&gt;diversity&lt;/code&gt; worked as intended. However there are 88 schools have &lt;code&gt;NA&lt;/code&gt; valued diversity, lets look at those schools:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter(data_diversity, is.na(diversity)) %&amp;gt;% head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 11
##   CDS_CODE         `0`   `1`   `2`   `3`   `4`   `5`   `6`   `7`   `9` diversity
##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 01612590121210     0     0     0     0     0     0     1     0     0       NaN
## 2 04755070000001     2     0     0     0     0     0     0     1     0       NaN
## 3 06615980000001     0     0     0     0     0     0     0     1     0       NaN
## 4 07618040000000     0     0     0     0     0     0     0     1     0       NaN
## 5 09619600000001     0     0     0     0     0     0     0     1     0       NaN
## 6 10622400114587     0     0     0     0     0     1     0     0     0       NaN&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So it seems like some of the schools have such a low number of kids that the calculations break down. We will exclude these schools for now.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_diversity &amp;lt;- data_diversity %&amp;gt;%
  filter(!is.na(diversity))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next lets look at the distribution of diversity indexes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data_diversity, aes(diversity)) +
  geom_histogram(binwidth = 0.01)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We notice that most of the schools follow a nice shape, except a spike at 0 and 1. Lets look at the 0‚Äôs first:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_diversity %&amp;gt;%
  filter(diversity == 0) %&amp;gt;%
  head(20)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 20 x 11
##    CDS_CODE        `0`   `1`   `2`   `3`   `4`   `5`   `6`   `7`   `9` diversity
##    &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 016116800000‚Ä¶     0     0     0     0     0     0     2     0     0         0
##  2 021002502300‚Ä¶     0     2     0     0     0     0     0     0     0         0
##  3 076171300000‚Ä¶     0     0     0     0     0     0     0     6     0         0
##  4 096195200000‚Ä¶     0     0     0     0     0     0     0     3     0         0
##  5 096197800000‚Ä¶     0     0     0     0     0     0     0     4     0         0
##  6 106212510304‚Ä¶     0     0     0     0     0    26     0     0     0         0
##  7 106212510308‚Ä¶     0     0     0     0     0     2     0     0     0         0
##  8 106215801089‚Ä¶     1     0     0     0     0    13     0     0     0         0
##  9 106236401268‚Ä¶     0     0     0     0     0    47     0     0     0         0
## 10 107380910301‚Ä¶     0     0     0     0     0    12     0     0     0         0
## 11 107399900000‚Ä¶     0     0     0     0     0     3     0     0     0         0
## 12 107512710302‚Ä¶     0     0     0     0     0    18     0     0     0         0
## 13 107512710307‚Ä¶     0     0     0     0     0     5     0     0     0         0
## 14 107523410303‚Ä¶     0     0     0     0     0     8     0     0     0         0
## 15 107523460058‚Ä¶     0     0     0     0     0   174     0     0     0         0
## 16 117656211300‚Ä¶     2     0     0     0     0     9     0     0     0         0
## 17 126281000000‚Ä¶     0     0     0     0     0     0     0     2     0         0
## 18 127538212300‚Ä¶     0     0     0     0     0     0     0    11     0         0
## 19 127538261078‚Ä¶     0     0     0     0     0     0     0     7     0         0
## 20 131013213301‚Ä¶     0     0     0     0     0     8     0     0     0         0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These all appear to be schools with just one race in them, most appear to be of category 5 which is ‚ÄúHispanic or Latino‚Äù. Next lets take a look at the 1‚Äôs:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_diversity %&amp;gt;%
  filter(diversity == 1) %&amp;gt;%
  head(20)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 20 x 11
##    CDS_CODE        `0`   `1`   `2`   `3`   `4`   `5`   `6`   `7`   `9` diversity
##    &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1 016112700000‚Ä¶     0     0     1     0     0     1     0     1     0         1
##  2 046152300000‚Ä¶     0     0     0     0     0     0     0     1     1         1
##  3 056155600000‚Ä¶     0     0     0     0     0     1     0     1     0         1
##  4 076176200000‚Ä¶     0     0     0     0     0     0     1     1     0         1
##  5 076177000000‚Ä¶     1     0     1     0     0     1     0     1     0         1
##  6 097378300000‚Ä¶     1     1     0     0     0     1     0     1     0         1
##  7 106215801202‚Ä¶     0     0     0     0     0     0     1     1     0         1
##  8 117548111301‚Ä¶     0     0     0     0     0     1     0     1     0         1
##  9 141014014300‚Ä¶     0     1     0     0     0     1     0     1     0         1
## 10 156336200000‚Ä¶     0     0     0     0     0     1     1     0     0         1
## 11 176402200000‚Ä¶     0     0     0     0     0     1     0     1     0         1
## 12 196456819961‚Ä¶     0     0     0     0     0     1     0     1     0         1
## 13 197343761144‚Ä¶     0     0     0     0     0     1     1     0     1         1
## 14 207641420300‚Ä¶     0     0     0     0     0     1     0     1     0         1
## 15 246578900000‚Ä¶     0     0     0     0     0     0     1     1     0         1
## 16 257358525301‚Ä¶     0     0     0     0     0     0     0     1     1         1
## 17 261026401286‚Ä¶     0     0     0     0     0     1     0     1     1         1
## 18 286624100000‚Ä¶     0     0     0     0     0     1     0     1     0         1
## 19 316684500000‚Ä¶     0     0     0     0     0     1     0     1     0         1
## 20 336697701341‚Ä¶     0     0     0     0     0     1     1     1     0         1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As we have seen before, a diversity index of 1 can only happen if the maximal number of student in each category is 1. These schools seem to be rather small. Taking a look at the first school here&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data %&amp;gt;% filter(CDS_CODE == &amp;quot;17640220000001&amp;quot;) %&amp;gt;% pull(SCHOOL)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Nonpublic, Nonsectarian Schools&amp;quot; &amp;quot;Nonpublic, Nonsectarian Schools&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we get that it is a ‚ÄúNonpublic, Nonsectarian Schools‚Äù which by further investigation shows that there are quite a few of those. Lets take a look at the total enrollment in each of the schools, we have seen a couple of instances with low enrollment and we wouldn‚Äôt want those to distort our view.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_students &amp;lt;- data %&amp;gt;% 
  select(CDS_CODE:SCHOOL, ENR_TOTAL) %&amp;gt;% 
  group_by(CDS_CODE) %&amp;gt;%
  summarise(ENR_TOTAL = sum(ENR_TOTAL)) %&amp;gt;% 
  ungroup() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We also create a &lt;code&gt;meta&lt;/code&gt; data.frame which stores the &lt;code&gt;CDS_CODE&lt;/code&gt; along with county, district and school name.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;meta &amp;lt;- data %&amp;gt;%
  select(CDS_CODE:SCHOOL) %&amp;gt;%
  distinct() &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking at the distribution of total enrollment&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_students %&amp;gt;% 
  ggplot(aes(ENR_TOTAL)) +
  geom_histogram(bins = 1000)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We see a big hump around the 600-700 mark, but also a big spike towards 0, lets take a closer look at the small values&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;total_students %&amp;gt;% 
  filter(ENR_TOTAL &amp;lt; 250) %&amp;gt;%
  ggplot(aes(ENR_TOTAL)) +
  geom_histogram(bins = 250)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we make another choice that will ultimately change the outcome of the analysis. But I will restrict the investigation to school with a total enrollment of 50 or more.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_big &amp;lt;- total_students %&amp;gt;%
  left_join(meta, by = &amp;quot;CDS_CODE&amp;quot;) %&amp;gt;%
  filter(ENR_TOTAL &amp;gt;= 50)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we join that back to our enrollment data such that we have meta and diversity information in the same data.frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_enrollment &amp;lt;- data_diversity %&amp;gt;%
  right_join(data_big, by = &amp;quot;CDS_CODE&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We start by looking to see if there is some correlation between total enrollment (&lt;code&gt;ENR_TOTAL&lt;/code&gt;) and the diversity index (&lt;code&gt;diversity&lt;/code&gt;). We fit with a simple linear model to begin with.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_enrollment %&amp;gt;%
  ggplot(aes(ENR_TOTAL, diversity)) +
  geom_point(alpha = 0.1) +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  theme_minimal() +
  ylim(0, 1) +
  labs(x = &amp;quot;Enrollment&amp;quot;, 
       y = &amp;quot;Diversity Index&amp;quot;,
       title = &amp;quot;Larger Californian schools tend to have a higher diversity index&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-37-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Its quite a small slope but still about 5% increase in diversity per 2000 students. Lets verify the correlation by checking the null hypothesis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_enrollment %&amp;gt;%
  mutate(ENR_TOTAL = ENR_TOTAL / 1000) %&amp;gt;%
  lm(diversity ~ ENR_TOTAL, data = .) %&amp;gt;%
  summary()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = diversity ~ ENR_TOTAL, data = .)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -0.5053 -0.1584  0.0533  0.1658  0.3926 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept) 0.447968   0.003489 128.399  &amp;lt; 2e-16 ***
## ENR_TOTAL   0.023239   0.004132   5.624 1.92e-08 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.2111 on 9407 degrees of freedom
## Multiple R-squared:  0.003351,   Adjusted R-squared:  0.003245 
## F-statistic: 31.63 on 1 and 9407 DF,  p-value: 1.923e-08&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can‚Äôt reject the null hypothesis of no correlation and we get a better estimate of the slope to 2.3%. Of cause we can‚Äôt extrapolate the results outside the range of the existing data since the response variable is bounded.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;where-are-we&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Where are we?&lt;/h2&gt;
&lt;p&gt;Lets try to join the enrollment data to the geographical data so we can bring out some maps! The &lt;code&gt;longlat&lt;/code&gt; dataset has quite a unfortunate number of missing values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;longlat$Latitude %&amp;gt;% is.na() %&amp;gt;% mean()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.2784102&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But we will see if we can work with it anyways.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;miss_lat_div &amp;lt;- data_enrollment %&amp;gt;%
  left_join(longlat, by = c(&amp;quot;CDS_CODE&amp;quot; = &amp;quot;CDSCode&amp;quot;)) %&amp;gt;% 
  filter(is.na(Latitude)) %&amp;gt;%
  pull(diversity)

have_lat_div &amp;lt;- data_enrollment %&amp;gt;%
  left_join(longlat, by = c(&amp;quot;CDS_CODE&amp;quot; = &amp;quot;CDSCode&amp;quot;)) %&amp;gt;% 
  filter(!is.na(Latitude)) %&amp;gt;%
  pull(diversity)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sadly it turns out that the longitude and latitude is NOT missing at random as the distribution of the diversity index in not the same for missing and non-missing data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;density(miss_lat_div) %&amp;gt;% plot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-41-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;density(have_lat_div) %&amp;gt;% plot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-41-2.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We will still venture on with the remaining data, but with a higher caution then before. Hopefully we will still be able to see some clustering in the remaining data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map &amp;lt;- map_data(&amp;quot;state&amp;quot;) %&amp;gt;%
  filter(region == &amp;quot;california&amp;quot;)

map_point &amp;lt;- data_enrollment %&amp;gt;%
  left_join(longlat, by = c(&amp;quot;CDS_CODE&amp;quot; = &amp;quot;CDSCode&amp;quot;)) %&amp;gt;%
  filter(!is.na(Latitude)) 

map %&amp;gt;%
  ggplot(aes(long, lat, group = group)) +
  geom_polygon(fill = &amp;quot;grey80&amp;quot;) +
  coord_map() +
  theme_minimal() +
  geom_point(aes(Longitude, Latitude, color = diversity),
             data = map_point,
             inherit.aes = FALSE, alpha = 0.1) +
  scale_color_viridis_c(option = &amp;quot;A&amp;quot;) +
  labs(title = &amp;quot;Diversity of schools across California&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-42-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We don‚Äôt notice any mayor geographical trends. However there are still some gold nuggets here. Dark grey points are actually overlapping low-diversity index points since the alpha is set to &lt;code&gt;0.1&lt;/code&gt; therefore we see a couple of instances in mid California where there are a couple of low-diversity index schools, with each point landing on a certain city.&lt;/p&gt;
&lt;p&gt;The two mayor cities (Los Angeles and San Francisco) both have quite a few schools with high diversity, however Los Angeles have some quite dark spots. Lets zoom in to city level. Since we are getting more local, we will be using the &lt;code&gt;ggmap&lt;/code&gt; package to quarry the Google Maps so we get a nice underlying map.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;LA_map &amp;lt;- get_map(location = &amp;#39;Los Angeles&amp;#39;, zoom = 9)
ggmap(LA_map) +
  geom_point(data = map_point %&amp;gt;%
                      filter(Longitude &amp;gt; -119, Longitude &amp;lt; -117,
                             Latitude &amp;lt; 34.5, Latitude &amp;gt; 33.5), 
             aes(Longitude, Latitude, color = diversity),
             alpha = 0.2) +
  scale_color_viridis_c(option = &amp;quot;A&amp;quot;) +
  labs(title = &amp;quot;Low diversity areas tends towards city centers \nin Greater Los Angeles Area&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;map.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This maps shows much more interesting trends!! It appears that low diversity schools cluster together near city centers.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;where-is-the-money&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Where is the money?&lt;/h2&gt;
&lt;p&gt;We will end this post by taking a look at if the median household income in the county in which the school is located correlates with the diversity index we have calculated for each school.&lt;/p&gt;
&lt;p&gt;This is simply done by joining the two data.frames together and piping them into &lt;code&gt;ggplot&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_enrollment %&amp;gt;% 
  left_join(income_data_clean, by = c(&amp;quot;COUNTY&amp;quot; = &amp;quot;county&amp;quot;)) %&amp;gt;%
  ggplot(aes(median_household_income, diversity)) +
  geom_jitter(alpha = 0.1, width = 500) +
  geom_smooth(method = &amp;quot;lm&amp;quot;) +
  ylim(0, 1) +
  theme_minimal() +
  labs(x = &amp;quot;Median household income&amp;quot;, y = &amp;quot;Diversity Index&amp;quot;,
       title = &amp;quot;Higher diversity index in CA counties with high Median household income&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-05-01-analysing-ethnic-diversity-in-californian-school/index_files/figure-html/unnamed-chunk-45-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;and we do indeed see a positive correlation between median household income and ethnic diversity in schools in California.&lt;/p&gt;
&lt;p&gt;This is the end of this analysis, I hope you enjoyed it! See you again next time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;diversity-plotting-function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Diversity plotting function&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;diversity_plot &amp;lt;- function(makeup, fix = 0.45) {
  df &amp;lt;- tibble(id = seq_len(sum(makeup)),
               race = imap(makeup, ~ rep(.y, .x)) %&amp;gt;% unlist())
  
  cols &amp;lt;- structure(rainbow(length(makeup)), 
            names = as.character(seq_len(length(makeup)))) %&amp;gt;%
    c(&amp;quot;diag&amp;quot; = &amp;quot;grey30&amp;quot;,
      &amp;quot;other&amp;quot; = &amp;quot;grey70&amp;quot;)
  
  df1 &amp;lt;- crossing(df, df) %&amp;gt;%
    mutate(fill = case_when(id == id1 ~ &amp;quot;diag&amp;quot;,
                            race == race1 ~ as.character(race),
                            TRUE ~ &amp;quot;other&amp;quot;)) 
  
  df1 %&amp;gt;%
    ggplot(aes(xmin = id - fix, xmax = id + fix,
               ymin = id1 - fix, ymax = id1 + fix)) +
    geom_rect(aes(fill = fill)) +
    theme(panel.background = element_blank(), 
          panel.border = element_blank()) +
    scale_y_continuous(breaks = df[[&amp;quot;id&amp;quot;]], labels = df[[&amp;quot;race&amp;quot;]]) +
    scale_x_continuous(breaks = df[[&amp;quot;id&amp;quot;]], labels = df[[&amp;quot;race&amp;quot;]]) +
    coord_fixed() +
    scale_fill_manual(values = cols) +
    guides(fill = &amp;quot;none&amp;quot;) +
    labs(title = paste0(&amp;quot;The diversity score is &amp;quot;, 
                        signif(mean(df1$fill %in% c(&amp;quot;diag&amp;quot;, &amp;quot;other&amp;quot;)), digits = 3)))
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ggpage version 0.2.0 showcase</title>
      <link>/2018/04/07/ggpage-version-0.2.0-showcase/</link>
      <pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate>
      <guid>/2018/04/07/ggpage-version-0.2.0-showcase/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2018-12-16.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;ggpage-version-0.2.0&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;ggpage version 0.2.0&lt;/h2&gt;
&lt;p&gt;In this post I will highlight a couple of the new features in the new update of my package &lt;a href=&#34;https://github.com/EmilHvitfeldt/ggpage&#34;&gt;ggpage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;first we load the packages we need, which is &lt;code&gt;tidyverse&lt;/code&gt; for general tidy tools, &lt;code&gt;ggpage&lt;/code&gt; for visualization and finally &lt;code&gt;rtweet&lt;/code&gt; and &lt;code&gt;rvest&lt;/code&gt; for data collection.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2
library(ggpage)
library(rtweet)
library(rvest)
## Warning: package &amp;#39;xml2&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-basics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The basics&lt;/h2&gt;
&lt;p&gt;The packages includes 2 main functions, &lt;code&gt;ggpage_build&lt;/code&gt; and &lt;code&gt;ggpage_plot&lt;/code&gt; that will transform the data in the right way and plot it respectively. The reason for the split of the functions is to allow additional transformations to be done on the tokenized data to be used in the plotting.&lt;/p&gt;
&lt;p&gt;The package includes a example data set of the text Tinderbox by H.C. Andersen&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tinderbox %&amp;gt;%
  head()
## # A tibble: 6 x 2
##   text                                                              book        
##   &amp;lt;chr&amp;gt;                                                             &amp;lt;chr&amp;gt;       
## 1 &amp;quot;A soldier came marching along the high road: \&amp;quot;Left, right - le‚Ä¶ The tinder-‚Ä¶
## 2 &amp;quot;had his knapsack on his back, and a sword at his side; he had b‚Ä¶ The tinder-‚Ä¶
## 3 &amp;quot;and was now returning home. As he walked on, he met a very frig‚Ä¶ The tinder-‚Ä¶
## 4 &amp;quot;witch in the road. Her under-lip hung quite down on her breast,‚Ä¶ The tinder-‚Ä¶
## 5 &amp;quot;and said, \&amp;quot;Good evening, soldier; you have a very fine sword, ‚Ä¶ The tinder-‚Ä¶
## 6 &amp;quot;knapsack, and you are a real soldier; so you shall have as much‚Ä¶ The tinder-‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This data set can be used directly with &lt;code&gt;ggpage_build&lt;/code&gt; and &lt;code&gt;ggpage_plot&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggpage_build(tinderbox) %&amp;gt;%
  ggpage_plot()
## Warning: Use of `data$xmin` is discouraged. Use `xmin` instead.
## Warning: Use of `data$xmax` is discouraged. Use `xmax` instead.
## Warning: Use of `data$ymin` is discouraged. Use `ymin` instead.
## Warning: Use of `data$ymax` is discouraged. Use `ymax` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-04-06-ggpage-version-0-2-0-showcase/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggpage_build&lt;/code&gt; expects the column containing the text to be named ‚Äútext‚Äù which it is in the tinderbox object. This visualization gets exiting when you start combining it with the other tools. We can show where the word ‚Äútinderbox‚Äù appears along with adding some page numbers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggpage_build(tinderbox) %&amp;gt;%
  mutate(tinderbox = word == &amp;quot;tinderbox&amp;quot;) %&amp;gt;%
  ggpage_plot(mapping = aes(fill = tinderbox), page.number = &amp;quot;top-left&amp;quot;)
## Warning: Use of `data$xmin` is discouraged. Use `xmin` instead.
## Warning: Use of `data$xmax` is discouraged. Use `xmax` instead.
## Warning: Use of `data$ymin` is discouraged. Use `ymin` instead.
## Warning: Use of `data$ymax` is discouraged. Use `ymax` instead.
## Warning: Use of `paper_number_data$page` is discouraged. Use `page` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-04-06-ggpage-version-0-2-0-showcase/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And we see that the word tinderbox only appear 3 times in the middle of the story.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;vizualizing-tweets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Vizualizing tweets&lt;/h2&gt;
&lt;p&gt;We can also use this to showcase a number of tweets. For this we will use the &lt;code&gt;rtweet&lt;/code&gt; package. We will load in 100 tweets that contain the hash tag #rstats.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## whatever name you assigned to your created app
appname &amp;lt;- &amp;quot;********&amp;quot;

## api key (example below is not a real key)
key &amp;lt;- &amp;quot;**********&amp;quot;

## api secret (example below is not a real key)
secret &amp;lt;- &amp;quot;********&amp;quot;

## create token named &amp;quot;twitter_token&amp;quot;
twitter_token &amp;lt;- create_token(
  app = appname,
  consumer_key = key,
  consumer_secret = secret)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rstats_tweets &amp;lt;- rtweet::search_tweets(&amp;quot;#rstats&amp;quot;) %&amp;gt;%
  mutate(status_id = as.numeric(as.factor(status_id)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since each tweet is too long by itself will we use the &lt;code&gt;nest_paragraphs&lt;/code&gt; function to wrap the texts within each tweet. By passing the tweet id to &lt;code&gt;page.col&lt;/code&gt; we will make it such that we have a tweet per page. Additionally we can indicate both whether the tweet is a retweet by coloring the paper blue if it is and green if it isn‚Äôt. Lastly we highlight where ‚Äúrstats‚Äù is used.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rstats_tweets %&amp;gt;%
  select(status_id, text) %&amp;gt;%
  nest_paragraphs(text) %&amp;gt;%
  ggpage_build(page.col = &amp;quot;status_id&amp;quot;, lpp = 4, ncol = 6) %&amp;gt;%
  mutate(rstats = word == &amp;quot;rstats&amp;quot;) %&amp;gt;%
  ggpage_plot(mapping = aes(fill = rstats), paper.show = TRUE, 
              paper.color = ifelse(rstats_tweets$is_retweet, &amp;quot;lightblue&amp;quot;, &amp;quot;lightgreen&amp;quot;)) +
  scale_fill_manual(values = c(&amp;quot;grey60&amp;quot;, &amp;quot;black&amp;quot;)) +
  labs(title = &amp;quot;100 #rstats tweets&amp;quot;,
       subtitle = &amp;quot;blue = retweet, green = original&amp;quot;)
## Warning: Use of `paper_data$xmin` is discouraged. Use `xmin` instead.
## Warning: Use of `paper_data$xmax` is discouraged. Use `xmax` instead.
## Warning: Use of `paper_data$ymin` is discouraged. Use `ymin` instead.
## Warning: Use of `paper_data$ymax` is discouraged. Use `ymax` instead.
## Warning: Use of `data$xmin` is discouraged. Use `xmin` instead.
## Warning: Use of `data$xmax` is discouraged. Use `xmax` instead.
## Warning: Use of `data$ymin` is discouraged. Use `ymin` instead.
## Warning: Use of `data$ymax` is discouraged. Use `ymax` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-04-06-ggpage-version-0-2-0-showcase/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;vizualizing-documents&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Vizualizing documents&lt;/h2&gt;
&lt;p&gt;Next we will look at the &lt;a href=&#34;http://www.ohchr.org/EN/ProfessionalInterest/Pages/CRC.aspx&#34;&gt;Convention on the Rights of the Child&lt;/a&gt; which we will scrape with &lt;code&gt;rvest&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url &amp;lt;- &amp;quot;http://www.ohchr.org/EN/ProfessionalInterest/Pages/CRC.aspx&amp;quot;

rights_text &amp;lt;- read_html(url) %&amp;gt;%
  html_nodes(&amp;#39;div[class=&amp;quot;boxtext&amp;quot;]&amp;#39;) %&amp;gt;%
  html_text() %&amp;gt;%
  str_split(&amp;quot;\n&amp;quot;) %&amp;gt;%
  unlist() %&amp;gt;%
  str_wrap() %&amp;gt;%
  str_split(&amp;quot;\n&amp;quot;) %&amp;gt;%
  unlist() %&amp;gt;%
  data.frame(text = ., stringsAsFactors = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this case will we remove the vertical space between the pages have it appear as a long paper like the website.&lt;/p&gt;
&lt;p&gt;The wonderful &lt;code&gt;case_when&lt;/code&gt; comes in vary handy here when we want to highlight multiple different words.&lt;/p&gt;
&lt;p&gt;for the purpose of the ‚ÄúUnited Nations‚Äù was it necessary to check that the words ‚Äúunited‚Äù and ‚Äúnations‚Äù only appeared in pairs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rights_text %&amp;gt;%
  ggpage_build(wtl = FALSE, y_space_pages = 0, ncol = 7) %&amp;gt;%
  mutate(highlight = case_when(word %in% c(&amp;quot;child&amp;quot;, &amp;quot;children&amp;quot;) ~ &amp;quot;child&amp;quot;,
                               word %in% c(&amp;quot;right&amp;quot;, &amp;quot;rights&amp;quot;) ~ &amp;quot;rights&amp;quot;,
                               word %in% c(&amp;quot;united&amp;quot;, &amp;quot;nations&amp;quot;) ~ &amp;quot;United Nations&amp;quot;,
                               TRUE ~ &amp;quot;other&amp;quot;)) %&amp;gt;%
  ggpage_plot(mapping = aes(fill = highlight)) +
  scale_fill_manual(values = c(&amp;quot;darkgreen&amp;quot;, &amp;quot;grey&amp;quot;, &amp;quot;darkblue&amp;quot;, &amp;quot;darkred&amp;quot;)) +
  labs(title = &amp;quot;Word highlights in the &amp;#39;Convention on the Rights of the Child&amp;#39;&amp;quot;,
       fill = NULL)
## Warning: Use of `data$xmin` is discouraged. Use `xmin` instead.
## Warning: Use of `data$xmax` is discouraged. Use `xmax` instead.
## Warning: Use of `data$ymin` is discouraged. Use `ymin` instead.
## Warning: Use of `data$ymax` is discouraged. Use `ymax` instead.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-04-06-ggpage-version-0-2-0-showcase/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is just a couple of different ways to use this package. I look forward to see what you guys can come up with.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Recreate - Sankey flow chart</title>
      <link>/2018/03/21/recreate-sankey-flow-chart/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      <guid>/2018/03/21/recreate-sankey-flow-chart/</guid>
      <description>


&lt;p&gt;&lt;strong&gt;This blogpost uses the old api for gganimate and will not work with current version. No update of this blogpost is planned for this moment.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hello again! I this mini-series (of in-determined length) will I try as best as I can to recreate great visualizations in tidyverse. The recreation may be exact in terms of data, or using data of a similar style.&lt;/p&gt;
&lt;div id=&#34;the-goal---a-flowing-sankey-chart-from-nytimes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The goal - A flowing sankey chart from nytimes&lt;/h2&gt;
&lt;p&gt;In this excellent article &lt;a href=&#34;https://www.nytimes.com/interactive/2018/03/19/upshot/race-class-white-and-black-men.html&#34;&gt;Extensive Data Shows Punishing
Reach of Racism for Black Boys&lt;/a&gt; by NYTimes includes a lot of very nice charts, both in motion and still. The chart that got biggest reception is the following:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;nytimes.png&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;(see article for moving picture) We see a animated flow chart that follow the style of the classical Sankey chart. This chart will be the goal in this blog post, with 2 changes for brevity. firstly will I use randomly simulated data for my visualization and secondly will I not include the counters on the right-hand side of the chart and only show the creation of the counter on the left-hand as they are created in much the same fashion.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R packages&lt;/h2&gt;
&lt;p&gt;First we need some packages, but very few of those. Simply using &lt;code&gt;tidyverse&lt;/code&gt; and &lt;code&gt;gganimate&lt;/code&gt; for animation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(gganimate)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;single-point&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Single point&lt;/h2&gt;
&lt;p&gt;We will start with animating a single point first. The path of each point closely resembles a sigmoid curve. I have used those in past visualizations, namely &lt;a href=&#34;https://www.hvitfeldt.me/2018/01/visualizing-trigrams-with-the-tidyverse/&#34;&gt;Visualizing trigrams with the Tidyverse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;and we steal the function I created in that post&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sigmoid &amp;lt;- function(x_from, x_to, y_from, y_to, scale = 5, n = 100) {
  x &amp;lt;- seq(-scale, scale, length = n)
  y &amp;lt;- exp(x) / (exp(x) + 1)
  tibble(x = (x + scale) / (scale * 2) * (x_to - x_from) + x_from,
         y = y * (y_to - y_from) + y_from)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And to get along with that we will have out data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_points &amp;lt;- 400
data &amp;lt;- tibble(from = rep(4, n_points),
               to = sample(1:4, n_points, TRUE),
               color = sample(c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;), n_points, TRUE)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;here the data is fairly clean and tidy, with numerical values for &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; but this endpoint should be able to be achieved in most any other appropriate type of data.&lt;/p&gt;
&lt;p&gt;To simulate the path of a single data point we will use the custom &lt;code&gt;sigmoid&lt;/code&gt; on the data for a single row. This gives us this smooth curve of points that resembles the path taken by the points in the original visualization.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sigmoid(0, 1, as.numeric(data[2, 1]), as.numeric(data[2, 2]), 
        n = 100, scale = 10) %&amp;gt;%
  ggplot(aes(x, y)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;01-old.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To set this in motion we will employ &lt;code&gt;gganimate&lt;/code&gt;, for this we will add a &lt;code&gt;time&lt;/code&gt; column to act as the frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- sigmoid(0, 1, as.numeric(data[2, 1]), as.numeric(data[2, 2]),
             n = 100, scale = 10) %&amp;gt;%
  mutate(time = row_number()) %&amp;gt;%
  ggplot(aes(x, y, frame = time)) +
  geom_point()

gganimate(p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;02-old.gif&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Which looks very nice so far. Next step is to have multiple points flowing towards different locations.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multiple-points&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;multiple points&lt;/h2&gt;
&lt;p&gt;To account for the multiple points we will wrap everything from last section inside a &lt;code&gt;map_df&lt;/code&gt; to iterate over the rows. To avoid over plotting we introduce some uniform noise to each point.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- map_df(seq_len(nrow(data)), 
    ~ sigmoid(0, 1, as.numeric(data[.x, 1]), as.numeric(data[.x, 2])) %&amp;gt;%
      mutate(time = row_number() + .x,
             y = y + runif(1, -0.25, 0.25))) %&amp;gt;%
  ggplot(aes(x, y, frame = time)) +
  geom_point() 

gganimate(p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;03-old.gif&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Everything looks good so far, however the points all look the same, so we will do a little bit of beautification now rather then later. In addition to that will we save the data for the different components in different objects.&lt;/p&gt;
&lt;p&gt;the following &lt;code&gt;point_data&lt;/code&gt; have the modification with &lt;code&gt;bind_cols&lt;/code&gt; that binds the information from the &lt;code&gt;data&lt;/code&gt; data.frame to the final object. We include the color and removing all themes and guides.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;point_data &amp;lt;- map_df(seq_len(nrow(data)), 
    ~ sigmoid(0, 1, as.numeric(data[.x, 1]), as.numeric(data[.x, 2])) %&amp;gt;%
      mutate(time = row_number() + .x,
             y = y + runif(1, -0.25, 0.25),
             id = .x) %&amp;gt;%
      bind_cols(bind_rows(replicate(100, data[.x, -(1:2)], simplify = FALSE))))

p &amp;lt;- ggplot(point_data, aes(x, y, color = color, frame = time)) +
  geom_point(shape = 15) +
  theme_void() +
  guides(color = &amp;quot;none&amp;quot;)

gganimate(p, title_frame = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;04-old.gif&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Which already looks way better. Next up to include animated counter on the left hand side that indicates how many points that have been introduced in the animation. This is simply done by counting how many have started their paths and afterwards padding to fill the length of the animation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;start_data_no_end &amp;lt;- point_data %&amp;gt;%
  group_by(id) %&amp;gt;%
  summarize(time = min(time)) %&amp;gt;%
  count(time) %&amp;gt;%
  arrange(time) %&amp;gt;%
  mutate(n = cumsum(n),
         x = 0.125, 
         y = 2,
         n = str_c(&amp;quot;Follow the lives of &amp;quot;, n, &amp;quot; squares&amp;quot;))
  


# duplicating last number to fill gif
start_data &amp;lt;- start_data_no_end %&amp;gt;%
  bind_rows(
    map_df(unique(point_data$time[point_data$time &amp;gt; max(start_data_no_end$time)]),
          ~ slice(start_data_no_end, nrow(start_data_no_end)) %&amp;gt;%
              mutate(time = .x))
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is added to our plot by the use of &lt;code&gt;geom_text&lt;/code&gt; with a new data argument. We did some &lt;code&gt;stringr&lt;/code&gt; magic to have a little annotation appear instead of the number itself. Important to have the &lt;code&gt;hjust = 0&lt;/code&gt; such that the annotation doesn‚Äôt move around too much.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- ggplot(point_data, aes(x, y, color = color, frame = time)) +
  geom_point(shape = 15) +
  geom_text(data = start_data, hjust = 0,
            aes(label = n, frame = time, x = x, y = y), color = &amp;quot;black&amp;quot;) +
  theme_void() +
  guides(color = &amp;quot;none&amp;quot;)

gganimate(p, title_frame = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;05-old.gif&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ending-boxes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Ending boxes&lt;/h2&gt;
&lt;p&gt;Like the original illustration there are some boxes where the points ‚Äúland‚Äù in. these are very easily replicated. This will be done a little more programmatic such that it adapts to multiple outputs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ending_box &amp;lt;- data %&amp;gt;%
  pull(to) %&amp;gt;%
  unique() %&amp;gt;%
  map_df(~ data.frame(x = c(1.01, 1.01, 1.1, 1.1, 1.01),
                      y = c(-0.3, 0.3, 0.3, -0.3, -0.3) + .x,
                      id = .x))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will add this in the same way as before, this time we will use &lt;code&gt;geom_path&lt;/code&gt; to draw the box and &lt;code&gt;frame = min(point_data$time)&lt;/code&gt; and &lt;code&gt;cumulative = TRUE&lt;/code&gt; to have the boxes appear at the first frame and stay there forever.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- ggplot(point_data, aes(x, y, color = color, frame = time)) +
  geom_point() +
  geom_text(data = start_data, 
            aes(label = n, frame = time, x = x, y = y), color = &amp;quot;black&amp;quot;) +
  geom_path(data = ending_box,
            aes(x, y, group = id, frame = min(point_data$time),
                cumulative = TRUE), color = &amp;quot;grey70&amp;quot;) +
  theme_void() +
  coord_cartesian(xlim = c(-0.05, 1.15)) +
  guides(color = &amp;quot;none&amp;quot;)

gganimate(p, title_frame = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;06-old.gif&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;filling-the-box&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Filling the box&lt;/h2&gt;
&lt;p&gt;Lastly do we want to fill the boxes as the points approach them. This is done by first figuring out when they appear at the end of their paths, and them drawing boxes at those points, this is done by the &lt;code&gt;end_points&lt;/code&gt; and &lt;code&gt;end_lines&lt;/code&gt; respectively.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;end_points &amp;lt;- point_data %&amp;gt;% 
  group_by(id) %&amp;gt;%
  filter(time == max(time)) %&amp;gt;%
  ungroup()

end_lines &amp;lt;- map_df(end_points$id,
    ~ data.frame(x = c(1.01, 1.01, 1.1, 1.1, 1.01),
                 y = c(-0.01, 0.01, 0.01, -0.01, -0.01) + as.numeric(end_points[.x, 2]),
                 id = .x) %&amp;gt;%
      bind_cols(bind_rows(replicate(5, end_points[.x, -(1:2)], simplify = FALSE)))
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Like before we add the data in a new &lt;code&gt;geom_&lt;/code&gt;, with &lt;code&gt;cumulative = TRUE&lt;/code&gt; to let the ‚Äúpoints‚Äù stay.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- ggplot(point_data, aes(x, y, color = color, frame = time)) +
  geom_point() +
  geom_text(data = start_data, 
            aes(label = n, frame = time, x = x, y = y), color = &amp;quot;black&amp;quot;) +
  geom_path(data = ending_box,
            aes(x, y, group = id, frame = min(point_data$time),
                cumulative = TRUE), color = &amp;quot;grey70&amp;quot;) +
  geom_polygon(data = end_lines,
               aes(x, y, fill = color, frame = time, group = id,
                   cumulative = TRUE, color = color)) +
  theme_void() +
  coord_cartesian(xlim = c(-0.05, 1.15)) +
  guides(color = &amp;quot;none&amp;quot;,
         fill = &amp;quot;none&amp;quot;)

gganimate(p, title_frame = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;07-old.gif&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And this is what I have for you for now. Counters on the right hand side could be done in much the same way as we have seen here, but wouldn‚Äôt add much value to showcase that here.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Co Occurrence of Characters in Les Miserable</title>
      <link>/2018/02/23/co-occurrence-of-characters-in-les-miserable/</link>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
      <guid>/2018/02/23/co-occurrence-of-characters-in-les-miserable/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2020-04-21.&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;what-are-we-doing&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What are we doing?&lt;/h2&gt;
&lt;p&gt;The inspiration for this post is &lt;a href=&#34;https://bost.ocks.org/mike/miserables/&#34;&gt;this beutiful vizualization&lt;/a&gt; from &lt;a href=&#34;https://bost.ocks.org/mike/&#34;&gt;Mike Bostock&lt;/a&gt;. It nicely visualizes the co-occurrence of characters (when two characters appear in the same chapter) in the novel &lt;a href=&#34;https://en.wikipedia.org/wiki/Les_Mis%C3%A9rables&#34;&gt;Les Mis√©rables&lt;/a&gt; by &lt;a href=&#34;https://en.wikipedia.org/wiki/Victor_Hugo&#34;&gt;Victor Hugo&lt;/a&gt; using the data collected by &lt;a href=&#34;https://en.wikipedia.org/wiki/Jacques_Bertin&#34;&gt;Jacques Bertin&lt;/a&gt; (and his assistants).&lt;/p&gt;
&lt;p&gt;The way this post will differentiate itself from this is that we are going to collect the data ourselves using &lt;a href=&#34;https://en.wikipedia.org/wiki/Named-entity_recognition&#34;&gt;named entity recognition&lt;/a&gt;. Named entity recognition is the discipline of location and classifying named entities in text. Furthermore will we also try to cluster the characters according to their appearance in the novel.&lt;/p&gt;
&lt;p&gt;disclaimer! I have of the time of writing this analysis not read of familiarized myself with Les Mis√©rables in a attempt to show how a blind text analysis would run.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-package-and-backend&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Loading package and backend&lt;/h2&gt;
&lt;p&gt;for this we will need &lt;code&gt;tidyverse&lt;/code&gt; for general data science tasks, &lt;code&gt;spacyr&lt;/code&gt; for the named entity recognition and &lt;code&gt;igraph&lt;/code&gt; for some graph related transformation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(spacyr)
library(igraph)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will be using the &lt;a href=&#34;https://spacy.io/&#34;&gt;spacy&lt;/a&gt; NLP back-end as the parser for this analysis since it provides named entity recognition as one of its functionalities.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data&lt;/h2&gt;
&lt;p&gt;Les Miserable is quite a long novel, in the terms of words and pages, however due to its age is it in the public domain and is easily available on &lt;a href=&#34;https://www.gutenberg.org/&#34;&gt;Project Gutenberg&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lesmis_raw &amp;lt;- gutenbergr::gutenberg_download(135)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking thought the beginning of the text we notice how a large part of the beginning of the document is table of content and other information that isn‚Äôt of interest in this analysis. Manually checking leads to be discard the first 650 lines of the data. We will also add a &lt;code&gt;chapter&lt;/code&gt; column using a regex.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lesmis_line &amp;lt;- lesmis_raw %&amp;gt;%
  slice(-(1:650)) %&amp;gt;%
  mutate(chapter = cumsum(str_detect(text, &amp;quot;CHAPTER &amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the use in &lt;code&gt;cnlp_annotate()&lt;/code&gt; we need a data.frame where each row is a full chapter, with the 2 necessary columns &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt;. This is accomplished using a simple &lt;code&gt;map&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lesmis &amp;lt;- map_df(seq_len(max(lesmis_line$chapter)),
                 ~ tibble(id = .x,
                          text = lesmis_line %&amp;gt;% 
                                   filter(chapter == .x) %&amp;gt;% 
                                   pull(text) %&amp;gt;% 
                                   paste(collapse = &amp;quot; &amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are all ready to run the spacy parser which will only take a couple of minutes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lesmis_obj &amp;lt;- spacy_parse(lesmis$text)
## Finding a python executable with spaCy installed...
## spaCy (language model: en_core_web_sm) is installed in /usr/bin/python
## successfully initialized (spaCy Version: 2.0.18, language model: en_core_web_sm)
## (python options: type = &amp;quot;python_executable&amp;quot;, value = &amp;quot;/usr/bin/python&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the output we are given nothing more then a simple tibble&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;lesmis_obj&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   doc_id sentence_id token_id   token   lemma   pos entity
## 1  text1           1        1                 SPACE       
## 2  text1           1        2 CHAPTER chapter  NOUN       
## 3  text1           2        1       I  -PRON-  PRON       
## 4  text1           3        1       ‚Äî       ‚Äî PUNCT       
## 5  text1           4        1       A       a   DET       
## 6  text1           4        2   WOUND   wound PROPN&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the entity information can be extracted using &lt;code&gt;entity_extract()&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;entity_extract(lesmis_obj)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   doc_id sentence_id       entity entity_type
## 1  text2           1 EXPLAINING_A         ORG
## 2  text2           1                     NORP
## 3  text2           1   PHENOMENON         ORG
## 4  text5           1    TOUSSAINT       EVENT
## 5  text6           1  _CHAPTER_IV         ORG
## 6  text7           1       LETTER         ORG&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see quite a few different &lt;code&gt;entity_type&lt;/code&gt;s, in fact lets take a quick look at the different types that are in this text&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;entity_extract(lesmis_obj) %&amp;gt;%
  pull(entity_type) %&amp;gt;%
  unique()
##  [1] &amp;quot;ORG&amp;quot;      &amp;quot;NORP&amp;quot;     &amp;quot;EVENT&amp;quot;    &amp;quot;LANGUAGE&amp;quot; &amp;quot;GPE&amp;quot;      &amp;quot;WORK&amp;quot;    
##  [7] &amp;quot;PERSON&amp;quot;   &amp;quot;FAC&amp;quot;      &amp;quot;PRODUCT&amp;quot;  &amp;quot;LOC&amp;quot;      &amp;quot;LAW&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This labeling is explained &lt;a href=&#34;https://spacy.io/api/annotation#named-entities&#34;&gt;here&lt;/a&gt;. After a bit of investigating I have decided that we only will look at ‚ÄúPERSON‚Äù and ‚ÄúORG‚Äù (which is due in part to Napoleon being classified as a organisation.) Furthermore I will limit further analysis to about the 50 most mentioned characters. The rational behind this is that it hopefully would capture most of the important characters, with the weight that characters that are mentioned sparingly but consistently is more important then characters with high density in a few chapter. We will include a few more characters in case we have to exclude some of them after looking.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top_person_df &amp;lt;- entity_extract(lesmis_obj) %&amp;gt;%
  filter(entity_type %in% c(&amp;quot;ORG&amp;quot;, &amp;quot;PERSON&amp;quot;)) %&amp;gt;%
  count(entity, sort = TRUE) %&amp;gt;%
  slice(seq_len(60))

top_person_vec &amp;lt;- top_person_df %&amp;gt;% pull(entity)
top_person_vec
##  [1] &amp;quot;Marius&amp;quot;                    &amp;quot;Jean_Valjean&amp;quot;             
##  [3] &amp;quot;Cosette&amp;quot;                   &amp;quot;Javert&amp;quot;                   
##  [5] &amp;quot;Th√©nardier&amp;quot;                &amp;quot;Gavroche&amp;quot;                 
##  [7] &amp;quot;Bishop&amp;quot;                    &amp;quot;Fantine&amp;quot;                  
##  [9] &amp;quot;M._Madeleine&amp;quot;              &amp;quot;Jondrette&amp;quot;                
## [11] &amp;quot; &amp;quot;                         &amp;quot;M._Gillenormand&amp;quot;          
## [13] &amp;quot;_&amp;quot;                         &amp;quot;Napoleon&amp;quot;                 
## [15] &amp;quot;Waterloo&amp;quot;                  &amp;quot;M._Leblanc&amp;quot;               
## [17] &amp;quot;  &amp;quot;                        &amp;quot;Madeleine&amp;quot;                
## [19] &amp;quot;Grantaire&amp;quot;                 &amp;quot;Montparnasse&amp;quot;             
## [21] &amp;quot;Fauchelevent&amp;quot;              &amp;quot;Jean_Valjean_‚Äôs&amp;quot;          
## [23] &amp;quot;√âponine&amp;quot;                   &amp;quot;Bossuet&amp;quot;                  
## [25] &amp;quot;Brujon&amp;quot;                    &amp;quot;Combeferre&amp;quot;               
## [27] &amp;quot;Monseigneur&amp;quot;               &amp;quot;M._Fauchelevent&amp;quot;          
## [29] &amp;quot;Austerlitz&amp;quot;                &amp;quot;Pontmercy&amp;quot;                
## [31] &amp;quot;M._Mabeuf&amp;quot;                 &amp;quot;Champmathieu&amp;quot;             
## [33] &amp;quot;Joly&amp;quot;                      &amp;quot;him:‚Äî&amp;quot;                    
## [35] &amp;quot;Louis_Philippe&amp;quot;            &amp;quot;Nicolette&amp;quot;                
## [37] &amp;quot;Voltaire&amp;quot;                  &amp;quot;C√¶sar&amp;quot;                    
## [39] &amp;quot;Gillenormand&amp;quot;              &amp;quot;Mayor&amp;quot;                    
## [41] &amp;quot;Monsieur&amp;quot;                  &amp;quot;Mademoiselle_Gillenormand&amp;quot;
## [43] &amp;quot;Lark&amp;quot;                      &amp;quot;Magnon&amp;quot;                   
## [45] &amp;quot;Th√©odule&amp;quot;                  &amp;quot;Bahorel&amp;quot;                  
## [47] &amp;quot;Louis_XVIII&amp;quot;               &amp;quot;Mademoiselle_Baptistine&amp;quot;  
## [49] &amp;quot;Blachevelle&amp;quot;               &amp;quot;Bl√ºcher&amp;quot;                  
## [51] &amp;quot;Bonaparte&amp;quot;                 &amp;quot;Gorbeau&amp;quot;                  
## [53] &amp;quot;Jean_Prouvaire&amp;quot;            &amp;quot;Laigle&amp;quot;                   
## [55] &amp;quot;Restoration&amp;quot;               &amp;quot;Courfeyrac&amp;quot;               
## [57] &amp;quot;Favourite&amp;quot;                 &amp;quot;Guelemer&amp;quot;                 
## [59] &amp;quot;Mabeuf&amp;quot;                    &amp;quot;Madame_Th√©nardier&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After looking we see a few things we would like to fix before moving on. Firstly is ‚ÄúCHAPTER IV‚Äù and ‚ÄúCHAPTER VI‚Äù wrongly both classified as ‚ÄúORG‚Äùs. &#34; ‚Äú,‚Äù-&#34; and ‚Äúexclaimed:‚Äì‚Äù and ‚ÄúMonsieur‚Äù have also been misclassified. ‚ÄúJean Valjean‚Äôs‚Äù have been classified differently then ‚ÄúJean Valjean‚Äù which is also the case with ‚ÄúFauchelevent‚Äù and ‚ÄúM. Fauchelevent‚Äù, ‚ÄúM. Madeleine‚Äù and ‚ÄúMadeleine‚Äù, ‚ÄúM. Gillenormand‚Äù, ‚ÄúGillenormand‚Äù and ‚ÄúMademoiselle Gillenormand‚Äù. We will remove the miss-classifications here, and create a list of all the characters with all of their names. The list is named with the character‚Äôs main name for later subsetting.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top_person_vec_clean &amp;lt;- top_person_vec[-c(9, 13, 29, 34, 42, 56)] 

complications &amp;lt;- list(c(&amp;quot;Jean Valjean&amp;quot;, &amp;quot;Jean Valjean&amp;#39;s&amp;quot;),
                      c(&amp;quot;Fauchelevent&amp;quot;, &amp;quot;M. Fauchelevent&amp;quot;),
                      c(&amp;quot;Madeleine&amp;quot;, &amp;quot;M. Madeleine&amp;quot;),
                      c(&amp;quot;Gillenormand&amp;quot;, &amp;quot;M. Gillenormand&amp;quot;, &amp;quot;Mademoiselle Gillenormand&amp;quot;))

characters &amp;lt;- setdiff(top_person_vec_clean, unlist(complications)) %&amp;gt;%
  as.list() %&amp;gt;%
  c(complications)

names(characters) &amp;lt;- map_chr(characters, ~ .x[1])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We expand the grid of all possible co occurrences and count how many times they both occur within a chapter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;co_occurrence &amp;lt;- expand.grid(map_chr(characters, ~ .x[1]), 
                             map_chr(characters, ~ .x[1])) %&amp;gt;%
  set_names(c(&amp;quot;person1&amp;quot;, &amp;quot;person2&amp;quot;)) %&amp;gt;%
  mutate(cooc = map2_dbl(person1, person2,
                         ~ sum(str_detect(lesmis$text, str_c(.x, collapse = &amp;quot;|&amp;quot;)) &amp;amp; 
                               str_detect(lesmis$text, str_c(.y, collapse = &amp;quot;|&amp;quot;)))))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualize&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Visualize&lt;/h2&gt;
&lt;p&gt;now that we have the co occurrence data we can make some visualizations!! (I will take care of labels etc in the end. Hang on!)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;co_occurrence %&amp;gt;%
  ggplot(aes(person1, person2, fill = cooc)) +
  geom_tile()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-23-co-occurrence-of-characters-in-les-miserable/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;So at a first glance is it hard to see anything due to the default color-scale and the fact that a couple of people, Jean Valjean and Marius, appear in a much higher number of chapters (perhaps they are main characters?). To get a more manageable scale we disregard co occurrence if they have been in less then 5 chapters together(remember that there are a total of 365 chapters in novel).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;co_occurrence_1 &amp;lt;- co_occurrence %&amp;gt;%
  mutate(cooc = ifelse(cooc &amp;gt; 5, log(cooc), NA))

co_occurrence_1 %&amp;gt;%
    ggplot(aes(person1, person2, fill = cooc)) +
  geom_tile()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-23-co-occurrence-of-characters-in-les-miserable/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we finally see some of the fruit of our earlier work. It is definitely clear that there are groups of people that might form communities but it is unclear which and how many from this heat-map by itself. We would like to reorder the axis‚Äôs in the hope that it would create more clarity.&lt;/p&gt;
&lt;p&gt;This data here can be seen as a &lt;a href=&#34;https://en.wikipedia.org/wiki/Adjacency_matrix&#34;&gt;Adjacency matrix&lt;/a&gt; here the row numbers are vertices and the tiles-values are the edges connecting them. So in a sense we would like to do some cluster analysis on this graph. This can be done by doing some Spectral Graph Partitioning in which we calculate the eigenvectors and sort the vertices by the second smallest eigenvector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;eigen &amp;lt;- co_occurrence_1 %&amp;gt;%
#  mutate(cooc = !is.na(cooc)) %&amp;gt;%
  igraph::graph_from_data_frame() %&amp;gt;%
  igraph::as_adj() %&amp;gt;%
  eigen()

eigenvec2_sort &amp;lt;- data.frame(eigen = eigen$vectors[, length(eigen$values) - 1]) %&amp;gt;%
  mutate(row = row_number(),
         names = names(characters)) %&amp;gt;%
  arrange(eigen)

eigen_names &amp;lt;- eigenvec2_sort %&amp;gt;% pull(names)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use sorted names to re-level the factors in the co occurrence data and see if it reveals more structure.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;co_occurrence_1 %&amp;gt;%
  mutate(person1 = factor(person1, levels = eigen_names),
         person2 = factor(person2, levels = eigen_names)) %&amp;gt;%
    ggplot(aes(person1, person2, fill = cooc)) +
  geom_tile()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-23-co-occurrence-of-characters-in-les-miserable/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;it isn‚Äôt much but it appears to have moved the data slight closer to the diagonal. We will still need to locate some communities in this data. this can be done using the plotted eigenvector.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;eigenvec2_sort %&amp;gt;% pull(eigen) %&amp;gt;% plot(type = &amp;quot;o&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-23-co-occurrence-of-characters-in-les-miserable/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And what we are looking at is not their position but at the jumps. There can more easily be seen when we look at the diffs&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;eigenvec2_sort %&amp;gt;% pull(eigen) %&amp;gt;% diff() %&amp;gt;% plot()
abline(h = 0.02)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-23-co-occurrence-of-characters-in-les-miserable/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And after playing around a little it seems that &lt;code&gt;0.02&lt;/code&gt; is a appropriate cutoff.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cummunity_df &amp;lt;- eigenvec2_sort %&amp;gt;%
  mutate(community = c(0, diff(eigen) &amp;gt; 0.02) %&amp;gt;% cumsum()) %&amp;gt;%
  select(names, community)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will color-code the final visualization according to this clustering. So with a couple of joins&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;co_occurrence_comm &amp;lt;- co_occurrence_1 %&amp;gt;%
  filter(!is.na(cooc)) %&amp;gt;%
  mutate(person1_chr = as.character(person1),
         person2_chr = as.character(person2),
         person1 = factor(person1, levels = eigen_names),
         person2 = factor(person2, levels = eigen_names)) %&amp;gt;%
  left_join(cummunity_df, by = c(&amp;quot;person1_chr&amp;quot; = &amp;quot;names&amp;quot;)) %&amp;gt;%
  left_join(cummunity_df, by = c(&amp;quot;person2_chr&amp;quot; = &amp;quot;names&amp;quot;)) %&amp;gt;%
  mutate(community = ifelse(community.x == community.y, community.x, NA),
         community = ifelse(!is.na(cooc), community, NA))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With a couple of final touch-ups and we arrive at the final result:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;co_occurrence_comm %&amp;gt;%
  ggplot(aes(person1, person2, alpha = cooc, fill = factor(community))) +
  geom_tile(color = &amp;quot;grey50&amp;quot;) +
  scale_alpha(range = c(0.5, 1)) +
  scale_fill_brewer(palette = &amp;quot;Set1&amp;quot;, na.value = &amp;quot;grey50&amp;quot;) +
  theme_minimal() + 
  theme(panel.grid.major = element_blank(),
        axis.text.x = element_text(angle = 90, hjust = 1)) +
  guides(fill = &amp;quot;none&amp;quot;, alpha = &amp;quot;none&amp;quot;) +
  coord_fixed() +
  labs(x = NULL, y = NULL, 
       title = &amp;quot;Les Mis√©rables Co-occurrence&amp;quot;, 
       subtitle = &amp;quot;with color-coded communities&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-02-23-co-occurrence-of-characters-in-les-miserable/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;While I wasn‚Äôt able to find as full clusters as Jacques Bertin I still managed to get quite a lot of information out of the text regardless. I had fun in the progress and there are many more things I see myself doing with this new data set and &lt;code&gt;spacyr&lt;/code&gt;.&lt;br /&gt;
And while I couldn‚Äôt find a good way to include it in the main body of text. I almost finished the main analysis before realizing that &lt;a href=&#34;https://en.wikipedia.org/wiki/Monsieur&#34;&gt;Monsieur&lt;/a&gt; means. Mention your mistakes in your posts so others can learn from them!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Visualizing trigrams with the Tidyverse</title>
      <link>/2018/01/23/visualizing-trigrams-with-the-tidyverse/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      <guid>/2018/01/23/visualizing-trigrams-with-the-tidyverse/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2018-12-16.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this post I‚Äôll go though how I created the data visualization I posted yesterday on twitter:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;da&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
Trying something new! Visualizing top trigrams in Jane Austen&#39;s Emma using &lt;a href=&#34;https://twitter.com/hashtag/tidytext?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidytext&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/hashtag/tidyverse?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidyverse&lt;/a&gt;! Blogpost coming soon! ü§ó &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/dataviz?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#dataviz&lt;/a&gt; &lt;a href=&#34;https://t.co/Sy1fQJB5Ih&#34;&gt;pic.twitter.com/Sy1fQJB5Ih&lt;/a&gt;
&lt;/p&gt;
‚Äî Emil Hvitfeldt (&lt;span class=&#34;citation&#34;&gt;@Emil_Hvitfeldt&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/Emil_Hvitfeldt/status/955675169422327808?ref_src=twsrc%5Etfw&#34;&gt;23. januar 2018&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;what-am-i-looking-at&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What am I looking at?&lt;/h2&gt;
&lt;p&gt;So for this particular data-viz I took novel Emma by Jane Austen, extracted all the trigrams (sentences of length 3), took the 150 most frequent ones and visualized those.&lt;/p&gt;
&lt;p&gt;This visualization is layered horizontal tree graph where the 3 levels (vertical columns of words) correspond words that appear at the nth place in the trigrams, e.g.¬†first column have the first words of the trigram, second column have middle words of trigrams etc. Up to 20 words in each column are kept and they are ordered and sized according to occurrence in the data.&lt;/p&gt;
&lt;p&gt;The curves represent how often two words co-occur, with the color representing starting word and transparency related to frequency.&lt;/p&gt;
&lt;p&gt;All code is presented in the following &lt;a href=&#34;https://gist.github.com/EmilHvitfeldt/f69a65436915ff8b0406cdd27a194e28&#34;&gt;gist&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;packages-and-parameters&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Packages and parameters&lt;/h2&gt;
&lt;p&gt;We will be using the following packages:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2
library(tidytext)
library(purrrlyr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the overall parameters outlined in description are defined here:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_word &amp;lt;- 20
n_top &amp;lt;- 150
n_gramming &amp;lt;- 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;trigrams&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Trigrams&lt;/h2&gt;
&lt;p&gt;If you have read &lt;a href=&#34;https://www.tidytextmining.com/&#34;&gt;Text Mining with R&lt;/a&gt; I‚Äôm sure you have encountered the &lt;code&gt;janeaustenr&lt;/code&gt; package. We will use the Emma novel, and &lt;code&gt;tidytext&lt;/code&gt;‚Äôs &lt;code&gt;unnest_tokens&lt;/code&gt; to calculate the trigrams we need. We also specify the starting words.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trigrams &amp;lt;- tibble(text = janeaustenr::emma) %&amp;gt;%
  unnest_tokens(trigram, text, token = &amp;quot;ngrams&amp;quot;, n = n_gramming)

start_words &amp;lt;- c(&amp;quot;he&amp;quot;, &amp;quot;she&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;next we find the top 150 trigrams using &lt;code&gt;count&lt;/code&gt; and some regex magic. And we use those top words to filter such that we only will be looking at the top 150.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pattern &amp;lt;- str_c(&amp;quot;^&amp;quot;, start_words, &amp;quot; &amp;quot;, collapse = &amp;quot;|&amp;quot;)
top_words &amp;lt;- trigrams %&amp;gt;%
  filter(str_detect(trigram, pattern)) %&amp;gt;%
  count(trigram, sort = TRUE) %&amp;gt;%
  slice(seq_len(n_top)) %&amp;gt;%
  pull(trigram)

trigrams &amp;lt;- trigrams %&amp;gt;%
  filter(trigram %in% top_words)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;nodes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Nodes&lt;/h2&gt;
&lt;p&gt;Since we know that each trigram have a sample format, we can create a simple function to extract the nth word in a string.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str_nth_word &amp;lt;- function(x, n, sep = &amp;quot; &amp;quot;) {
  str_split(x, pattern = &amp;quot; &amp;quot;) %&amp;gt;%
  map_chr(~ .x[n])
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following &lt;code&gt;purrr::map_df&lt;/code&gt;&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Extracts the nth word in the trigram&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Counts and sorts the occurrences&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Grabs the top 20 words&lt;/li&gt;
&lt;li&gt;Equally space them along the y-axis&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nodes &amp;lt;- map_df(seq_len(n_gramming),
       ~ trigrams %&amp;gt;%
           mutate(word = str_nth_word(trigram, .x)) %&amp;gt;%
           count(word, sort = TRUE) %&amp;gt;%
           slice(seq_len(n_word)) %&amp;gt;% 
           mutate(y = seq(from = n_word + 1, to = 0, 
                          length.out = n() + 2)[seq_len(n()) + 1],
                  x = .x))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;plot-of-node-positions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;plot of node positions&lt;/h3&gt;
&lt;p&gt;Lets see the words so far:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nodes %&amp;gt;% 
  ggplot(aes(x, y, label = word)) +
  geom_text()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-23-visualizing-trigrams-with-the-tidyverse/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;edges&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Edges&lt;/h2&gt;
&lt;p&gt;When we look at the final visualization we see that the words are connected by curved lines. I achieved that by using a sigmoid curve and then transform it to match the starting and end points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sigmoid &amp;lt;- function(x_from, x_to, y_from, y_to, scale = 5, n = 100) {
  x &amp;lt;- seq(-scale, scale, length = n)
  y &amp;lt;- exp(x) / (exp(x) + 1)
  tibble(x = (x + scale) / (scale * 2) * (x_to - x_from) + x_from,
         y = y * (y_to - y_from) + y_from)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The following function takes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a list of trigrams&lt;/li&gt;
&lt;li&gt;a data.frame of ‚Äúfrom‚Äù nodes&lt;/li&gt;
&lt;li&gt;a data.frame of ‚Äúto‚Äù nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and returns a data.frame containing the data points for the curves wee need to draw with correct starting and ending points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;egde_lines &amp;lt;- function(trigram, from_word, to_word, scale = 5, n = 50, 
                       x_space = 0) {

  from_word &amp;lt;- from_word %&amp;gt;%
    select(-n) %&amp;gt;%
    set_names(c(&amp;quot;from&amp;quot;, &amp;quot;y_from&amp;quot;, &amp;quot;x_from&amp;quot;))
  
  to_word &amp;lt;- to_word %&amp;gt;%
    select(-n) %&amp;gt;%
    set_names(c(&amp;quot;to&amp;quot;, &amp;quot;y_to&amp;quot;, &amp;quot;x_to&amp;quot;))
  
  links &amp;lt;- crossing(from = from_word$from, 
                    to = to_word$to) %&amp;gt;%
    mutate(word_pair = paste(from, to),
           number = map_dbl(word_pair, 
                            ~ sum(str_detect(trigram$trigram, .x)))) %&amp;gt;%
    left_join(from_word, by = &amp;quot;from&amp;quot;) %&amp;gt;%
    left_join(to_word, by = &amp;quot;to&amp;quot;)
  
  links %&amp;gt;%
    by_row(~ sigmoid(x_from = .x$x_from + 0.2 + x_space,
                     x_to = .x$x_to - 0.05, 
                     y_from = .x$y_from, y_to = .x$y_to, 
                     scale = scale, n = n) %&amp;gt;%
    mutate(word_pair = .x$word_pair,
           number = .x$number,
           from = .x$from)) %&amp;gt;%
    pull(.out) %&amp;gt;%
    bind_rows()
}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;plot-of-first-set-of-egdes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;plot of first set of egdes&lt;/h3&gt;
&lt;p&gt;Lets take a look at the first set of edges to see if it is working.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;egde_lines(trigram = trigrams, 
           from_word = filter(nodes, x == 1), 
           to_word = filter(nodes, x == 2)) %&amp;gt;%
  filter(number &amp;gt; 0) %&amp;gt;%
  ggplot(aes(x, y, group = word_pair, alpha = number, color = from)) +
  geom_line()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-23-visualizing-trigrams-with-the-tidyverse/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;calculating-all-egdes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Calculating all egdes&lt;/h3&gt;
&lt;p&gt;For ease (and laziness) I have desired to calculate the edges in sections&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edges between first and second column&lt;/li&gt;
&lt;li&gt;edges between second and third column for words that start with ‚Äúhe‚Äù&lt;/li&gt;
&lt;li&gt;edges between second and third column for words that start with ‚Äúshe‚Äù&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and combine by the end.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# egdes between first and second column
egde1 &amp;lt;- egde_lines(trigram = trigrams, 
           from_word = filter(nodes, x == 1), 
           to_word = filter(nodes, x == 2), 
           n = 50) %&amp;gt;%
           filter(number &amp;gt; 0) %&amp;gt;%
  mutate(id = word_pair)

# Words in second colunm
## That start with he
second_word_he &amp;lt;- nodes %&amp;gt;%
  filter(x == 2) %&amp;gt;%
  select(-n) %&amp;gt;%
  left_join(
    trigrams %&amp;gt;% 
      filter(str_nth_word(trigram, 1) == start_words[1]) %&amp;gt;%
      mutate(word = str_nth_word(trigram, 2)) %&amp;gt;%
      count(word), 
    by = &amp;quot;word&amp;quot;
  ) %&amp;gt;%
  replace_na(list(n = 0))

## That start with she
second_word_she &amp;lt;- nodes %&amp;gt;%
  filter(x == 2) %&amp;gt;%
  select(-n) %&amp;gt;%
  left_join(
    trigrams %&amp;gt;% 
      filter(str_nth_word(trigram, 1) == start_words[2]) %&amp;gt;%
      mutate(word = str_nth_word(trigram, 2)) %&amp;gt;%
      count(word), 
    by = &amp;quot;word&amp;quot;
  ) %&amp;gt;%
  replace_na(list(n = 0))

# Words in third colunm
## That start with he
third_word_he &amp;lt;- nodes %&amp;gt;%
  filter(x == 3) %&amp;gt;%
  select(-n) %&amp;gt;%
  left_join(
    trigrams %&amp;gt;% 
      filter(str_nth_word(trigram, 1) == start_words[1]) %&amp;gt;%
      mutate(word = str_nth_word(trigram, 3)) %&amp;gt;%
      count(word), 
    by = &amp;quot;word&amp;quot;
  ) %&amp;gt;%
  replace_na(list(n = 0))

## That start with she
third_word_she &amp;lt;- nodes %&amp;gt;%
  filter(x == 3) %&amp;gt;%
  select(-n) %&amp;gt;%
  left_join(
    trigrams %&amp;gt;% 
      filter(str_nth_word(trigram, 1) == start_words[2]) %&amp;gt;%
      mutate(word = str_nth_word(trigram, 3)) %&amp;gt;%
      count(word), 
    by = &amp;quot;word&amp;quot;
  ) %&amp;gt;%
  replace_na(list(n = 0))

# egdes between second and third column that starts with he
egde2_he &amp;lt;- egde_lines(filter(trigrams, 
                              str_detect(trigram, paste0(&amp;quot;^&amp;quot;, start_words[1], &amp;quot; &amp;quot;))), 
             second_word_he, third_word_he, n = 50) %&amp;gt;%
  mutate(y = y + 0.05,
         from = start_words[1],
         id = str_c(from, word_pair, sep = &amp;quot; &amp;quot;)) %&amp;gt;%
  filter(number &amp;gt; 0)

# egdes between second and third column that starts with she
egde2_she &amp;lt;- egde_lines(filter(trigrams, 
                              str_detect(trigram, paste0(&amp;quot;^&amp;quot;, start_words[2], &amp;quot; &amp;quot;))), 
             second_word_she, third_word_she, n = 50) %&amp;gt;%
  mutate(y = y - 0.05,
         from = start_words[2],
         id = str_c(from, word_pair, sep = &amp;quot; &amp;quot;)) %&amp;gt;%
  filter(number &amp;gt; 0)

# All edges
edges &amp;lt;- bind_rows(egde1, egde2_he, egde2_she)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;vizualisation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;vizualisation&lt;/h2&gt;
&lt;p&gt;Now we just add it all together. All labels, change colors, adjust &lt;code&gt;xlim&lt;/code&gt; to fit words on the page.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- nodes %&amp;gt;% 
  ggplot(aes(x, y, label = word, size = n)) +
  geom_text(hjust = 0, color = &amp;quot;#DDDDDD&amp;quot;) +
  theme_void() +
  geom_line(data = edges,
            aes(x, y, group = id, color = from, alpha = sqrt(number)),
            inherit.aes = FALSE) +
  theme(plot.background = element_rect(fill = &amp;quot;#666666&amp;quot;, colour = &amp;#39;black&amp;#39;),
        text = element_text(color = &amp;quot;#EEEEEE&amp;quot;, size = 15)) +
  guides(alpha = &amp;quot;none&amp;quot;, color = &amp;quot;none&amp;quot;, size = &amp;quot;none&amp;quot;) +
  xlim(c(0.9, 3.2)) +
  scale_color_manual(values = c(&amp;quot;#5EF1F1&amp;quot;, &amp;quot;#FA62D0&amp;quot;)) +
  labs(title = &amp;quot; Vizualizing trigrams in Jane Austen&amp;#39;s, Emma&amp;quot;) + 
  scale_size(range = c(3, 8))
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-23-visualizing-trigrams-with-the-tidyverse/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;notes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;There are a couple of differences between the Viz I posted online yesterday and the result here in this post due to a couple of mistakes found in the code during cleanup.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extra-vizualisations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extra vizualisations&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_word &amp;lt;- 20
n_top &amp;lt;- 150
n_gramming &amp;lt;- 3

trigrams &amp;lt;- tibble(text = janeaustenr::emma) %&amp;gt;%
  unnest_tokens(trigram, text, token = &amp;quot;ngrams&amp;quot;, n = n_gramming)

start_words &amp;lt;- c(&amp;quot;i&amp;quot;, &amp;quot;you&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-23-visualizing-trigrams-with-the-tidyverse/index_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_word &amp;lt;- 20
n_top &amp;lt;- 150
n_gramming &amp;lt;- 3

library(rvest)
sherlock_holmes &amp;lt;- read_html(&amp;quot;https://sherlock-holm.es/stories/plain-text/cnus.txt&amp;quot;) %&amp;gt;%
  html_text() %&amp;gt;% 
  str_split(&amp;quot;\n&amp;quot;) %&amp;gt;%
  unlist()

trigrams &amp;lt;- tibble(text = sherlock_holmes) %&amp;gt;%
  unnest_tokens(trigram, text, token = &amp;quot;ngrams&amp;quot;, n = n_gramming)

start_words &amp;lt;- c(&amp;quot;holmes&amp;quot;, &amp;quot;watson&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: xml2
## Warning: package &amp;#39;xml2&amp;#39; was built under R version 3.6.2
## 
## Attaching package: &amp;#39;rvest&amp;#39;
## The following object is masked from &amp;#39;package:purrr&amp;#39;:
## 
##     pluck
## The following object is masked from &amp;#39;package:readr&amp;#39;:
## 
##     guess_encoding&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-23-visualizing-trigrams-with-the-tidyverse/index_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Recreate - Sunshine Report</title>
      <link>/2018/01/01/recreate-sunshine-report/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>/2018/01/01/recreate-sunshine-report/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2018-12-16.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hello again! I this mini-series (of in-determined length) will I try as best as I can to recreate great visualizations in tidyverse. The recreation may be exact in terms of data, or using data of a similar style.&lt;/p&gt;
&lt;div id=&#34;the-goal---an-annual-sunshine-record-report&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The goal - An annual sunshine record report&lt;/h2&gt;
&lt;p&gt;I have recently read &lt;a href=&#34;https://www.edwardtufte.com/tufte/books_vdqi&#34;&gt;The Visual Display of Quantitative Information&lt;/a&gt; by Edward R Tufte, which I highly recommend. In the book the following chart was displayed which showed the sunshine record for each day day of the year.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2018-01-01-13.53scan.jpg&#34; width=&#34;100%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;F.J. Monkhouse and H.R. Wilkinson, &lt;em&gt;Maps and Diagrams&lt;/em&gt; (London, third edition 1971), 242-243.&lt;/p&gt;
&lt;p&gt;The goal for the rest of this post is to create something similar. Since we don‚Äôt have direct access to the data, we will scrape some data for ourselves. All code will be shown together in the end of the post and in this &lt;a href=&#34;https://gist.github.com/EmilHvitfeldt/53e5e33a0ebc5e084dcbcdefacb8ed9a&#34;&gt;gist&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R packages&lt;/h2&gt;
&lt;p&gt;First we need some packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)
## Warning: package &amp;#39;xml2&amp;#39; was built under R version 3.6.2
library(tidyverse)
## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2
library(lubridate)
library(glue)
library(ehlib) # devtools::install_github(&amp;quot;EmilHvitfeldt/ehlib&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The last package is my &lt;a href=&#34;https://hilaryparker.com/2013/04/03/personal-r-packages/&#34;&gt;personal R package&lt;/a&gt; &lt;a href=&#34;https://github.com/EmilHvitfeldt/ehlib&#34;&gt;ehlib&lt;/a&gt; where I store some frequently used functions. If you do not wish to install/load this package just run the following code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str_between &amp;lt;- function(string, start, end) {
  stringr::str_extract(string,
                       stringr::str_c(start, &amp;#39;(.*?)&amp;#39;, end, collapse = &amp;#39;&amp;#39;)) %&amp;gt;%
    stringr::str_replace(start, &amp;quot;&amp;quot;) %&amp;gt;%
    stringr::str_replace(end, &amp;quot;&amp;quot;)
}

str_before &amp;lt;- function(string, pattern) {
  stringr::str_extract(string, stringr::str_c(&amp;quot;.+?(?=&amp;quot;, pattern, &amp;quot;)&amp;quot;))
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-collection&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data collection&lt;/h2&gt;
&lt;p&gt;So for this production we need, Weather information. But more specifically we need information about if the sun is shining for various times during the day, preferable for all days of the year. In addition sunrise and sunset times is also needed.&lt;/p&gt;
&lt;p&gt;We will be scraping weather history from &lt;a href=&#34;https://www.wunderground.com&#34;&gt;wunderground&lt;/a&gt;. On the button of the page &lt;a href=&#34;https://www.wunderground.com/history/airport/KCQT/2018/1/1/DailyHistory.html&#34; class=&#34;uri&#34;&gt;https://www.wunderground.com/history/airport/KCQT/2018/1/1/DailyHistory.html&lt;/a&gt; we locate a table with ‚ÄúTime‚Äù and ‚ÄúConditions‚Äù. Furthermore both sunrise and sunset times are present on the page.&lt;/p&gt;
&lt;p&gt;For the website we need an airport code, year, month and day. Airport codes will have to be found manually by browsing the website. For a vector of all the days in a given year we use the following function that uses&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_dates_in &amp;lt;- function(year) {
  if(ymd(glue::glue(&amp;quot;{year}0101&amp;quot;)) &amp;gt; as.Date(Sys.time())) {
    stop(&amp;quot;Please select a past or current year.&amp;quot;)
  }
  
  start &amp;lt;- ymd(glue::glue(&amp;quot;{year}0101&amp;quot;))
  
  if(as.Date(Sys.time()) &amp;gt; ymd(glue::glue(&amp;quot;{year}1231&amp;quot;))) {
    end &amp;lt;- ymd(glue::glue(&amp;quot;{year}1231&amp;quot;))
  } else {
    end &amp;lt;- as.Date(Sys.time())
  }
  
  seq(start, end, by = &amp;quot;day&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;this function will work even if you pick a year that have not ended yet. As 2017 have just ended I though it would be appropriate to look back on that year.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;year &amp;lt;- 2017
dates &amp;lt;- all_dates_in(year)
head(dates)
## [1] &amp;quot;2017-01-01&amp;quot; &amp;quot;2017-01-02&amp;quot; &amp;quot;2017-01-03&amp;quot; &amp;quot;2017-01-04&amp;quot; &amp;quot;2017-01-05&amp;quot;
## [6] &amp;quot;2017-01-06&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;next we have a little function that creates a url from the airport code and the date. For safety we will wrap that function in &lt;code&gt;purrr::safely&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;weather_data_html &amp;lt;- function(date, code) {
  url &amp;lt;- str_c(&amp;quot;https://www.wunderground.com/history/airport/&amp;quot;, code, &amp;quot;/&amp;quot;,
               year(date), &amp;quot;/&amp;quot;, month(date), &amp;quot;/&amp;quot;, mday(date), &amp;quot;/DailyHistory.html&amp;quot;)
  
  html_url &amp;lt;- read_html(url)
}

weather_data_html &amp;lt;- purrr::safely(weather_data_html)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For this code-though will we be using airport code KCQT, which is placed in Los Angeles Downtown, CA.&lt;/p&gt;
&lt;p&gt;We add some ‚Äòcrawl-delay‚Äô of 5 seconds and let it run. Please remember that this will take over 30 minutes to run with a delay in place but we do it to be nice.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;airport_code &amp;lt;- &amp;quot;KCQT&amp;quot;

full_data &amp;lt;- map(dates, ~{
  weather_data_html(.x, airport_code)
  Sys.sleep(5)
  cat(month(.x), &amp;quot;/&amp;quot;, mday(.x), &amp;quot;\n&amp;quot;, sep = &amp;quot;&amp;quot;)
  })&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can check whether all of the links went though.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;map_lgl(full_data, ~ is.null(.x$error))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data-wrangling&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data wrangling&lt;/h2&gt;
&lt;p&gt;Since we will be working with times quite a lot in the section we will use the &lt;code&gt;lubridate&lt;/code&gt; package quite some time. In addition to that package I have devised this following function to turn something of the form ‚Äú2:51 PM‚Äù into the number of minutes after midnight.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ampm_minutes &amp;lt;- function(x) {
  as.numeric(str_between(x, &amp;quot;:&amp;quot;, &amp;quot; &amp;quot;)) +
  as.numeric(str_replace(str_before(x, &amp;quot;:&amp;quot;), &amp;quot;12&amp;quot;, &amp;quot;0&amp;quot;)) * 60 +
  60 * 12 * str_detect(x, &amp;quot;PM&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we have the main wrangling function that takes the input, extracts the sunrise, sunset times and add them to the table that is also extracted.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_wrangling &amp;lt;- function(html_url, date) {
  
  # Sun rise time
    sun_rise &amp;lt;- html_url %&amp;gt;%
    html_nodes(&amp;#39;div[id=&amp;quot;astronomy-mod&amp;quot;] table&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    .[1] %&amp;gt;%
    str_between(&amp;quot;Time\n\t\t&amp;quot;, &amp;quot;\n\t\t&amp;quot;)
  # Sun set time
  sun_set &amp;lt;- html_url %&amp;gt;%
    html_nodes(&amp;#39;div[id=&amp;quot;astronomy-mod&amp;quot;] table&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    .[1] %&amp;gt;%
    str_between(&amp;quot;\n\t\t&amp;quot;, &amp;quot;\n\t\tCivil&amp;quot;)

  # Table
  table &amp;lt;- html_url %&amp;gt;%
    html_nodes(&amp;#39;table[id=&amp;quot;obsTable&amp;quot;]&amp;#39;) %&amp;gt;%
    html_table() %&amp;gt;% 
    .[[1]]
  
  # Time column standardization 
  is_daylight &amp;lt;- any(&amp;quot;Time (PDT)&amp;quot; == names(table),
                     &amp;quot;Time (MDT)&amp;quot; == names(table),
                     &amp;quot;Time (CDT)&amp;quot; == names(table),
                     &amp;quot;Time (EDT)&amp;quot; == names(table))
  
  time_names &amp;lt;- str_c(&amp;quot;Time&amp;quot;, c(&amp;quot; (PDT)&amp;quot;, &amp;quot; (MDT)&amp;quot;, &amp;quot; (CDT)&amp;quot;, &amp;quot; (EDT)&amp;quot;,
                                &amp;quot; (PST)&amp;quot;, &amp;quot; (MST)&amp;quot;, &amp;quot; (CST)&amp;quot;, &amp;quot; (EST)&amp;quot;))
  
  names(table) &amp;lt;- if_else(names(table) %in% time_names,
                          &amp;quot;Time&amp;quot;,
                          names(table))
  
  table %&amp;gt;%
    mutate(sun_set = sun_set,
           sun_rise = sun_rise,
           date = date,
           yday = yday(date), 
           day_minutes = ampm_minutes(Time) - is_daylight * 60,
           set_minutes = ampm_minutes(sun_set) - is_daylight * 60,
           rise_minutes = ampm_minutes(sun_rise) - is_daylight * 60,
           sun_up = day_minutes &amp;gt; (rise_minutes + 90) &amp;amp; 
                    day_minutes &amp;lt; (set_minutes - 30))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this function we arbitrarily decide that the sun is up, if it is 90 minutes after sun rise and 30 minutes before sun set. This is done because out future visualization is being made with rectangles and the &lt;code&gt;lag&lt;/code&gt; function, and to ensure that all the sunshine hours are within sun set and sun rise we have to put in some restrains.&lt;/p&gt;
&lt;p&gt;It seems that the 30th of October doesn‚Äôt have hourly history data available so we will exclude it in the following:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;full_data2 &amp;lt;- map2_df(full_data[-303], dates[-303], ~ .x$result %&amp;gt;%
                      data_wrangling(.y))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point it would be wise to save our data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;save(full_data2, file = glue(&amp;quot;{airport_code}-{year}.Rdata&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Plotting data&lt;/h2&gt;
&lt;p&gt;Now that we have all the data we need it is time to turn our heads to ggplot2. But before we do that lets create some axis breaks that we will need.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x_axis &amp;lt;- dates %&amp;gt;% month() %&amp;gt;% table() %&amp;gt;% cumsum()
names(x_axis) &amp;lt;- month.abb[1:12]

y_axis &amp;lt;- 1:24 * 60
names(y_axis) &amp;lt;- str_c(c(12, rep(1:12, 2, length.out = 23)), 
                       rep(c(&amp;quot;AM&amp;quot;, &amp;quot;PM&amp;quot;), each = 12))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So we start by creating a new condition for ‚ÄúClear‚Äù, creating a new day_minutes variable to act as the other side for our sunshine rectangles and lastly remove all the observations where the sun isn‚Äôt up. Using &lt;code&gt;geom_rect()&lt;/code&gt; to create all the little rectangles and &lt;code&gt;geom_line()&lt;/code&gt;‚Äôs to show the sun set and sun rise, we lastly fiddle a little with the theme giving us the final result:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;full_data2 %&amp;gt;%
  mutate(con = Conditions == &amp;quot;Clear&amp;quot;,
         day_minutes2 = lag(day_minutes)) %&amp;gt;%
  filter(sun_up) %&amp;gt;%
  ggplot(aes(fill = con)) +
  geom_rect(aes(xmin = yday, xmax = yday + 1,
                ymin = day_minutes, ymax = day_minutes2)) +
  geom_line(aes(yday, set_minutes)) +
  geom_line(aes(yday, rise_minutes)) +
  scale_fill_manual(values = c(&amp;quot;grey40&amp;quot;, NA)) +
  theme_minimal() +
  guides(fill = &amp;quot;none&amp;quot;) +
  theme(
  panel.grid.major.y = element_blank(),
  panel.grid.minor.y = element_blank(),
  panel.grid.minor.x = element_blank(), 
  axis.text.x.bottom = element_text(hjust = 1.7)
  ) +
  scale_x_continuous(breaks = x_axis, position = &amp;quot;right&amp;quot;) +
  scale_y_continuous(breaks = y_axis, limits = c(0, 24 * 60)) +
  labs(x = NULL, y = NULL, title = &amp;quot;Sunshine report of Los Angeles 2017&amp;quot;)
## Warning: Position guide is perpendicular to the intended axis. Did you mean to
## specify a different guide `position`?
## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?

## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?

## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?

## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-01-recreate-sunshine-report/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extra&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Extra&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Position guide is perpendicular to the intended axis. Did you mean to
## specify a different guide `position`?
## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?

## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?

## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?

## Warning: guide_axis(): Discarding guide on merge. Do you have more than one
## guide with the same position?&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-01-01-recreate-sunshine-report/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;code&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)
library(tidyverse)
library(lubridate)
library(glue)
#library(ehlib) # devtools::install_github(&amp;quot;EmilHvitfeldt/ehlib&amp;quot;)

str_between &amp;lt;- function(string, start, end) {
  stringr::str_extract(string,
                       stringr::str_c(start, &amp;#39;(.*?)&amp;#39;, end, collapse = &amp;#39;&amp;#39;)) %&amp;gt;%
    stringr::str_replace(start, &amp;quot;&amp;quot;) %&amp;gt;%
    stringr::str_replace(end, &amp;quot;&amp;quot;)
}

str_before &amp;lt;- function(string, pattern) {
  stringr::str_extract(string, stringr::str_c(&amp;quot;.+?(?=&amp;quot;, pattern, &amp;quot;)&amp;quot;))
}

all_dates_in &amp;lt;- function(year) {
  if(ymd(glue::glue(&amp;quot;{year}0101&amp;quot;)) &amp;gt; as.Date(Sys.time())) {
    stop(&amp;quot;Please select a past or current year.&amp;quot;)
  }
  
  start &amp;lt;- ymd(glue::glue(&amp;quot;{year}0101&amp;quot;))
  
  if(as.Date(Sys.time()) &amp;gt; ymd(glue::glue(&amp;quot;{year}1231&amp;quot;))) {
    end &amp;lt;- ymd(glue::glue(&amp;quot;{year}1231&amp;quot;))
  } else {
    end &amp;lt;- as.Date(Sys.time())
  }
  
  seq(start, end, by = &amp;quot;day&amp;quot;)
}

airport_code &amp;lt;- &amp;quot;KCQT&amp;quot;

full_data &amp;lt;- map(dates, ~{
  weather_data_html(.x, airport_code)
  Sys.sleep(5)
  cat(month(dates), &amp;quot;/&amp;quot;, mday(dates), &amp;quot;\n&amp;quot;, sep = &amp;quot;&amp;quot;)
  })

map_lgl(full_data, ~ is.null(.x$error))

ampm_minutes &amp;lt;- function(x) {
  as.numeric(str_between(x, &amp;quot;:&amp;quot;, &amp;quot; &amp;quot;)) +
  as.numeric(str_replace(str_before(x, &amp;quot;:&amp;quot;), &amp;quot;12&amp;quot;, &amp;quot;0&amp;quot;)) * 60 +
  60 * 12 * str_detect(x, &amp;quot;PM&amp;quot;)
}

data_wrangling &amp;lt;- function(html_url, date) {
  
  # Sun rise time
    sun_rise &amp;lt;- html_url %&amp;gt;%
    html_nodes(&amp;#39;div[id=&amp;quot;astronomy-mod&amp;quot;] table&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    .[1] %&amp;gt;%
    str_between(&amp;quot;Time\n\t\t&amp;quot;, &amp;quot;\n\t\t&amp;quot;)
  # Sun set time
  sun_set &amp;lt;- html_url %&amp;gt;%
    html_nodes(&amp;#39;div[id=&amp;quot;astronomy-mod&amp;quot;] table&amp;#39;) %&amp;gt;%
    html_text() %&amp;gt;%
    .[1] %&amp;gt;%
    str_between(&amp;quot;\n\t\t&amp;quot;, &amp;quot;\n\t\tCivil&amp;quot;)

  # Table
  table &amp;lt;- html_url %&amp;gt;%
    html_nodes(&amp;#39;table[id=&amp;quot;obsTable&amp;quot;]&amp;#39;) %&amp;gt;%
    html_table() %&amp;gt;% 
    .[[1]]
  
  # Time column standardization 
  is_daylight &amp;lt;- any(&amp;quot;Time (PDT)&amp;quot; == names(table),
                     &amp;quot;Time (MDT)&amp;quot; == names(table),
                     &amp;quot;Time (CDT)&amp;quot; == names(table),
                     &amp;quot;Time (EDT)&amp;quot; == names(table))
  
  time_names &amp;lt;- str_c(&amp;quot;Time&amp;quot;, c(&amp;quot; (PDT)&amp;quot;, &amp;quot; (MDT)&amp;quot;, &amp;quot; (CDT)&amp;quot;, &amp;quot; (EDT)&amp;quot;,
                                &amp;quot; (PST)&amp;quot;, &amp;quot; (MST)&amp;quot;, &amp;quot; (CST)&amp;quot;, &amp;quot; (EST)&amp;quot;))
  
  names(table) &amp;lt;- if_else(names(table) %in% time_names,
                          &amp;quot;Time&amp;quot;,
                          names(table))
  
  table %&amp;gt;%
    mutate(sun_set = sun_set,
           sun_rise = sun_rise,
           date = date,
           yday = yday(date), 
           day_minutes = ampm_minutes(Time) - is_daylight * 60,
           set_minutes = ampm_minutes(sun_set) - is_daylight * 60,
           rise_minutes = ampm_minutes(sun_rise) - is_daylight * 60,
           sun_up = day_minutes &amp;gt; (rise_minutes + 90) &amp;amp; 
                    day_minutes &amp;lt; (set_minutes - 30))
}

full_data2 &amp;lt;- map2_df(full_data[-303], dates[-303], ~ .x$result %&amp;gt;%
                      data_wrangling(.y))

x_axis &amp;lt;- dates %&amp;gt;% month() %&amp;gt;% table() %&amp;gt;% cumsum()
names(x_axis) &amp;lt;- month.abb[1:12]

y_axis &amp;lt;- 1:24 * 60
names(y_axis) &amp;lt;- str_c(c(12, rep(1:12, 2, length.out = 23)), 
                       rep(c(&amp;quot;AM&amp;quot;, &amp;quot;PM&amp;quot;), each = 12))

full_data2 %&amp;gt;%
  mutate(con = Conditions == &amp;quot;Clear&amp;quot;,
         day_minutes2 = lag(day_minutes)) %&amp;gt;%
  filter(sun_up) %&amp;gt;%
  ggplot(aes(fill = con)) +
  geom_rect(aes(xmin = yday, xmax = yday + 1,
                ymin = day_minutes, ymax = day_minutes2)) +
  geom_line(aes(yday, set_minutes)) +
  geom_line(aes(yday, rise_minutes)) +
  scale_fill_manual(values = c(&amp;quot;grey40&amp;quot;, NA)) +
  theme_minimal() +
  guides(fill = &amp;quot;none&amp;quot;) +
  theme(
  panel.grid.major.y = element_blank(),
  panel.grid.minor.y = element_blank(),
  panel.grid.minor.x = element_blank(), 
  axis.text.x.bottom = element_text(hjust = 1.7)
  ) +
  scale_x_continuous(breaks = x_axis, position = &amp;quot;right&amp;quot;) +
  scale_y_continuous(breaks = y_axis, limits = c(0, 24 * 60)) +
  labs(x = NULL, y = NULL, title = &amp;quot;Sunshine report of Los Angeles 2017&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>2017 World Press Freedom Index with emojis</title>
      <link>/2017/04/26/2017-world-press-freedom-index-with-emojis/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      <guid>/2017/04/26/2017-world-press-freedom-index-with-emojis/</guid>
      <description>


&lt;p&gt;&lt;em&gt;This code have been lightly revised to make sure it works as of 2018-12-16.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;With &lt;a href=&#34;https://rsf.org/en&#34;&gt;Reporters Without Borders&lt;/a&gt; coming out with its &lt;a href=&#34;https://rsf.org/en/ranking/2017&#34;&gt;2017 World Press Freedom Index&lt;/a&gt; in the same week as Hadley Wickham coming out with the &lt;a href=&#34;https://github.com/hadley/emo&#34;&gt;emo(ji)&lt;/a&gt; package, I had no choice but to explore both of them at the same time.&lt;/p&gt;
&lt;p&gt;Disclaimer! This post is not an exercise in statistical inference but rather a proof of concept of how to use the emo(ji) package with ggplot2.&lt;/p&gt;
&lt;div id=&#34;loading-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Loading packages&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(hrbrthemes)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(stringr)
library(tibble)
# remotes::install_github(&amp;#39;hadley/emo&amp;#39;)
library(emo)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/hrbrmstr/hrbrthemes&#34;&gt;hrbrthemes&lt;/a&gt; is not necessary for this project but it is one of my personal favorite ggplot2 themes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gathering-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Gathering data&lt;/h3&gt;
&lt;p&gt;Here we collect the data from Reporters Without Borders, emoji flags and The World Bank (so we have something to plot against).&lt;/p&gt;
&lt;div id=&#34;world-press-freedom-index&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;2017 World Press Freedom Index&lt;/h4&gt;
&lt;p&gt;We have the &lt;a href=&#34;https://rsf.org/en/ranking/2017&#34;&gt;2017 World Press Freedom Index&lt;/a&gt; &lt;a href=&#34;https://rsf.org/sites/default/files/index_format_upload_2017-v2_1_0.csv&#34;&gt;(direct download link)&lt;/a&gt; data which we load in as normal.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(freedom_index &amp;lt;- read_csv(&amp;quot;https://rsf.org/sites/default/files/index_format_upload_2017-v2_1_0.csv&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 180 x 12
##    ISO    Rank FR_Country EN_country ES_country `Underlying sit‚Ä¶
##    &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;                 &amp;lt;dbl&amp;gt;
##  1 NOR       1 Norv√®ge    Norway     Noruega                 760
##  2 SWE       2 Suede      Sweden     Suecia                  759
##  3 FIN       3 Finlande   Finland    Finlandia               892
##  4 DNK       4 Danemark   Denmark    Dinamarca              1036
##  5 NLD       5 Pays-Bas   Netherlan‚Ä¶ Pa√≠ses Ba‚Ä¶              963
##  6 CRI       6 Costa Rica Costa Rica Costa Rica             1193
##  7 CHE       7 Suisse     Switzerla‚Ä¶ Suiza                  1213
##  8 JAM       8 Jama√Øque   Jamaica    Jamaica                1273
##  9 BEL       9 Belgique   Belgium    B√©lgica                1247
## 10 ISL      10 Islande    Iceland    Islandia               1303
## # ‚Ä¶ with 170 more rows, and 6 more variables: `Abuse score 2016` &amp;lt;chr&amp;gt;,
## #   `Overall Score 2016` &amp;lt;dbl&amp;gt;, `Progression RANK` &amp;lt;dbl&amp;gt;, `Rank 2015` &amp;lt;dbl&amp;gt;,
## #   `Score 2015` &amp;lt;dbl&amp;gt;, Zone &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we see that a total of 180 countries have a score (Overall Score 2016).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;gdp-per-capita&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;GDP per capita&lt;/h4&gt;
&lt;p&gt;To have something somehow meaningful to compare the freedom index to. I‚Äôve found some data about GDP per capita, mostly because I figured it would have data for quite a lot of the countries covered by the freedom index. So from &lt;a href=&#34;http://data.worldbank.org/indicator/NY.GDP.PCAP.CD&#34;&gt;The World Bank&lt;/a&gt; &lt;a href=&#34;http://api.worldbank.org/v2/en/indicator/NY.GDP.PCAP.CD?downloadformat=csv&#34;&gt;(direct download link)&lt;/a&gt;
which we load in as normal.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(gdp_pcap &amp;lt;- read_csv(&amp;quot;API_NY.GDP.PCAP.CD_DS2_en_csv_v2.csv&amp;quot;, skip = 2))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which have quite a few variables but for now we will just focus on the 2015 variable as the 2016 appears empty. Now that we have two data sets which we would like to combine, a general question would be if the gdp_pcap data have information matching our 180 countries. So with the following bit of code we join the two datasets together by the ICO ALPHA-3 Code available in both datasets and select the countries who don‚Äôt have a value for the year 2015.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;left_join(freedom_index, gdp_pcap, by = c(&amp;quot;ISO&amp;quot; = &amp;quot;Country Code&amp;quot;)) %&amp;gt;% 
  filter(is.na(`2015`)) %&amp;gt;% 
  select(EN_country)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 12 x 1
##    EN_country                           
##    &amp;lt;chr&amp;gt;                                
##  1 Liechtenstein                        
##  2 Andorra                              
##  3 OECS                                 
##  4 Taiwan                               
##  5 Papua New Guinea                     
##  6 Cyprus North                         
##  7 Kosovo                               
##  8 Venezuela                            
##  9 Libya                                
## 10 Syrian Arab Republic                 
## 11 Eritrea                              
## 12 Democratic People&amp;#39;s Republic of Korea&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which leaves us with 166 countries. I could have looked for the data for these countries, but that is outside the reach for this post.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;flag-emoji&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Flag emoji&lt;/h4&gt;
&lt;p&gt;I would like to use the different flag emojis&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## üá¶üá®üá¶üá©üá¶üá™üá¶üá´üá¶üá¨üá¶üáÆüá¶üá±üá¶üá≤üá¶üá¥üá¶üá∂üá¶üá∑üá¶üá∏üá¶üáπüá¶üá∫üá¶üáºüá¶üáΩüá¶üáøüáßüá¶üáßüáßüáßüá©üáßüá™üáßüá´üáßüá¨üáßüá≠üáßüáÆüáßüáØüáßüá±üáßüá≤üáßüá≥üáßüá¥üáßüá∂üáßüá∑üáßüá∏üáßüáπüáßüáªüáßüáºüáßüáæüáßüáøüá®üá¶üá®üá®üá®üá©üá®üá´üá®üá¨üá®üá≠üá®üáÆüá®üá∞üá®üá±üá®üá≤üá®üá≥üá®üá¥üá®üáµüá®üá∑üá®üá∫üá®üáªüá®üáºüá®üáΩüá®üáæüá®üáøüá©üá™üá©üá™üá©üá¨üá©üáØüá©üá∞üá©üá≤üá©üá¥üá©üáøüá™üá¶üá™üá®üá™üá™üá™üá¨üá™üá≠üá™üá∑üá™üá∏üá™üáπüá™üá∫üá´üáÆüá´üáØüá´üá∞üá´üá≤üá´üá¥üá´üá∑üá¨üá¶üá¨üáßüá¨üáßüá¨üá©üá¨üá™üá¨üá´üá¨üá¨üá¨üá≠üá¨üáÆüá¨üá±üá¨üá≤üá¨üá≥üá¨üáµüá¨üá∂üá¨üá∑üá¨üá∏üá¨üáπüá¨üá∫üá¨üáºüá¨üáæüá≠üá∞üá≠üá≤üá≠üá≥üá≠üá∑üá≠üáπüá≠üá∫üáÆüá®üáÆüá©üáÆüá™üáÆüá±üáÆüá≤üáÆüá≥üáÆüá¥üáÆüá∂üáÆüá∑üáÆüá∏üáÆüáπüáØüá™üáØüá≤üáØüá¥üáØüáµüá∞üá™üá∞üá¨üá∞üá≠üá∞üáÆüá∞üá≤üá∞üá≥üá∞üáµüá∞üá∑üá∞üáºüá∞üáæüá∞üáøüá±üá¶üá±üáßüá±üá®üá±üáÆüá±üá∞üá±üá∑üá±üá∏üá±üáπüá±üá∫üá±üáªüá±üáæüá≤üá¶üá≤üá®üá≤üá©üá≤üá™üá≤üá´üá≤üá¨üá≤üá≠üá≤üá∞üá≤üá±üá≤üá≤üá≤üá≥üá≤üá¥üá≤üáµüá≤üá∂üá≤üá∑üá≤üá∏üá≤üáπüá≤üá∫üá≤üáªüá≤üáºüá≤üáΩüá≤üáæüá≤üáøüá≥üá¶üá≥üá®üá≥üá™üá≥üá´üá≥üá¨üá≥üáÆüá≥üá±üá≥üá¥üá≥üáµüá≥üá∑üá≥üá∫üá≥üáøüá¥üá≤üáµüá¶üáµüá™üáµüá´üáµüá¨üáµüá≠üáµüá∞üáµüá±üáµüá≤üáµüá≥üáµüá∑üáµüá∏üáµüáπüáµüáºüáµüáæüá∂üá¶üá∑üá™üá∑üá¥üá∑üá∏üá∑üá∫üá∑üáºüá∏üá¶üá∏üáßüá∏üá®üá∏üá©üá∏üá™üá∏üá¨üá∏üá≠üá∏üáÆüá∏üáØüá∏üá∞üá∏üá±üá∏üá≤üá∏üá≥üá∏üá¥üá∏üá∑üá∏üá∏üá∏üáπüá∏üáªüá∏üáΩüá∏üáæüá∏üáøüáπüá¶üáπüá®üáπüá©üáπüá´üáπüá¨üáπüá≠üáπüáØüáπüá∞üáπüá±üáπüá≤üáπüá≥üáπüá¥üáπüá∑üáπüáπüáπüáªüáπüáºüáπüáøüá∫üá¶üá∫üá¨üá∫üá≤üá∫üá≥üá∫üá∏üá∫üá∏üá∫üáæüá∫üáøüáªüá¶üáªüá®üáªüá™üáªüá¨üáªüáÆüáªüá≥üáªüá∫üáºüá´üáºüá∏üáΩüá∞üáæüá™üáæüáπüáøüá¶üáøüá≤üáøüáºüè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åøüè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åøüè¥Û†ÅßÛ†Å¢Û†Å∑Û†Å¨Û†Å≥Û†Åø&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which all can be found with the new emo(ji) package&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;emo::ji_find(&amp;quot;flag&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 264 x 2
##    name                 emoji
##    &amp;lt;chr&amp;gt;                &amp;lt;chr&amp;gt;
##  1 Ascension_Island     üá¶üá®   
##  2 andorra              üá¶üá©   
##  3 united_arab_emirates üá¶üá™   
##  4 afghanistan          üá¶üá´   
##  5 antigua_barbuda      üá¶üá¨   
##  6 anguilla             üá¶üáÆ   
##  7 albania              üá¶üá±   
##  8 armenia              üá¶üá≤   
##  9 angola               üá¶üá¥   
## 10 antarctica           üá¶üá∂   
## # ‚Ä¶ with 254 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we first notice that the first two emojis are not country flags, and that the name of the countries are not on same format as what we have from earlier, so we replace the underscores with spaces and translate everything to lowercase before joining. This time by country name. Again we check for missed joints.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;left_join(freedom_index, gdp_pcap, by = c(&amp;quot;ISO&amp;quot; = &amp;quot;Country Code&amp;quot;)) %&amp;gt;% 
  mutate(EN_country = tolower(EN_country)) %&amp;gt;% 
  left_join(emo::ji_find(&amp;quot;flag&amp;quot;) %&amp;gt;% 
              mutate(name = str_replace_all(name, &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;)) %&amp;gt;% 
              filter(name != &amp;quot;japan&amp;quot;, name != &amp;quot;crossed flags&amp;quot;), 
            by = c(&amp;quot;EN_country&amp;quot; = &amp;quot;name&amp;quot;))  %&amp;gt;% 
  filter(!is.na(`2015`)) %&amp;gt;% 
  filter(is.na(emoji)) %&amp;gt;% 
  select(EN_country)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 22 x 1
##    EN_country            
##    &amp;lt;chr&amp;gt;                 
##  1 germany               
##  2 spain                 
##  3 trinidad and tobago   
##  4 france                
##  5 united kingdom        
##  6 united states         
##  7 italy                 
##  8 south korea           
##  9 bosnia and herzegovina
## 10 japan                 
## # ‚Ä¶ with 12 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which is quite a few. It turns out that the naming convention for the emoji names have not been that consistent, ‚Äúde‚Äù used instead of ‚Äúgermany‚Äù etc. To clear up code later on we make a new emoji tibble with all the changes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;newemoji &amp;lt;- emo::ji_find(&amp;quot;flag&amp;quot;) %&amp;gt;% 
              mutate(name = str_replace_all(string = name,
                                            pattern = &amp;quot;_&amp;quot;,
                                            replacement =  &amp;quot; &amp;quot;)) %&amp;gt;% 
  filter(name != &amp;quot;japan&amp;quot;, name != &amp;quot;crossed flags&amp;quot;) %&amp;gt;% 
  mutate(name = str_replace(name, &amp;quot;^de$&amp;quot;, &amp;quot;germany&amp;quot;),
         name = str_replace(name, &amp;quot;^es$&amp;quot;, &amp;quot;spain&amp;quot;),
         name = str_replace(name, &amp;quot;^trinidad tobago$&amp;quot;, &amp;quot;trinidad and tobago&amp;quot;),
         name = str_replace(name, &amp;quot;^fr$&amp;quot;, &amp;quot;france&amp;quot;),
         name = str_replace(name, &amp;quot;^uk$&amp;quot;, &amp;quot;united kingdom&amp;quot;),
         name = str_replace(name, &amp;quot;^us$&amp;quot;, &amp;quot;united states&amp;quot;),
         name = str_replace(name, &amp;quot;^it$&amp;quot;, &amp;quot;italy&amp;quot;),
         name = str_replace(name, &amp;quot;^kr$&amp;quot;, &amp;quot;south korea&amp;quot;),
         name = str_replace(name, &amp;quot;^bosnia herzegovina$&amp;quot;, &amp;quot;bosnia and herzegovina&amp;quot;),
         name = str_replace(name, &amp;quot;^guinea bissau$&amp;quot;, &amp;quot;guinea-bissau&amp;quot;),
         name = str_replace(name, &amp;quot;^cote divoire$&amp;quot;, &amp;quot;ivory coast&amp;quot;),
         name = str_replace(name, &amp;quot;^timor leste$&amp;quot;, &amp;quot;east timor&amp;quot;),
         name = str_replace(name, &amp;quot;^congo brazzaville$&amp;quot;, &amp;quot;congo&amp;quot;),
         name = str_replace(name, &amp;quot;^palestinian territories$&amp;quot;, &amp;quot;palestine&amp;quot;),
         name = str_replace(name, &amp;quot;^ru$&amp;quot;, &amp;quot;russian federation&amp;quot;),
         name = str_replace(name, &amp;quot;^congo kinshasa$&amp;quot;, &amp;quot;the democratic republic of the congo&amp;quot;),
         name = str_replace(name, &amp;quot;^tr$&amp;quot;, &amp;quot;turkey&amp;quot;),
         name = str_replace(name, &amp;quot;^brunei$&amp;quot;, &amp;quot;brunei darussalam&amp;quot;),
         name = str_replace(name, &amp;quot;^laos$&amp;quot;, &amp;quot;lao people&amp;#39;s democratic republic&amp;quot;),
         name = str_replace(name, &amp;quot;^cn$&amp;quot;, &amp;quot;china&amp;quot;),
         name = str_replace(name, &amp;quot;^jp$&amp;quot;, &amp;quot;japan&amp;quot;))
newemoji&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 264 x 2
##    name                 emoji
##    &amp;lt;chr&amp;gt;                &amp;lt;chr&amp;gt;
##  1 Ascension Island     üá¶üá®   
##  2 andorra              üá¶üá©   
##  3 united arab emirates üá¶üá™   
##  4 afghanistan          üá¶üá´   
##  5 antigua barbuda      üá¶üá¨   
##  6 anguilla             üá¶üáÆ   
##  7 albania              üá¶üá±   
##  8 armenia              üá¶üá≤   
##  9 angola               üá¶üá¥   
## 10 antarctica           üá¶üá∂   
## # ‚Ä¶ with 254 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;plotting-it-all-with-ggplot2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Plotting it all with ggplot2&lt;/h3&gt;
&lt;p&gt;Now with all the preparation done we do a naive first plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;left_join(freedom_index, gdp_pcap, by = c(&amp;quot;ISO&amp;quot; = &amp;quot;Country Code&amp;quot;)) %&amp;gt;% 
  mutate(EN_country = tolower(EN_country)) %&amp;gt;% 
  left_join(newemoji, by = c(&amp;quot;EN_country&amp;quot; = &amp;quot;name&amp;quot;)) %&amp;gt;% 
  ggplot(aes(x = `2015`, y = `Overall Score 2016`)) +
  geom_text(aes(label = emoji))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Removed 14 rows containing missing values (geom_text).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2017-04-26-2017-world-press-freedom-index-with-emojis/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;But wait, we have a couple of problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The emojis don‚Äôt show up.&lt;/li&gt;
&lt;li&gt;The freedom score is 100 times to much as the actual.&lt;/li&gt;
&lt;li&gt;The gdp_pcap is quite skewed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But these are not problems too great for us. It turns out that R‚Äôs graphical devices don‚Äôt support AppleColorEmoji font. We can alleviate the that problem by saving the plot as a svg file. And we will do a simple log transformation of the gdp_pcap.&lt;/p&gt;
&lt;p&gt;Our final plot is thus the following:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;left_join(freedom_index, gdp_pcap, by = c(&amp;quot;ISO&amp;quot; = &amp;quot;Country Code&amp;quot;)) %&amp;gt;% 
  mutate(EN_country = tolower(EN_country),
         `Overall Score 2016` = `Overall Score 2016` / 100) %&amp;gt;% 
  left_join(newemoji, by = c(&amp;quot;EN_country&amp;quot; = &amp;quot;name&amp;quot;)) %&amp;gt;% 
  ggplot(aes(x = `2015`, y = `Overall Score 2016`)) +
  stat_smooth(method = &amp;quot;lm&amp;quot;, color = &amp;quot;grey&amp;quot;, se = FALSE) +
  geom_text(aes(label = emoji)) +
  scale_x_log10() +
  annotation_logticks(sides = &amp;quot;b&amp;quot;)  +
  theme_ipsum() +
  labs(x = &amp;quot;GDP per capita (current US$)&amp;quot;, y = &amp;quot;2017 World Press Freedom Index&amp;quot;,
       title = &amp;quot;Countries with high GDP per capita\ntend to have low Freedom Index&amp;quot;,
       subtitle = &amp;quot;Visualized with emojis&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;final.svg&#34; width=&#34;700px&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
